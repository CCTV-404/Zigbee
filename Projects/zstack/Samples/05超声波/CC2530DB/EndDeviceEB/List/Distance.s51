///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.3.10338/W32 for 8051        25/Jul/2015  11:14:27 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\Source\Distance.c                         /
//    Command line       =  -f C:\ZStack-CC2530-2.5.1a\Projects\zstack\Sample /
//                          s\05³¬Éù²¨\CC2530DB\..\..\..\Tools\CC2530DB\f8wEn /
//                          dev.cfg (-DCPU32MHZ -DROOT=__near_func            /
//                          -DMAC_CFG_TX_DATA_MAX=3 -DMAC_CFG_TX_MAX=6        /
//                          -DMAC_CFG_RX_MAX=3) -f C:\ZStack-CC2530-2.5.1a\Pr /
//                          ojects\zstack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\ /
//                          Tools\CC2530DB\f8wConfig.cfg (-DZIGBEEPRO         /
//                          -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR      /
//                          -DDEFAULT_CHANLIST=0x00100000                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 C:\ZStack-CC2530-2.5.1a\Pr /
//                          ojects\zstack\Samples\05³¬Éù²¨\Source\Distance.c  /
//                          -D NWK_AUTO_POLL -D ZTOOL_P1 -D MT_TASK -D        /
//                          MT_SYS_FUNC -D MT_ZDO_FUNC -D                     /
//                          LCD_SUPPORTED=DEBUG -D xPOWER_SAVING -lC          /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\EndDeviceEB\List\ -lA            /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\EndDeviceEB\List\                /
//                          --diag_suppress Pe001,Pa010 -o                    /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\EndDeviceEB\Obj\ -e              /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\ -I C:\ZStack-CC2530-2.5.1a\Proj /
//                          ects\zstack\Samples\05³¬Éù²¨\CC2530DB\..\Source\  /
//                          -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\Sample /
//                          s\05³¬Éù²¨\CC2530DB\..\..\..\ZMain\TI2530DB\ -I   /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\hal\in /
//                          clude\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Compone /
//                          nts\hal\target\CC2530EB\ -I                       /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\mac\in /
//                          clude\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack /
//                          \Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Compone /
//                          nts\mac\high_level\ -I C:\ZStack-CC2530-2.5.1a\Pr /
//                          ojects\zstack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\ /
//                          ..\..\Components\mac\low_level\srf04\ -I          /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\mac\lo /
//                          w_level\srf04\single_chip\ -I                     /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\mt\    /
//                          -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\Sample /
//                          s\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\osa /
//                          l\include\ -I C:\ZStack-CC2530-2.5.1a\Projects\zs /
//                          tack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Com /
//                          ponents\services\saddr\ -I                        /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\servic /
//                          es\sdata\ -I C:\ZStack-CC2530-2.5.1a\Projects\zst /
//                          ack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Comp /
//                          onents\stack\af\ -I C:\ZStack-CC2530-2.5.1a\Proje /
//                          cts\zstack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\ /
//                          ..\Components\stack\nwk\ -I                       /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\stack\ /
//                          sapi\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\ /
//                          Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Componen /
//                          ts\stack\sec\ -I C:\ZStack-CC2530-2.5.1a\Projects /
//                          \zstack\Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\ /
//                          Components\stack\sys\ -I                          /
//                          C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\..\..\..\..\..\Components\stack\ /
//                          zdo\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstack\S /
//                          amples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Component /
//                          s\zmac\ -I C:\ZStack-CC2530-2.5.1a\Projects\zstac /
//                          k\Samples\05³¬Éù²¨\CC2530DB\..\..\..\..\..\Compon /
//                          ents\zmac\f8w\ -Ohz                               /
//    List file          =  C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\0 /
//                          5³¬Éù²¨\CC2530DB\EndDeviceEB\List\Distance.s51    /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Distance

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?FLT_ADD
        EXTERN ?FLT_DIV
        EXTERN ?FLT_MUL
        EXTERN ?INTERRUPT_ENTER_XSP
        EXTERN ?INTERRUPT_LEAVE_XSP
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?R2345_FLT_TO_L
        EXTERN ?S_DIV_MOD
        EXTERN ?UL_TO_FLT
        EXTERN ?V0
        EXTERN ?XLOAD_R2345
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC ??Distance_Init?relay
        FUNCTION ??Distance_Init?relay,0203H
        PUBLIC ??Distance_ProcessEvent?relay
        FUNCTION ??Distance_ProcessEvent?relay,0203H
        PUBLIC ??Distance_SendTheMessage?relay
        FUNCTION ??Distance_SendTheMessage?relay,0203H
        PUBWEAK `??halKeyPort1Isr??INTVEC 123`
        PUBLIC Distance_ClusterList
        PUBLIC Distance_Init
        FUNCTION Distance_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC Distance_NwkState
        PUBLIC Distance_ProcessEvent
        FUNCTION Distance_ProcessEvent,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC Distance_SendTheMessage
        FUNCTION Distance_SendTheMessage,021203H
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 31, STACK
        PUBLIC Distance_SimpleDesc
        PUBLIC Distance_TaskID
        PUBLIC Distance_TransID
        PUBLIC Distance_epDesc
        PUBLIC H
        PUBLIC H1
        PUBLIC L
        PUBLIC L1
        PUBWEAK P1IFG
        PUBWEAK T1CNTH
        PUBWEAK T1CNTL
        PUBLIC TempDATA
        PUBWEAK _A_IRCON2
        PUBWEAK _A_P1
        PUBWEAK __Constant_3f000000
        PUBWEAK __Constant_43aa0000
        PUBWEAK __Constant_46ea6000
        PUBLIC dis
        PUBLIC distance
        PUBLIC fDistance
        PUBLIC halKeyPort1Isr
        FUNCTION halKeyPort1Isr,021233H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC `s`
        PUBLIC theMessageData
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
afRegister          SYMBOL "afRegister"
osal_msg_receive    SYMBOL "osal_msg_receive"
osal_set_event      SYMBOL "osal_set_event"
osal_msg_deallocate SYMBOL "osal_msg_deallocate"
Init_GPIO           SYMBOL "Init_GPIO"
Init_Key1           SYMBOL "Init_Key1"
Delay_10us          SYMBOL "Delay_10us"
Delayms             SYMBOL "Delayms"
osal_start_timerEx  SYMBOL "osal_start_timerEx"
osal_strlen         SYMBOL "osal_strlen"
AF_DataRequest      SYMBOL "AF_DataRequest"
Init_T1             SYMBOL "Init_T1"
??AF_DataRequest?relay SYMBOL "?relay", AF_DataRequest
??Delay_10us?relay  SYMBOL "?relay", Delay_10us
??Delayms?relay     SYMBOL "?relay", Delayms
??Init_GPIO?relay   SYMBOL "?relay", Init_GPIO
??Init_Key1?relay   SYMBOL "?relay", Init_Key1
??Init_T1?relay     SYMBOL "?relay", Init_T1
??afRegister?relay  SYMBOL "?relay", afRegister
??osal_msg_deallocate?relay SYMBOL "?relay", osal_msg_deallocate
??osal_msg_receive?relay SYMBOL "?relay", osal_msg_receive
??osal_set_event?relay SYMBOL "?relay", osal_set_event
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
??osal_strlen?relay SYMBOL "?relay", osal_strlen
Distance_Init       SYMBOL "Distance_Init"
??Distance_Init?relay SYMBOL "?relay", Distance_Init
Distance_ProcessEvent SYMBOL "Distance_ProcessEvent"
??Distance_ProcessEvent?relay SYMBOL "?relay", Distance_ProcessEvent
Distance_SendTheMessage SYMBOL "Distance_SendTheMessage"
??Distance_SendTheMessage?relay SYMBOL "?relay", Distance_SendTheMessage
halKeyPort1Isr      SYMBOL "halKeyPort1Isr"
`??halKeyPort1Isr??INTVEC 123` SYMBOL "??INTVEC 123", halKeyPort1Isr

        EXTERN afRegister
        FUNCTION afRegister,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_receive
        FUNCTION osal_msg_receive,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_deallocate
        FUNCTION osal_msg_deallocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Init_GPIO
        FUNCTION Init_GPIO,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Init_Key1
        FUNCTION Init_Key1,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Delay_10us
        FUNCTION Delay_10us,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Delayms
        FUNCTION Delayms,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_strlen
        FUNCTION osal_strlen,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Init_T1
        FUNCTION Init_T1,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ??AF_DataRequest?relay
        FUNCTION ??AF_DataRequest?relay,00H
        EXTERN ??Delay_10us?relay
        FUNCTION ??Delay_10us?relay,00H
        EXTERN ??Delayms?relay
        FUNCTION ??Delayms?relay,00H
        EXTERN ??Init_GPIO?relay
        FUNCTION ??Init_GPIO?relay,00H
        EXTERN ??Init_Key1?relay
        FUNCTION ??Init_Key1?relay,00H
        EXTERN ??Init_T1?relay
        FUNCTION ??Init_T1?relay,00H
        EXTERN ??afRegister?relay
        FUNCTION ??afRegister?relay,00H
        EXTERN ??osal_msg_deallocate?relay
        FUNCTION ??osal_msg_deallocate?relay,00H
        EXTERN ??osal_msg_receive?relay
        FUNCTION ??osal_msg_receive?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??osal_strlen?relay
        FUNCTION ??osal_strlen?relay,00H

// C:\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\05³¬Éù²¨\Source\Distance.c
//    1 /******************************************************************************
//    2   Filename:       Distance.c
//    3   Revised:        $Date: 2012-03-07 01:04:58 -0800 (Wed, 07 Mar 2012) $
//    4   Revision:       $Revision: 29656 $
//    5 
//    6   Description:    Generic Application (no Profile).
//    7 
//    8 
//    9   Copyright 2004-2012 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS?WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 ******************************************************************************/
//   39 
//   40 /*********************************************************************
//   41   This application isn't intended to do anything useful, it is
//   42   intended to be a simple example of an application's structure.
//   43 
//   44   This application sends "Hello World" to another "Generic"
//   45   application every 5 seconds.  The application will also
//   46   receives "Hello World" packets.
//   47 
//   48   The "Hello World" messages are sent/received as MSG type message.
//   49 
//   50   This applications doesn't have a profile, so it handles everything
//   51   directly - itself.
//   52 
//   53   Key control:
//   54     SW1:
//   55     SW2:  initiates end device binding
//   56     SW3:
//   57     SW4:  initiates a match description request
//   58 *********************************************************************/
//   59 
//   60 /*********************************************************************
//   61  * INCLUDES
//   62  */
//   63 #include "OSAL.h"
//   64 #include "AF.h"
//   65 #include "ZDApp.h"
//   66 #include "ZDObject.h"
//   67 #include "ZDProfile.h"
//   68 #include <string.h>
//   69 //#include "Common.h"
//   70 #include "DebugTrace.h"
//   71 #include "Distance.h"
//   72 #include "MT.h"
//   73 
//   74 #if !defined( WIN32 )
//   75   #include "OnBoard.h"

        ASEGN SFR_AN:DATA:NOROOT,08aH
// unsigned char volatile __sfr P1IFG
P1IFG:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e2H
// unsigned char volatile __sfr T1CNTL
T1CNTL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e3H
// unsigned char volatile __sfr T1CNTH
T1CNTH:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0e8H
// union <unnamed> volatile __sfr _A_IRCON2
_A_IRCON2:
        DATA8
        DS 1
//   76 #endif
//   77 
//   78 /* HAL */
//   79 #include "hal_lcd.h"
//   80 #include "hal_led.h"
//   81 #include "hal_key.h"
//   82 #include "hal_uart.h"
//   83 #include "mt_uart.h"
//   84 #include "HC_SR04.h"
//   85 
//   86 #define SEND_DATA_EVENT 0x01

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   87 float fDistance;
fDistance:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   88 float  distance;
distance:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//   89 float s;
`s`:
        DS 4
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   90 int dis;
dis:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   91 uint H;
H:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   92 uint H1;
H1:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   93 uint L;
L:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//   94 uint L1;
L1:
        DS 2
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//   95 unsigned char theMessageData[10]="EndDevice";
theMessageData:
        DATA8
        DS 10
        REQUIRE `?<Initializer for theMessageData>`
        REQUIRE __INIT_XDATA_I

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA16
//   96 const cId_t Distance_ClusterList[Distance_MAX_CLUSTERS] =
Distance_ClusterList:
        DW 5
//   97 {
//   98   Distance_CLUSTERID
//   99 };
//  100 
//  101 
//  102 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  103 const SimpleDescriptionFormat_t Distance_SimpleDesc =
Distance_SimpleDesc:
        DB 10
        DATA16
        DW 3844
        DW 1
        DATA8
        DB 0
        DB 0
        DATA16
        DW 0H
        DATA8
        DB 1
        DATA16
        DW Distance_ClusterList
//  104 {
//  105   Distance_ENDPOINT,              //  int Endpoint;
//  106   Distance_PROFID,                //  uint16 AppProfId[2];
//  107   Distance_DEVICEID,              //  uint16 AppDeviceId[2];
//  108   Distance_DEVICE_VERSION,        //  int   AppDevVer:4;
//  109   Distance_FLAGS,                 //  int   AppFlags:4;
//  110   
//  111   
//  112   0,          //  byte  AppNumInClusters;
//  113   (cId_t *)NULL,  //  byte *pAppInClusterList;
//  114   Distance_MAX_CLUSTERS,          //  byte  AppNumInClusters;
//  115   (cId_t *)Distance_ClusterList   //  byte *pAppInClusterList;
//  116 };
//  117 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  118 unsigned char TempDATA;
TempDATA:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  119 endPointDesc_t Distance_epDesc;
Distance_epDesc:
        DS 6
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  120 byte Distance_TaskID;
Distance_TaskID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  121 byte Distance_TransID;
Distance_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  122 devStates_t Distance_NwkState;
Distance_NwkState:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  123 void Distance_MessageMSGCB(afIncomingMSGPacket_t *MSGpkt);
//  124 void Distance_SendTheMessage(unsigned char *theMessageData);
//  125 
//  126 
//  127 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  128 void Distance_Init( byte task_id )
Distance_Init:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Distance_Init
        CODE
//  129 {
        FUNCALL Distance_Init, afRegister
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
//  130   halUARTCfg_t uartConfig;//´®¿Ú
//  131     
//  132   Distance_TaskID = task_id;
        MOV     DPTR,#Distance_TaskID
        MOVX    @DPTR,A
//  133   Distance_NwkState=DEV_INIT;
        MOV     DPTR,#Distance_NwkState
        MOV     A,#0x1
        MOVX    @DPTR,A
//  134   Distance_TransID = 0;
        MOV     DPTR,#Distance_TransID
        CLR     A
        MOVX    @DPTR,A
//  135 
//  136   
//  137   Distance_epDesc.endPoint = Distance_ENDPOINT;
        MOV     DPTR,#Distance_epDesc
        MOV     A,#0xa
        MOVX    @DPTR,A
//  138   Distance_epDesc.task_id = &Distance_TaskID;
        INC     DPTR
        MOV     A,#Distance_TaskID & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(Distance_TaskID >> 8) & 0xff
        MOVX    @DPTR,A
//  139   Distance_epDesc.simpleDesc
//  140             = (SimpleDescriptionFormat_t *)&Distance_SimpleDesc;
        INC     DPTR
        MOV     A,#Distance_SimpleDesc & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#(Distance_SimpleDesc >> 8) & 0xff
        MOVX    @DPTR,A
//  141   
//  142   Distance_epDesc.latencyReq = noLatencyReqs;
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  143   afRegister( &Distance_epDesc ); 
        ; Setup parameters for call to function afRegister
        MOV     R2,#Distance_epDesc & 0xff
        MOV     R3,#(Distance_epDesc >> 8) & 0xff
        LCALL   ??afRegister?relay
//  144 
//  145 }
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock0
//  146 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  147 UINT16 Distance_ProcessEvent( byte task_id, UINT16 events )
Distance_ProcessEvent:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function Distance_ProcessEvent
        CODE
//  148 {
        FUNCALL Distance_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, osal_msg_deallocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, osal_msg_receive
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, Init_GPIO
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, Init_Key1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, Delay_10us
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, Delayms
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_ProcessEvent, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  149   afIncomingMSGPacket_t *MSGpkt;
//  150 
//  151   if ( events & SYS_EVENT_MSG )
        ANL     A,#0x80
        JZ      ??Distance_ProcessEvent_0
//  152   {
//  153     MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Distance_TaskID );
        ; Setup parameters for call to function osal_msg_receive
        SJMP    ??Distance_ProcessEvent_1
//  154     while ( MSGpkt )
//  155     {
//  156       switch ( MSGpkt->hdr.event )
??Distance_ProcessEvent_2:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        XRL     A,#0xd1
        JNZ     ??Distance_ProcessEvent_3
//  157       {
//  158        
//  159           case ZDO_STATE_CHANGE:
//  160             Distance_NwkState = (devStates_t)(MSGpkt->hdr.status);
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPTR,#Distance_NwkState
        MOVX    @DPTR,A
//  161             if(Distance_NwkState==DEV_END_DEVICE)
        XRL     A,#0x6
        JNZ     ??Distance_ProcessEvent_3
//  162             {
//  163               P1_0=~P1_0;
        SETB    B.0
        MOV     C,0x90.0
        JNB     B.0,??Distance_ProcessEvent_4
        CPL     C
??Distance_ProcessEvent_4:
        MOV     0x90.0,C
//  164               osal_set_event(Distance_TaskID,SEND_DATA_EVENT);
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#Distance_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
//  165             }
//  166             break;
//  167             
//  168           default:
//  169             break;
//  170       }
//  171       osal_msg_deallocate( (uint8 *)MSGpkt );
??Distance_ProcessEvent_3:
        ; Setup parameters for call to function osal_msg_deallocate
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??osal_msg_deallocate?relay
//  172       MSGpkt = (afIncomingMSGPacket_t *)osal_msg_receive( Distance_TaskID );
        ; Setup parameters for call to function osal_msg_receive
??Distance_ProcessEvent_1:
        MOV     DPTR,#Distance_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_msg_receive?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
//  173     }
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     ??Distance_ProcessEvent_2
//  174     // return unprocessed events
//  175     return (events ^ SYS_EVENT_MSG);
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        XRL     A,#0x80
??Distance_ProcessEvent_5:
        MOV     R3,A
        SJMP    ??Distance_ProcessEvent_6
//  176   }
//  177   if(events&SEND_DATA_EVENT)
??Distance_ProcessEvent_0:
        MOV     A,R6
        MOV     C,0xE0 /* A   */.0
        JNC     ??Distance_ProcessEvent_7
//  178   {
//  179     Init_GPIO();
        ; Setup parameters for call to function Init_GPIO
        LCALL   ??Init_GPIO?relay
//  180     Init_Key1();
        ; Setup parameters for call to function Init_Key1
        LCALL   ??Init_Key1?relay
//  181     TRIG =0;      //TRIG´¥·¢²â¾à
        CLR     0x90.7
//  182     Delay_10us(); //¸øÖÁÉÙ10usµÄ¸ßµçÆ½ÐÅºÅ
        ; Setup parameters for call to function Delay_10us
        LCALL   ??Delay_10us?relay
//  183     TRIG =1;      //TRIG´¥·¢ÖÕÖ¹
        SETB    0x90.7
//  184     Delayms(50);//ÑÓÊ±ÖÜÆÚ
        ; Setup parameters for call to function Delayms
        MOV     R2,#0x32
        MOV     R3,#0x0
        LCALL   ??Delayms?relay
//  185     osal_start_timerEx(Distance_TaskID,SEND_DATA_EVENT,3000);
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x48
        MOV     R5,#0xb
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#Distance_TaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
//  186     return(events^SEND_DATA_EVENT);
        MOV     A,R6
        XRL     A,#0x1
        MOV     R2,A
        MOV     A,R7
        SJMP    ??Distance_ProcessEvent_5
//  187   }
//  188   return 0;
??Distance_ProcessEvent_7:
        MOV     R2,#0x0
        MOV     R3,#0x0
??Distance_ProcessEvent_6:
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock1
        REQUIRE _A_P1
//  189 }
//  190 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  191 void Distance_SendTheMessage(unsigned char *theMessageData)
Distance_SendTheMessage:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI Function Distance_SendTheMessage
        CODE
//  192 { 
        FUNCALL Distance_SendTheMessage, osal_strlen
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL Distance_SendTheMessage, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  193   afAddrType_t my_DstAddr;
//  194   my_DstAddr.addrMode=(afAddrMode_t)Addr16Bit;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  195   my_DstAddr.endPoint=Distance_ENDPOINT;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0xa
        MOVX    @DPTR,A
//  196   my_DstAddr.addr.shortAddr=0x0000; 
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  197   AF_DataRequest(&my_DstAddr
//  198   ,&Distance_epDesc
//  199   ,Distance_CLUSTERID
//  200   ,osal_strlen("EndDevice")+1
//  201   ,theMessageData
//  202   ,&Distance_TransID
//  203   ,AF_DISCV_ROUTE
//  204   ,AF_DEFAULT_RADIUS);
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V0 + 0,#0x1e
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
        CFI CFA_XSP16 add(XSP16, 23)
        MOV     ?V0 + 0,#Distance_TransID & 0xff
        MOV     ?V0 + 1,#(Distance_TransID >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 25)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 27)
        ; Setup parameters for call to function osal_strlen
        MOV     R2,#`?<Constant "EndDevice">` & 0xff
        MOV     R3,#(`?<Constant "EndDevice">` >> 8) & 0xff
        LCALL   ??osal_strlen?relay
        MOV     A,R2
        ADD     A,#0x1
        MOV     ?V0 + 0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 0,#0x5
        MOV     ?V0 + 1,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
        CFI CFA_XSP16 add(XSP16, 31)
        MOV     R1,#0x20
        MOV     R4,#Distance_epDesc & 0xff
        MOV     R5,#(Distance_epDesc >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AF_DataRequest?relay
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 22)
//  205 }
        MOV     A,#0xc
        LCALL   ?DEALLOC_XSTACK8
        CFI CFA_XSP16 add(XSP16, 10)
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock2
//  206 
//  207 /*********************************************************************
//  208  */

        RSEG NEAR_CODE:CODE:NOROOT(0)
//  209 HAL_ISR_FUNCTION( halKeyPort1Isr, P1INT_VECTOR )
halKeyPort1Isr:
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function halKeyPort1Isr
        CODE
//  210 {
        FUNCALL halKeyPort1Isr, Init_T1
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL halKeyPort1Isr, Distance_SendTheMessage
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    A
        CFI A Frame(CFA_SP, 3)
        CFI CFA_SP SP+-3
        MOV     A,#-0x15
        LCALL   ?INTERRUPT_ENTER_XSP
        CFI B load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI PSW load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI R5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
        CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-12)))
        CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-13)))
        CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-14)))
        CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-15)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-16)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-17)))
        CFI R3 load(1, XDATA, add(CFA_XSP16, literal(-18)))
        CFI R2 load(1, XDATA, add(CFA_XSP16, literal(-19)))
        CFI R1 load(1, XDATA, add(CFA_XSP16, literal(-20)))
        CFI R0 load(1, XDATA, add(CFA_XSP16, literal(-21)))
        CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 0
//  211   
//  212   if (HAL_KEY_SW_7_PXIFG & HAL_KEY_SW_7_BIT)
        MOV     A,0x8a
        MOV     C,0xE0 /* A   */.3
        JC      $+5
        LJMP    ??halKeyPort1Isr_0
//  213   {
//  214     Init_T1();
        ; Setup parameters for call to function Init_T1
        LCALL   ??Init_T1?relay
//  215     while(ECHO);
??halKeyPort1Isr_1:
        MOV     C,0x90.3
        JC      ??halKeyPort1Isr_1
//  216     L=T1CNTL; 
        MOV     A,0xe2
        MOV     DPTR,#L
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  217     H=T1CNTH;
        MOV     A,0xe3
        MOV     DPTR,#H
        MOVX    @DPTR,A
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
//  218     s=256*H;
        MOV     DPTR,#H
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        CLR     A
        XCH     A,?V0 + 0
        MOV     ?V0 + 1,A
        CLR     A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#`s`
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  219     distance=((s+L)*340)/30000.0;
        MOV     DPTR,#L
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        CLR     A
        MOV     ?V0 + 1,A
        MOV     ?V0 + 2,A
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 0
        LCALL   ?UL_TO_FLT
        MOV     DPTR,#`s`
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_ADD
        MOV     DPTR,#__Constant_43aa0000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#__Constant_46ea6000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_DIV
        MOV     DPTR,#distance
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  220     fDistance=distance/2;
        MOV     DPTR,#distance
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_X
        MOV     DPTR,#__Constant_3f000000
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_X
        MOV     R0,#?V0 + 0
        MOV     R1,#?V0 + 4
        LCALL   ?FLT_MUL
        MOV     DPTR,#fDistance
        MOV     R0,#?V0 + 0
        LCALL   ?L_MOV_TO_X
//  221     theMessageData[0]='0'+(int)fDistance/100;
        MOV     DPTR,#fDistance
        LCALL   ?XLOAD_R2345
        LCALL   ?R2345_FLT_TO_L
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     R2,#0x64
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R0
        ADD     A,#0x30
        MOV     DPTR,#theMessageData
        MOVX    @DPTR,A
//  222     theMessageData[1]='0'+((int)fDistance-(int)fDistance/100*100)/10;
        MOV     A,R0
        MOV     B,#0x64
        MUL     AB
        MOV     R0,A
        MOV     R2,B
        MOV     B,#0x64
        MOV     A,R1
        MUL     AB
        ADD     A,R2
        MOV     R1,A
        MOV     A,R4
        CLR     C
        SUBB    A,R0
        MOV     R0,A
        MOV     A,R5
        SUBB    A,R1
        MOV     R1,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R0
        ADD     A,#0x30
        INC     DPTR
        MOVX    @DPTR,A
//  223     theMessageData[2]='0'+(int)fDistance%10;
        MOV     A,R4
        MOV     R0,A
        MOV     A,R5
        MOV     R1,A
        MOV     R2,#0xa
        MOV     R3,#0x0
        LCALL   ?S_DIV_MOD
        MOV     A,R2
        ADD     A,#0x30
        INC     DPTR
        MOVX    @DPTR,A
//  224     Distance_SendTheMessage(theMessageData);
        ; Setup parameters for call to function Distance_SendTheMessage
        MOV     R2,#theMessageData & 0xff
        MOV     R3,#(theMessageData >> 8) & 0xff
        LCALL   ??Distance_SendTheMessage?relay
//  225     T1CNTL=0x0000;
        MOV     0xe2,#0x0
//  226     T1CNTH=0x0000;
        MOV     0xe3,#0x0
//  227     P1IFG = 0;             //ÇåÖÐ¶Ï±êÖ¾ 
        MOV     0x8a,#0x0
//  228     P1IF = 0;             //ÇåÖÐ¶Ï±êÖ¾ 
        CLR     0xe8.3
//  229   }
//  230 }
??halKeyPort1Isr_0:
        MOV     R7,#0x8
        LJMP    ?INTERRUPT_LEAVE_XSP
        CFI EndBlock cfiBlock3
        REQUIRE P1IFG
        REQUIRE _A_P1
        REQUIRE T1CNTL
        REQUIRE T1CNTH
        REQUIRE _A_IRCON2

        COMMON INTVEC:CODE:ROOT(0)
        ORG 123
`??halKeyPort1Isr??INTVEC 123`:
        LJMP       (halKeyPort1Isr)

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for theMessageData>`:
        DB "EndDevice"

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Distance_Init?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Distance_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Distance_ProcessEvent?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Distance_ProcessEvent

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Distance_SendTheMessage?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Distance_SendTheMessage

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant "EndDevice">`:
        DB "EndDevice"

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_43aa0000:
        DD 43AA0000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_46ea6000:
        DD 46EA6000H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3f000000:
        DD 3F000000H

        END
// 
// 336 bytes in segment BANKED_CODE
//  18 bytes in segment BANK_RELAYS
//   3 bytes in segment INTVEC
// 276 bytes in segment NEAR_CODE
//   5 bytes in segment SFR_AN
//  10 bytes in segment XDATA_I
//  10 bytes in segment XDATA_ID
//  36 bytes in segment XDATA_ROM_C
//  32 bytes in segment XDATA_Z
// 
// 640 bytes of CODE  memory (+  3 bytes shared)
//  24 bytes of CONST memory (+ 12 bytes shared)
//   0 bytes of DATA  memory (+  5 bytes shared)
//  42 bytes of XDATA memory
//
//Errors: none
//Warnings: none
