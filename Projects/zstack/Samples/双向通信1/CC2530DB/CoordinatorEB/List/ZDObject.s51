///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.20.2.41139 for 8051            23/Nov/2016  20:10:02 /
// Copyright 2004-2013 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//                                                                            /
//    Source file        =  E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Components\stack\zdo\ZDObject.c           /
//    Command line       =  -f E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2 /
//                          530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC25 /
//                          30DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg         /
//                          (-DCPU32MHZ -DROOT=__near_func                    /
//                          -DMAC_CFG_APP_PENDING_QUEUE=TRUE                  /
//                          -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8        /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK)   /
//                          -f E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2 /
//                          530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC25 /
//                          30DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg        /
//                          (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0     /
//                          -DREFLECTOR -DDEFAULT_CHANLIST=0x00100000         /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=FALSE -DPOLL_RATE=1000       /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 E:\Lib\micro-electromechan /
//                          ical\Ê±ÑÓ\ZStack-CC2530-2.5.1a\Components\stack\z /
//                          do\ZDObject.c -D ZIGBEEPRO -D NWK_AUTO_POLL -D    /
//                          ZTOOL_P2 -D MT_TASK -D MT_SYS_FUNC -D             /
//                          MT_ZDO_FUNC -lC E:\Lib\micro-electromechanical\Ê± /
//                          ÑÓ\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ë /
//                          «ÏòÍ¨ÐÅ1\CC2530DB\CoordinatorEB\List\ -lA         /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\CoordinatorEB\List\ --diag_suppress             /
//                          Pe001,Pa010 -o E:\Lib\micro-electromechanical\Ê±Ñ /
//                          Ó\ZStack-CC2530-2.5.1a\Projects\zstack\Samples\Ë« /
//                          ÏòÍ¨ÐÅ1\CC2530DB\CoordinatorEB\Obj\ -e            /
//                          --no_code_motion --debug --core=plain             /
//                          --dptr=16,1 --data_model=large                    /
//                          --code_model=banked --calling_convention=xdata_re /
//                          entrant --place_constants=data_rom                /
//                          --nr_virtual_regs 16 -I                           /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\ -I E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack- /
//                          CC2530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\C /
//                          C2530DB\..\Source\ -I E:\Lib\micro-electromechani /
//                          cal\Ê±ÑÓ\ZStack-CC2530-2.5.1a\Projects\zstack\Sam /
//                          ples\Ë«ÏòÍ¨ÐÅ1\CC2530DB\..\..\..\ZMain\TI2530DB\  /
//                          -I E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2 /
//                          530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC25 /
//                          30DB\..\..\..\..\..\Components\hal\include\ -I    /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\hal\target\CC2530EB\  /
//                          -I E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2 /
//                          530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC25 /
//                          30DB\..\..\..\..\..\Components\mac\include\ -I    /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\mac\high_level\ -I    /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\mac\low_level\srf04\  /
//                          -I E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2 /
//                          530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC25 /
//                          30DB\..\..\..\..\..\Components\mac\low_level\srf0 /
//                          4\single_chip\ -I E:\Lib\micro-electromechanical\ /
//                          Ê±ÑÓ\ZStack-CC2530-2.5.1a\Projects\zstack\Samples /
//                          \Ë«ÏòÍ¨ÐÅ1\CC2530DB\..\..\..\..\..\Components\mt\ /
//                           -I E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC /
//                          2530-2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2 /
//                          530DB\..\..\..\..\..\Components\osal\include\ -I  /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\services\saddr\ -I    /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\services\sdata\ -I    /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\af\ -I          /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\nwk\ -I         /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sapi\ -I        /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sec\ -I         /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\sys\ -I         /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\stack\zdo\ -I         /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\zmac\ -I              /
//                          E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\..\..\..\..\..\Components\zmac\f8w\ -Ohz        /
//    List file          =  E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530 /
//                          -2.5.1a\Projects\zstack\Samples\Ë«ÏòÍ¨ÐÅ1\CC2530D /
//                          B\CoordinatorEB\List\ZDObject.s51                 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?V0
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTORE_R2345
        EXTERN __INIT_XDATA_Z

        PUBLIC ??NLME_PermitJoiningTimeout?relay
        FUNCTION ??NLME_PermitJoiningTimeout?relay,0203H
        PUBLIC ??ZDMatchSendState?relay
        FUNCTION ??ZDMatchSendState?relay,0203H
        PUBLIC ??ZDO_AnyClusterMatches?relay
        FUNCTION ??ZDO_AnyClusterMatches?relay,0203H
        PUBLIC ??ZDO_BuildSimpleDescBuf?relay
        FUNCTION ??ZDO_BuildSimpleDescBuf?relay,0203H
        FUNCTION ??ZDO_CompareClusterLists?relay,0203H
        PUBLIC ??ZDO_ConvertOTAClusters?relay
        FUNCTION ??ZDO_ConvertOTAClusters?relay,0203H
        FUNCTION ??ZDO_CopyMatchInfo?relay,0203H
        FUNCTION ??ZDO_EndDeviceBindMatchTimeoutCB?relay,0203H
        PUBLIC ??ZDO_EndDeviceTimeoutCB?relay
        FUNCTION ??ZDO_EndDeviceTimeoutCB?relay,0203H
        PUBLIC ??ZDO_Init?relay
        FUNCTION ??ZDO_Init?relay,0203H
        PUBLIC ??ZDO_MatchEndDeviceBind?relay
        FUNCTION ??ZDO_MatchEndDeviceBind?relay,0203H
        PUBLIC ??ZDO_ParseAddrRsp?relay
        FUNCTION ??ZDO_ParseAddrRsp?relay,0203H
        PUBLIC ??ZDO_ParseBindUnbindReq?relay
        FUNCTION ??ZDO_ParseBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ParseDeviceAnnce?relay
        FUNCTION ??ZDO_ParseDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ParseEPListRsp?relay
        FUNCTION ??ZDO_ParseEPListRsp?relay,0203H
        PUBLIC ??ZDO_ParseEndDeviceBindReq?relay
        FUNCTION ??ZDO_ParseEndDeviceBindReq?relay,0203H
        PUBLIC ??ZDO_ParseMgmNwkDiscRsp?relay
        FUNCTION ??ZDO_ParseMgmNwkDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtBindRsp?relay
        FUNCTION ??ZDO_ParseMgmtBindRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtLqiRsp?relay
        FUNCTION ??ZDO_ParseMgmtLqiRsp?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateNotify?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateNotify?relay,0203H
        PUBLIC ??ZDO_ParseMgmtNwkUpdateReq?relay
        FUNCTION ??ZDO_ParseMgmtNwkUpdateReq?relay,0203H
        PUBLIC ??ZDO_ParseMgmtRtgRsp?relay
        FUNCTION ??ZDO_ParseMgmtRtgRsp?relay,0203H
        PUBLIC ??ZDO_ParseNodeDescRsp?relay
        FUNCTION ??ZDO_ParseNodeDescRsp?relay,0203H
        PUBLIC ??ZDO_ParsePowerDescRsp?relay
        FUNCTION ??ZDO_ParsePowerDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseServerDiscRsp?relay
        FUNCTION ??ZDO_ParseServerDiscRsp?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescBuf?relay
        FUNCTION ??ZDO_ParseSimpleDescBuf?relay,0203H
        PUBLIC ??ZDO_ParseSimpleDescRsp?relay
        FUNCTION ??ZDO_ParseSimpleDescRsp?relay,0203H
        PUBLIC ??ZDO_ParseUserDescRsp?relay
        FUNCTION ??ZDO_ParseUserDescRsp?relay,0203H
        PUBLIC ??ZDO_ProcessActiveEPReq?relay
        FUNCTION ??ZDO_ProcessActiveEPReq?relay,0203H
        PUBLIC ??ZDO_ProcessBindUnbindReq?relay
        FUNCTION ??ZDO_ProcessBindUnbindReq?relay,0203H
        PUBLIC ??ZDO_ProcessDeviceAnnce?relay
        FUNCTION ??ZDO_ProcessDeviceAnnce?relay,0203H
        PUBLIC ??ZDO_ProcessMatchDescReq?relay
        FUNCTION ??ZDO_ProcessMatchDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtBindReq?relay
        FUNCTION ??ZDO_ProcessMgmtBindReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtDirectJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtDirectJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLeaveReq?relay
        FUNCTION ??ZDO_ProcessMgmtLeaveReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtLqiReq?relay
        FUNCTION ??ZDO_ProcessMgmtLqiReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtNwkDiscReq?relay
        FUNCTION ??ZDO_ProcessMgmtNwkDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtPermitJoinReq?relay
        FUNCTION ??ZDO_ProcessMgmtPermitJoinReq?relay,0203H
        PUBLIC ??ZDO_ProcessMgmtRtgReq?relay
        FUNCTION ??ZDO_ProcessMgmtRtgReq?relay,0203H
        PUBLIC ??ZDO_ProcessNodeDescReq?relay
        FUNCTION ??ZDO_ProcessNodeDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessPowerDescReq?relay
        FUNCTION ??ZDO_ProcessPowerDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessServerDiscReq?relay
        FUNCTION ??ZDO_ProcessServerDiscReq?relay,0203H
        PUBLIC ??ZDO_ProcessSimpleDescReq?relay
        FUNCTION ??ZDO_ProcessSimpleDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescReq?relay
        FUNCTION ??ZDO_ProcessUserDescReq?relay,0203H
        PUBLIC ??ZDO_ProcessUserDescSet?relay
        FUNCTION ??ZDO_ProcessUserDescSet?relay,0203H
        FUNCTION ??ZDO_RemoveMatchMemory?relay,0203H
        PUBLIC ??ZDO_StartDevice?relay
        FUNCTION ??ZDO_StartDevice?relay,0203H
        PUBLIC ??ZDO_UpdateAddrManager?relay
        FUNCTION ??ZDO_UpdateAddrManager?relay,0203H
        PUBLIC ??ZDO_UpdateNwkStatus?relay
        FUNCTION ??ZDO_UpdateNwkStatus?relay,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,021203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,0203H
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        FUNCTION ZDO_CompareClusterLists,0203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 15, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,0203H
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,021203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 18, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 30, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,021203H
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 27, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 11, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,021203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 36, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 64, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC apsChannelMask
        PUBLIC matchED
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
??APSME_BindRequest?relay SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
??APSME_GetRequest?relay SYMBOL "?relay", APSME_GetRequest
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
??APSME_LookupNwkAddr?relay SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
??APSME_UnBindRequest?relay SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
??APS_ReflectorInit?relay SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
??APS_SetEndDeviceBindTimeout?relay SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
??AddrMgrEntryLookupExt?relay SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
??AddrMgrEntryLookupNwk?relay SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
??AddrMgrEntryUpdate?relay SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
??AddrMgrExtAddrSet?relay SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
??AddrMgrExtAddrValid?relay SYMBOL "?relay", AddrMgrExtAddrValid
AssocChangeNwkAddr  SYMBOL "AssocChangeNwkAddr"
??AssocChangeNwkAddr?relay SYMBOL "?relay", AssocChangeNwkAddr
AssocCount          SYMBOL "AssocCount"
??AssocCount?relay  SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
??AssocFindDevice?relay SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
??AssocGetWithExt?relay SYMBOL "?relay", AssocGetWithExt
AssocRemove         SYMBOL "AssocRemove"
??AssocRemove?relay SYMBOL "?relay", AssocRemove
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
??NLME_CheckNewAddrSet?relay SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_CoordinatorInit SYMBOL "NLME_CoordinatorInit"
??NLME_CoordinatorInit?relay SYMBOL "?relay", NLME_CoordinatorInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
??NLME_DirectJoinRequest?relay SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
??NLME_GetCoordExtAddr?relay SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
??NLME_GetCoordShortAddr?relay SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
??NLME_GetExtAddr?relay SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
??NLME_GetRequest?relay SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
??NLME_GetShortAddr?relay SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
??NLME_IsAddressBroadcast?relay SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
??NLME_LeaveReq?relay SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkFormationRequest SYMBOL "NLME_NetworkFormationRequest"
??NLME_NetworkFormationRequest?relay SYMBOL "?relay", NLME_NetworkFormationRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
??NLME_NwkDiscReq2?relay SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
??NLME_NwkDiscTerm?relay SYMBOL "?relay", NLME_NwkDiscTerm
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
??NLME_PermitJoiningRequest?relay SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_StartRouterRequest SYMBOL "NLME_StartRouterRequest"
??NLME_StartRouterRequest?relay SYMBOL "?relay", NLME_StartRouterRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
??RTG_RemoveRtgEntry?relay SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
??ZDApp_NVUpdate?relay SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
??ZDP_BindUnbindReq?relay SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
??ZDP_EPRsp?relay   SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
??ZDP_GenericRsp?relay SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
??ZDP_MgmtBindRsp?relay SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
??ZDP_MgmtLqiRsp?relay SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
??ZDP_MgmtRtgRsp?relay SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
??ZDP_NodeDescMsg?relay SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
??ZDP_NwkAddrReq?relay SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
??ZDP_PowerDescMsg?relay SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
??ZDP_SendData?relay SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
??ZDP_ServerDiscRsp?relay SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
??ZDP_SimpleDescMsg?relay SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
??ZDP_UserDescRsp?relay SYMBOL "?relay", ZDP_UserDescRsp
ZMacSetReq          SYMBOL "ZMacSetReq"
??ZMacSetReq?relay  SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
??afEndPoints?relay SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
??afFindSimpleDesc?relay SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
??afNumEndPoints?relay SYMBOL "?relay", afNumEndPoints
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
??nwkNeighborRemoveAllStranded?relay SYMBOL "?relay", nwkNeighborRemoveAllStranded
nwkNeighborUpdateNwkAddr SYMBOL "nwkNeighborUpdateNwkAddr"
??nwkNeighborUpdateNwkAddr?relay SYMBOL "?relay", nwkNeighborUpdateNwkAddr
osal_build_uint32   SYMBOL "osal_build_uint32"
??osal_build_uint32?relay SYMBOL "?relay", osal_build_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
??osal_mem_alloc?relay SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
??osal_mem_free?relay SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
??osal_memcpy?relay SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
??osal_memset?relay SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
??osal_msg_allocate?relay SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
??osal_msg_find?relay SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
??osal_msg_send?relay SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
??osal_nv_read?relay SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
??osal_nv_write?relay SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
??osal_set_event?relay SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
??osal_start_timerEx?relay SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
??sAddrExtCmp?relay SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
??sAddrExtCpy?relay SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
??NLME_PermitJoiningTimeout?relay SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
??ZDMatchSendState?relay SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
??ZDO_AnyClusterMatches?relay SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
??ZDO_BuildSimpleDescBuf?relay SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
??ZDO_ConvertOTAClusters?relay SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
??ZDO_EndDeviceTimeoutCB?relay SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
??ZDO_Init?relay    SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
??ZDO_MatchEndDeviceBind?relay SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
??ZDO_ParseAddrRsp?relay SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
??ZDO_ParseBindUnbindReq?relay SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
??ZDO_ParseDeviceAnnce?relay SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
??ZDO_ParseEPListRsp?relay SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
??ZDO_ParseEndDeviceBindReq?relay SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
??ZDO_ParseMgmNwkDiscRsp?relay SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
??ZDO_ParseMgmtBindRsp?relay SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
??ZDO_ParseMgmtLqiRsp?relay SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
??ZDO_ParseMgmtNwkUpdateNotify?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
??ZDO_ParseMgmtNwkUpdateReq?relay SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
??ZDO_ParseMgmtRtgRsp?relay SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
??ZDO_ParseNodeDescRsp?relay SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
??ZDO_ParsePowerDescRsp?relay SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
??ZDO_ParseServerDiscRsp?relay SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
??ZDO_ParseSimpleDescBuf?relay SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
??ZDO_ParseSimpleDescRsp?relay SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
??ZDO_ParseUserDescRsp?relay SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
??ZDO_ProcessActiveEPReq?relay SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
??ZDO_ProcessBindUnbindReq?relay SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
??ZDO_ProcessDeviceAnnce?relay SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
??ZDO_ProcessMatchDescReq?relay SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
??ZDO_ProcessMgmtBindReq?relay SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
??ZDO_ProcessMgmtDirectJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
??ZDO_ProcessMgmtLeaveReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
??ZDO_ProcessMgmtLqiReq?relay SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
??ZDO_ProcessMgmtNwkDiscReq?relay SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
??ZDO_ProcessMgmtPermitJoinReq?relay SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
??ZDO_ProcessMgmtRtgReq?relay SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
??ZDO_ProcessNodeDescReq?relay SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
??ZDO_ProcessPowerDescReq?relay SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
??ZDO_ProcessServerDiscReq?relay SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
??ZDO_ProcessSimpleDescReq?relay SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
??ZDO_ProcessUserDescReq?relay SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
??ZDO_ProcessUserDescSet?relay SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
??ZDO_StartDevice?relay SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
??ZDO_UpdateAddrManager?relay SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
??ZDO_UpdateNwkStatus?relay SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN ??APSME_BindRequest?relay
        FUNCTION ??APSME_BindRequest?relay,00H
        EXTERN ??APSME_GetRequest?relay
        FUNCTION ??APSME_GetRequest?relay,00H
        EXTERN ??APSME_LookupNwkAddr?relay
        FUNCTION ??APSME_LookupNwkAddr?relay,00H
        EXTERN ??APSME_UnBindRequest?relay
        FUNCTION ??APSME_UnBindRequest?relay,00H
        EXTERN ??APS_ReflectorInit?relay
        FUNCTION ??APS_ReflectorInit?relay,00H
        EXTERN ??APS_SetEndDeviceBindTimeout?relay
        FUNCTION ??APS_SetEndDeviceBindTimeout?relay,00H
        EXTERN ??AddrMgrEntryLookupExt?relay
        FUNCTION ??AddrMgrEntryLookupExt?relay,00H
        EXTERN ??AddrMgrEntryLookupNwk?relay
        FUNCTION ??AddrMgrEntryLookupNwk?relay,00H
        EXTERN ??AddrMgrEntryUpdate?relay
        FUNCTION ??AddrMgrEntryUpdate?relay,00H
        EXTERN ??AddrMgrExtAddrSet?relay
        FUNCTION ??AddrMgrExtAddrSet?relay,00H
        EXTERN ??AddrMgrExtAddrValid?relay
        FUNCTION ??AddrMgrExtAddrValid?relay,00H
        EXTERN ??AssocChangeNwkAddr?relay
        FUNCTION ??AssocChangeNwkAddr?relay,00H
        EXTERN ??AssocCount?relay
        FUNCTION ??AssocCount?relay,00H
        EXTERN ??AssocFindDevice?relay
        FUNCTION ??AssocFindDevice?relay,00H
        EXTERN ??AssocGetWithExt?relay
        FUNCTION ??AssocGetWithExt?relay,00H
        EXTERN ??AssocRemove?relay
        FUNCTION ??AssocRemove?relay,00H
        EXTERN ??NLME_CheckNewAddrSet?relay
        FUNCTION ??NLME_CheckNewAddrSet?relay,00H
        EXTERN ??NLME_CoordinatorInit?relay
        FUNCTION ??NLME_CoordinatorInit?relay,00H
        EXTERN ??NLME_DirectJoinRequest?relay
        FUNCTION ??NLME_DirectJoinRequest?relay,00H
        EXTERN ??NLME_GetCoordExtAddr?relay
        FUNCTION ??NLME_GetCoordExtAddr?relay,00H
        EXTERN ??NLME_GetCoordShortAddr?relay
        FUNCTION ??NLME_GetCoordShortAddr?relay,00H
        EXTERN ??NLME_GetExtAddr?relay
        FUNCTION ??NLME_GetExtAddr?relay,00H
        EXTERN ??NLME_GetRequest?relay
        FUNCTION ??NLME_GetRequest?relay,00H
        EXTERN ??NLME_GetShortAddr?relay
        FUNCTION ??NLME_GetShortAddr?relay,00H
        EXTERN ??NLME_IsAddressBroadcast?relay
        FUNCTION ??NLME_IsAddressBroadcast?relay,00H
        EXTERN ??NLME_LeaveReq?relay
        FUNCTION ??NLME_LeaveReq?relay,00H
        EXTERN ??NLME_NetworkFormationRequest?relay
        FUNCTION ??NLME_NetworkFormationRequest?relay,00H
        EXTERN ??NLME_NwkDiscReq2?relay
        FUNCTION ??NLME_NwkDiscReq2?relay,00H
        EXTERN ??NLME_NwkDiscTerm?relay
        FUNCTION ??NLME_NwkDiscTerm?relay,00H
        EXTERN ??NLME_PermitJoiningRequest?relay
        FUNCTION ??NLME_PermitJoiningRequest?relay,00H
        EXTERN ??NLME_StartRouterRequest?relay
        FUNCTION ??NLME_StartRouterRequest?relay,00H
        EXTERN ??RTG_RemoveRtgEntry?relay
        FUNCTION ??RTG_RemoveRtgEntry?relay,00H
        EXTERN ??ZDApp_NVUpdate?relay
        FUNCTION ??ZDApp_NVUpdate?relay,00H
        EXTERN ??ZDP_BindUnbindReq?relay
        FUNCTION ??ZDP_BindUnbindReq?relay,00H
        EXTERN ??ZDP_EPRsp?relay
        FUNCTION ??ZDP_EPRsp?relay,00H
        EXTERN ??ZDP_GenericRsp?relay
        FUNCTION ??ZDP_GenericRsp?relay,00H
        EXTERN ??ZDP_MgmtBindRsp?relay
        FUNCTION ??ZDP_MgmtBindRsp?relay,00H
        EXTERN ??ZDP_MgmtLqiRsp?relay
        FUNCTION ??ZDP_MgmtLqiRsp?relay,00H
        EXTERN ??ZDP_MgmtRtgRsp?relay
        FUNCTION ??ZDP_MgmtRtgRsp?relay,00H
        EXTERN ??ZDP_NodeDescMsg?relay
        FUNCTION ??ZDP_NodeDescMsg?relay,00H
        EXTERN ??ZDP_NwkAddrReq?relay
        FUNCTION ??ZDP_NwkAddrReq?relay,00H
        EXTERN ??ZDP_PowerDescMsg?relay
        FUNCTION ??ZDP_PowerDescMsg?relay,00H
        EXTERN ??ZDP_SendData?relay
        FUNCTION ??ZDP_SendData?relay,00H
        EXTERN ??ZDP_ServerDiscRsp?relay
        FUNCTION ??ZDP_ServerDiscRsp?relay,00H
        EXTERN ??ZDP_SimpleDescMsg?relay
        FUNCTION ??ZDP_SimpleDescMsg?relay,00H
        EXTERN ??ZDP_UserDescRsp?relay
        FUNCTION ??ZDP_UserDescRsp?relay,00H
        EXTERN ??ZMacSetReq?relay
        FUNCTION ??ZMacSetReq?relay,00H
        EXTERN ??afEndPoints?relay
        FUNCTION ??afEndPoints?relay,00H
        EXTERN ??afFindSimpleDesc?relay
        FUNCTION ??afFindSimpleDesc?relay,00H
        EXTERN ??afNumEndPoints?relay
        FUNCTION ??afNumEndPoints?relay,00H
        EXTERN ??nwkNeighborRemoveAllStranded?relay
        FUNCTION ??nwkNeighborRemoveAllStranded?relay,00H
        EXTERN ??nwkNeighborUpdateNwkAddr?relay
        FUNCTION ??nwkNeighborUpdateNwkAddr?relay,00H
        EXTERN ??osal_build_uint32?relay
        FUNCTION ??osal_build_uint32?relay,00H
        EXTERN ??osal_mem_alloc?relay
        FUNCTION ??osal_mem_alloc?relay,00H
        EXTERN ??osal_mem_free?relay
        FUNCTION ??osal_mem_free?relay,00H
        EXTERN ??osal_memcpy?relay
        FUNCTION ??osal_memcpy?relay,00H
        EXTERN ??osal_memset?relay
        FUNCTION ??osal_memset?relay,00H
        EXTERN ??osal_msg_allocate?relay
        FUNCTION ??osal_msg_allocate?relay,00H
        EXTERN ??osal_msg_find?relay
        FUNCTION ??osal_msg_find?relay,00H
        EXTERN ??osal_msg_send?relay
        FUNCTION ??osal_msg_send?relay,00H
        EXTERN ??osal_nv_read?relay
        FUNCTION ??osal_nv_read?relay,00H
        EXTERN ??osal_nv_write?relay
        FUNCTION ??osal_nv_write?relay,00H
        EXTERN ??osal_set_event?relay
        FUNCTION ??osal_set_event?relay,00H
        EXTERN ??osal_start_timerEx?relay
        FUNCTION ??osal_start_timerEx?relay,00H
        EXTERN ??sAddrExtCmp?relay
        FUNCTION ??sAddrExtCmp?relay,00H
        EXTERN ??sAddrExtCpy?relay
        FUNCTION ??sAddrExtCpy?relay,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocChangeNwkAddr
        FUNCTION AssocChangeNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CoordinatorInit
        FUNCTION NLME_CoordinatorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkFormationRequest
        FUNCTION NLME_NetworkFormationRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_StartRouterRequest
        FUNCTION NLME_StartRouterRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN devState
        EXTERN epList
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborUpdateNwkAddr
        FUNCTION nwkNeighborUpdateNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgApsUseExtendedPANID
        EXTERN zgConfigPANID
        EXTERN zgDefaultChannelList
        EXTERN zgDefaultStartingScanDuration

// E:\Lib\micro-electromechanical\Ê±ÑÓ\ZStack-CC2530-2.5.1a\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2011-07-13 10:55:53 -0700 (Wed, 13 Jul 2011) $
//    4   Revision:       $Revision: 26766 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2011 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComdef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #if defined( LCD_SUPPORTED )
//   67   #include "OnBoard.h"
//   68 #endif
//   69 
//   70 /* HAL */
//   71 #include "hal_lcd.h"
//   72 
//   73 /*********************************************************************
//   74  * MACROS
//   75  */
//   76 
//   77 /*********************************************************************
//   78  * CONSTANTS
//   79  */
//   80 // NLME Stub Implementations
//   81 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   82 
//   83 // Status fields used by ZDO_ProcessMgmtRtgReq
//   84 #define ZDO_MGMT_RTG_ENTRY_ACTIVE             0x00
//   85 #define ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY 0x01
//   86 #define ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED   0x02
//   87 #define ZDO_MGMT_RTG_ENTRY_INACTIVE           0x03
//   88 
//   89 /*********************************************************************
//   90  * TYPEDEFS
//   91  */
//   92 #if defined ( REFLECTOR )
//   93 typedef struct
//   94 {
//   95   byte SrcTransSeq;
//   96   zAddrType_t SrcAddr;
//   97   uint16 LocalCoordinator;
//   98   byte epIntf;
//   99   uint16 ProfileID;
//  100   byte numInClusters;
//  101   uint16 *inClusters;
//  102   byte numOutClusters;
//  103   uint16 *outClusters;
//  104   byte SecurityUse;
//  105   byte status;
//  106 } ZDO_EDBind_t;
//  107 #endif // defined ( REFLECTOR )
//  108 
//  109 enum
//  110 {
//  111   ZDMATCH_INIT,           // Initialized
//  112   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  113   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  114 };
//  115 
//  116 enum
//  117 {
//  118   ZDMATCH_SENDING_NOT,
//  119   ZDMATCH_SENDING_UNBIND,
//  120   ZDMATCH_SENDING_BIND
//  121 };
//  122 
//  123 /*********************************************************************
//  124  * GLOBAL VARIABLES
//  125  */
//  126 
//  127 /*********************************************************************
//  128  * EXTERNAL VARIABLES
//  129  */
//  130 
//  131 /*********************************************************************
//  132  * EXTERNAL FUNCTIONS
//  133  */
//  134 
//  135 /*********************************************************************
//  136  * LOCAL VARIABLES
//  137  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  138 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  139 
//  140 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  141 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  142 #endif
//  143 
//  144 #if defined ( MANAGED_SCAN )
//  145   uint32 managedScanNextChannel = 0;
//  146   uint32 managedScanChannelMask = 0;
//  147   uint8  managedScanTimesPerChannel = 0;
//  148 #endif
//  149 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  150 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  151 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  152 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  153 
//  154 /*********************************************************************
//  155  * LOCAL FUNCTIONS
//  156  */
//  157 static void ZDODeviceSetup( void );
//  158 #if defined ( MANAGED_SCAN )
//  159   static void ZDOManagedScan_Next( void );
//  160 #endif
//  161 #if defined ( REFLECTOR )
//  162   static void ZDO_RemoveEndDeviceBind( void );
//  163   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  164 #endif
//  165 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  166                                 byte numList2, uint16 *list2, uint16 *pMatches );
//  167 static void ZDO_RemoveMatchMemory( void );
//  168 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  169 static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  170 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  171 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  172 
//  173 /*********************************************************************
//  174  * @fn          ZDO_Init
//  175  *
//  176  * @brief       ZDObject and ZDProfile initialization.
//  177  *
//  178  * @param       none
//  179  *
//  180  * @return      none
//  181  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  182 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  183 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_CoordinatorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  184   // Initialize ZD items
//  185   #if defined ( REFLECTOR )
//  186   ZDO_EDBind = NULL;
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  187   #endif
//  188 
//  189   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  190   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#AIB_apsUseExtendedPANID & 0xff
        MOV     R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV     R2,#ZDO_UseExtendedPANID & 0xff
        MOV     R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL   ??sAddrExtCpy?relay
//  191 
//  192   // Setup the device - type of device to create.
//  193   ZDODeviceSetup();
        ; Setup parameters for call to function NLME_CoordinatorInit
        LCALL   ??NLME_CoordinatorInit?relay
        ; Setup parameters for call to function APS_ReflectorInit
        MOV     R1,#0x0
        LCALL   ??APS_ReflectorInit?relay
//  194 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  195 
//  196 #if defined ( MANAGED_SCAN )
//  197 /*********************************************************************
//  198  * @fn      ZDOManagedScan_Next()
//  199  *
//  200  * @brief   Setup a managed scan.
//  201  *
//  202  * @param   none
//  203  *
//  204  * @return  none
//  205  */
//  206 static void ZDOManagedScan_Next( void )
//  207 {
//  208   // Is it the first time
//  209   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  210   {
//  211     // Setup the defaults
//  212     managedScanNextChannel  = 1;
//  213 
//  214     while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  215       managedScanNextChannel <<= 1;
//  216 
//  217     managedScanChannelMask = managedScanNextChannel;
//  218     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  219   }
//  220   else
//  221   {
//  222     // Do we need to go to the next channel
//  223     if ( managedScanTimesPerChannel == 0 )
//  224     {
//  225       // Find next active channel
//  226       managedScanChannelMask  = managedScanNextChannel;
//  227       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  228     }
//  229     else
//  230     {
//  231       managedScanTimesPerChannel--;
//  232 
//  233       if ( managedScanTimesPerChannel == 0 )
//  234       {
//  235         managedScanNextChannel  <<= 1;
//  236         while( managedScanNextChannel && (zgDefaultChannelList & managedScanNextChannel) == 0 )
//  237           managedScanNextChannel <<= 1;
//  238 
//  239         if ( managedScanNextChannel == 0 )
//  240           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  241       }
//  242     }
//  243   }
//  244 }
//  245 #endif // MANAGED_SCAN
//  246 
//  247 /*********************************************************************
//  248  * @fn      ZDODeviceSetup()
//  249  *
//  250  * @brief   Call set functions depending on the type of device compiled.
//  251  *
//  252  * @param   none
//  253  *
//  254  * @return  none
//  255  */
//  256 static void ZDODeviceSetup( void )
//  257 {
//  258   if ( ZG_BUILD_COORDINATOR_TYPE )
//  259   {
//  260     NLME_CoordinatorInit();
//  261   }
//  262 
//  263 #if defined ( REFLECTOR )
//  264   APS_ReflectorInit( (ZG_DEVICE_COORDINATOR_TYPE) ? APS_REFLECTOR_PUBLIC :  APS_REFLECTOR_PRIVATE );
//  265 #endif
//  266 
//  267   if ( ZG_BUILD_JOINING_TYPE )
//  268   {
//  269     NLME_DeviceJoiningInit();
//  270   }
//  271 }
//  272 
//  273 /*********************************************************************
//  274  * @fn          ZDO_StartDevice
//  275  *
//  276  * @brief       This function starts a device in a network.
//  277  *
//  278  * @param       logicalType     - Device type to start
//  279  *              startMode       - indicates mode of device startup
//  280  *              beaconOrder     - indicates time betwen beacons
//  281  *              superframeOrder - indicates length of active superframe
//  282  *
//  283  * @return      none
//  284  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  285 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  286 {
        FUNCALL ZDO_StartDevice, NLME_NetworkFormationRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_StartRouterRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
        MOV     ?V0 + 0,R2
        MOV     A,R3
        MOV     R6,A
//  287   ZStatus_t ret;
//  288 #if defined ( ZIGBEE_FREQ_AGILITY )
//  289   static uint8 discRetries = 0;
//  290 #endif
//  291 #if defined ( ZIGBEE_COMMISSIONING )
//  292   static uint8 scanCnt = 0;
//  293 #endif
//  294 
//  295   ret = ZUnsupportedMode;
//  296 
//  297   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
        MOV     A,R7
        JNZ     ??ZDO_StartDevice_0
//  298   {
//  299     if ( startMode == MODE_HARD )
        MOV     A,#0x2
        XRL     A,?V0 + 0
        JNZ     ??ZDO_StartDevice_1
//  300     {
//  301       devState = DEV_COORD_STARTING;
        MOV     DPTR,#devState
        MOV     A,#0x8
        MOVX    @DPTR,A
//  302       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, zgDefaultChannelList,
//  303                                           zgDefaultStartingScanDuration, beaconOrder,
//  304                                           superframeOrder, false );
        ; Setup parameters for call to function NLME_NetworkFormationRequest
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R4
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,R6
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     DPTR,#zgDefaultChannelList
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     DPTR,#zgDefaultStartingScanDuration
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#zgApsUseExtendedPANID & 0xff
        MOV     R5,#(zgApsUseExtendedPANID >> 8) & 0xff
        MOV     DPTR,#zgConfigPANID
        LCALL   ??Subroutine221_0 & 0xFFFF
//  305     }
??CrossCallReturnLabel_395:
        LCALL   ??NLME_NetworkFormationRequest?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        SJMP    ??ZDO_StartDevice_2
//  306     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_1:
        MOV     A,#0x1
        XRL     A,?V0 + 0
        JNZ     ??ZDO_StartDevice_0
//  307     {
//  308       // Just start the coordinator
//  309       devState = DEV_COORD_STARTING;
        MOV     DPTR,#devState
        MOV     A,#0x8
        MOVX    @DPTR,A
//  310       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
        ; Setup parameters for call to function NLME_StartRouterRequest
        MOV     R3,#0x0
        MOV     A,R6
        MOV     R2,A
        MOV     R1,A
        LCALL   ??NLME_StartRouterRequest?relay
??ZDO_StartDevice_2:
        MOV     A,R1
//  311     }
//  312     else
//  313     {
//  314 #if defined( LCD_SUPPORTED )
//  315       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  316 #endif
//  317     }
//  318   }
//  319 
//  320   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
//  321   {
//  322     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
//  323     {
//  324       devState = DEV_NWK_DISC;
//  325 
//  326   #if defined( MANAGED_SCAN )
//  327       ZDOManagedScan_Next();
//  328       ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  329   #else
//  330       ret = NLME_NetworkDiscoveryRequest( zgDefaultChannelList, zgDefaultStartingScanDuration );
//  331     #if defined ( ZIGBEE_FREQ_AGILITY )
//  332       if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  333             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  334       {
//  335         // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  336         // change will not be recieved. On these devices or routers that have
//  337         // lost the network, an active scan shall be conducted on the Default
//  338         // Channel list using the extended PANID to find the network. If the
//  339         // extended PANID isn't found using the Default Channel list, an scan
//  340         // should be completed using all channels.
//  341         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
//  342       }
//  343     #endif // ZIGBEE_FREQ_AGILITY
//  344     #if defined ( ZIGBEE_COMMISSIONING )
//  345       if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
//  346       {
//  347         // When ApsUseExtendedPanID is commissioned to a non zero value via
//  348         // application specific means, the device shall conduct an active scan
//  349         // on the Default Channel list and join the PAN with the same
//  350         // ExtendedPanID. If the PAN is not found, an scan should be completed
//  351         // on all channels.
//  352         // When devices rejoin the network and the PAN is not found from
//  353         zgDefaultChannelList = MAX_CHANNELS_24GHZ;
//  354       }
//  355     #endif // ZIGBEE_COMMISSIONING
//  356   #endif
//  357     }
//  358     else if ( startMode == MODE_RESUME )
//  359     {
//  360       if ( logicalType == NODETYPE_ROUTER )
//  361       {
//  362         ZMacScanCnf_t scanCnf;
//  363         devState = DEV_NWK_ORPHAN;
//  364 
//  365         /* if router and nvram is available, fake successful orphan scan */
//  366         scanCnf.hdr.Status = ZSUCCESS;
//  367         scanCnf.ScanType = ZMAC_ORPHAN_SCAN;
//  368         scanCnf.UnscannedChannels = 0;
//  369         scanCnf.ResultListSize = 0;
//  370         nwk_ScanJoiningOrphan(&scanCnf);
//  371 
//  372         ret = ZSuccess;
//  373       }
//  374       else
//  375       {
//  376         devState = DEV_NWK_ORPHAN;
//  377         ret = NLME_OrphanJoinRequest( zgDefaultChannelList,
//  378                                       zgDefaultStartingScanDuration );
//  379       }
//  380     }
//  381     else
//  382     {
//  383 #if defined( LCD_SUPPORTED )
//  384       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  385 #endif
//  386     }
//  387   }
//  388 
//  389   if ( ret != ZSuccess )
        JZ      ??ZDO_StartDevice_3
//  390   {
//  391     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_0:
        ; Setup parameters for call to function osal_start_timerEx
        MOV     R4,#-0x18
        MOV     R5,#0x3
        MOV     R2,#0x1
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_start_timerEx?relay
          CFI EndBlock cfiBlock1
//  392   }
//  393 }
??ZDO_StartDevice_3:
        REQUIRE ?Subroutine1
        ; // Fall through to label ?Subroutine1

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x3
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
//  394 
//  395 /**************************************************************************************************
//  396  * @fn          zdoSendStateChangeMsg
//  397  *
//  398  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  399  *
//  400  * input parameters
//  401  *
//  402  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  403  * @param       state - The current device state.
//  404  *
//  405  * output parameters
//  406  *
//  407  * None.
//  408  *
//  409  * @return      None.
//  410  **************************************************************************************************
//  411  */
//  412 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
//  413 {
//  414   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
//  415 
//  416   if (NULL == pMsg)
//  417   {
//  418     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
//  419     {
//  420       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  421       // try again later when more Heap may be available.
//  422       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
//  423     }
//  424     else
//  425     {
//  426       pMsg->event = ZDO_STATE_CHANGE;
//  427       pMsg->status = state;
//  428 
//  429       (void)osal_msg_send(taskId, (uint8 *)pMsg);
//  430     }
//  431   }
//  432   else
//  433   {
//  434     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  435     pMsg->status = state;
//  436   }
//  437 }
//  438 
//  439 /**************************************************************************************************
//  440  * @fn          ZDO_UpdateNwkStatus
//  441  *
//  442  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  443  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  444  *              than one registered EndPoint, it will only receive one notification per state
//  445  *              change. Although the device may go through a sequence of state changes, the
//  446  *              Application task may only receive notification of the final, steady-state state
//  447  *              because it has the lowest priority and never even runs to receive the intermediate
//  448  *              state change notifications.
//  449  *
//  450  * input parameters
//  451  *
//  452  * @param       state - The current device state.
//  453  *
//  454  * output parameters
//  455  *
//  456  * None.
//  457  *
//  458  * @return      None.
//  459  **************************************************************************************************
//  460  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  461 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  462 {
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 1,R1
//  463   epList_t *pItem = epList;
        MOV     DPTR,#epList
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_615:
        SJMP    ??CrossCallReturnLabel_169
//  464 
//  465   while (pItem != NULL)
//  466   {
//  467     if (pItem->epDesc->endPoint != ZDO_EP)
//  468     {
//  469       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
??ZDO_UpdateNwkStatus_0:
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  470     }
//  471 
//  472     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV     R7,A
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_UpdateNwkStatus_2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_316:
        JZ      ??ZDO_UpdateNwkStatus_1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine80 & 0xFFFF
//  473   }
??CrossCallReturnLabel_136:
        MOV     ?V0 + 0,A
        ; Setup parameters for call to function osal_msg_find
        MOV     R2,#-0x2f
        MOV     R1,A
        LCALL   ??osal_msg_find?relay
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,DPL
        ORL     A,DPH
        JNZ     ??ZDO_UpdateNwkStatus_0
        ; Setup parameters for call to function osal_msg_allocate
        MOV     R2,#0x2
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay
        MOV     A,R2
        ORL     A,R3
        JNZ     ??ZDO_UpdateNwkStatus_3
        ; Setup parameters for call to function osal_set_event
        MOV     R2,#0x10
        MOV     R3,#0x0
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??osal_set_event?relay
        SJMP    ??ZDO_UpdateNwkStatus_1
??ZDO_UpdateNwkStatus_3:
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2f
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_msg_send
        MOV     R1,?V0 + 0
        LCALL   ??osal_msg_send?relay
        SJMP    ??ZDO_UpdateNwkStatus_1
//  474 #if defined MT_ZDO_CB_FUNC
//  475   zdoSendStateChangeMsg(state, MT_TaskID);
//  476 #endif
//  477 
//  478   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_2:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine146 & 0xFFFF
//  479   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_292:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
//  480 }
        SJMP    ??Subroutine192_0
          CFI EndBlock cfiBlock3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock4
        REQUIRE ??Subroutine192_0
        ; // Fall through to label ??Subroutine192_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine192_0:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock5
//  481 
//  482 #if defined ( REFLECTOR )
//  483 /*********************************************************************
//  484  * @fn          ZDO_RemoveEndDeviceBind
//  485  *
//  486  * @brief       Remove the end device bind
//  487  *
//  488  * @param  none
//  489  *
//  490  * @return      none
//  491  */
//  492 static void ZDO_RemoveEndDeviceBind( void )
//  493 {
//  494   if ( ZDO_EDBind != NULL )
//  495   {
//  496     // Free the RAM
//  497     if ( ZDO_EDBind->inClusters != NULL )
//  498     {
//  499       osal_mem_free( ZDO_EDBind->inClusters );
//  500     }
//  501     if ( ZDO_EDBind->outClusters != NULL )
//  502     {
//  503       osal_mem_free( ZDO_EDBind->outClusters );
//  504     }
//  505     osal_mem_free( ZDO_EDBind );
//  506     ZDO_EDBind = NULL;
//  507   }
//  508 }
//  509 #endif // REFLECTOR
//  510 
//  511 #if defined ( REFLECTOR )
//  512 /*********************************************************************
//  513  * @fn          ZDO_RemoveEndDeviceBind
//  514  *
//  515  * @brief       Remove the end device bind
//  516  *
//  517  * @param  none
//  518  *
//  519  * @return      none
//  520  */
//  521 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  522 {
//  523   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  524 
//  525 #if defined( LCD_SUPPORTED )
//  526   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  527   if ( Status == ZDP_SUCCESS )
//  528   {
//  529     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  530   }
//  531   else
//  532   {
//  533     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  534   }
//  535 #endif
//  536 
//  537 }
//  538 #endif // REFLECTOR
//  539 
//  540 /*********************************************************************
//  541  * @fn          ZDO_CompareClusterLists
//  542  *
//  543  * @brief       Compare one list to another list
//  544  *
//  545  * @param       numList1 - number of items in list 1
//  546  * @param       list1 - first list of cluster IDs
//  547  * @param       numList2 - number of items in list 2
//  548  * @param       list2 - second list of cluster IDs
//  549  * @param       pMatches - buffer to put matches
//  550  *
//  551  * @return      number of matches
//  552  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  553 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  554                           byte numList2, uint16 *list2, uint16 *pMatches )
//  555 {
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 0,R4
//  556   byte x, y;
//  557   uint16 z;
//  558   byte numMatches = 0;
        MOV     ?V0 + 1,#0x0
//  559 
//  560   // Check the first in against the seconds out
//  561   for ( x = 0; x < numList1; x++ )
        MOV     ?V0 + 3,#0x0
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_348:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_248:
        SJMP    ??ZDO_CompareClusterLists_0
//  562   {
//  563     for ( y = 0; y < numList2; y++ )
//  564     {
//  565       z = list2[y];
??ZDO_CompareClusterLists_1:
        MOV     A,?V0 + 6
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_189:
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
//  566       if ( list1[x] == z )
        MOV     A,?V0 + 3
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R2
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        XRL     A,?V0 + 4
        JNZ     ??ZDO_CompareClusterLists_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 5
??ZDO_CompareClusterLists_2:
        JNZ     ??ZDO_CompareClusterLists_3
//  567       {
//  568         pMatches[numMatches++] = z;
        MOV     A,?V0 + 1
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R4
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
        INC     ?V0 + 1
//  569       }
//  570     }
??ZDO_CompareClusterLists_3:
        INC     ?V0 + 6
??ZDO_CompareClusterLists_4:
        MOV     A,?V0 + 6
        CLR     C
        SUBB    A,?V0 + 0
        JC      ??ZDO_CompareClusterLists_1
        INC     ?V0 + 3
??ZDO_CompareClusterLists_0:
        MOV     A,?V0 + 3
        CLR     C
        SUBB    A,?V0 + 2
        JNC     ??ZDO_CompareClusterLists_5
        MOV     ?V0 + 6,#0x0
        SJMP    ??ZDO_CompareClusterLists_4
//  571   }
//  572 
//  573   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV     R1,?V0 + 1
        LJMP    ??Subroutine215_0 & 0xFFFF
          CFI EndBlock cfiBlock6
//  574 }
//  575 
//  576 /*********************************************************************
//  577  * Utility functions
//  578  */
//  579 
//  580 /*********************************************************************
//  581  * @fn          ZDO_CompareByteLists
//  582  *
//  583  * @brief       Compares two lists for matches.
//  584  *
//  585  * @param       ACnt  - number of entries in list A
//  586  * @param       AList  - List A
//  587  * @param       BCnt  - number of entries in list B
//  588  * @param       BList  - List B
//  589  *
//  590  * @return      true if a match is found
//  591  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  592 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  593 {
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 3,R1
//  594   byte x, y;
//  595 
//  596   for ( x = 0; x < ACnt; x++ )
        MOV     R5,#0x0
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_349:
        SJMP    ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC     R5
??ZDO_AnyClusterMatches_0:
        MOV     A,R5
        CLR     C
        SUBB    A,?V0 + 3
        JNC     ??ZDO_AnyClusterMatches_2
//  597   {
//  598     for ( y = 0; y < BCnt; y++ )
        MOV     ?V0 + 2,#0x0
        SJMP    ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC     ?V0 + 2
??ZDO_AnyClusterMatches_3:
        MOV     A,?V0 + 2
        CLR     C
        SUBB    A,R4
        JNC     ??ZDO_AnyClusterMatches_1
//  599     {
//  600       if ( AList[x] == BList[y] )
        MOV     A,R5
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R2
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R3
        ADDC    A,R7
        LCALL   ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV     ?V0 + 1,A
        MOV     A,?V0 + 2
        LCALL   ?Subroutine116 & 0xFFFF
??CrossCallReturnLabel_190:
        XRL     A,?V0 + 0
        JNZ     ??ZDO_AnyClusterMatches_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_AnyClusterMatches_5:
        JNZ     ??ZDO_AnyClusterMatches_4
//  601       {
//  602         return true;
        MOV     R1,#0x1
        SJMP    ??ZDO_AnyClusterMatches_6
//  603       }
//  604     }
//  605   }
//  606 
//  607   return false;
??ZDO_AnyClusterMatches_2:
        MOV     R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP    ??Subroutine192_0 & 0xFFFF
          CFI EndBlock cfiBlock7
//  608 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond8 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_189
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond9 Using cfiCommon0
          CFI (cfiCond9) Function ZDO_AnyClusterMatches
          CFI (cfiCond9) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond9) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond9) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond9) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond9) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond9) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond9) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond9) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond9) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond9) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond9) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond9) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond9) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond9) CFA_SP SP+0
          CFI (cfiCond9) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker10 Using cfiCommon1
          CFI (cfiPicker10) NoFunction
          CFI (cfiPicker10) Picker
        CLR     C
        RLC     A
        MOV     R6,A
        CLR     A
        RLC     A
        MOV     R7,A
        MOV     A,R0
        ADD     A,R6
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond8
          CFI EndBlock cfiCond9
          CFI EndBlock cfiPicker10

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond11 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_276
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_ParseEPListRsp
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+0
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13
        REQUIRE ??Subroutine193_0
        ; // Fall through to label ??Subroutine193_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine193_0:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
          CFI Conditional ??CrossCallReturnLabel_274
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDMatchSendState
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+0
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_AnyClusterMatches
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond16) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+0
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_ParseEPListRsp
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+0
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18
//  609 
//  610 /*********************************************************************
//  611  * Callback functions from ZDProfile
//  612  */
//  613 
//  614 /*********************************************************************
//  615  * @fn          ZDO_ProcessNodeDescReq
//  616  *
//  617  * @brief       This function processes and responds to the
//  618  *              Node_Desc_req message.
//  619  *
//  620  * @param       inMsg - incoming message
//  621  *
//  622  * @return      none
//  623  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  624 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  625 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine61 & 0xFFFF
//  626   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  627   NodeDescriptorFormat_t *desc = NULL;
//  628 
//  629   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_104:
        JNZ     ??ZDO_ProcessNodeDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ     ??ZDO_ProcessNodeDescReq_1
//  630   {
//  631     desc = &ZDO_Config_Node_Descriptor;
//  632   }
//  633 
//  634   if ( desc != NULL )
//  635   {
//  636     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV     ?V0 + 0,#ZDO_Config_Node_Descriptor & 0xff
        MOV     ?V0 + 1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_NodeDescMsg?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessNodeDescReq_2
//  637   }
//  638   else
//  639   {
//  640     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  641               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 0,#0x2
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine64 & 0xFFFF
//  642   }
??CrossCallReturnLabel_106:
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  643 }
??ZDO_ProcessNodeDescReq_2:
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock19
//  644 
//  645 /*********************************************************************
//  646  * @fn          ZDO_ProcessPowerDescReq
//  647  *
//  648  * @brief       This function processes and responds to the
//  649  *              Node_Power_req message.
//  650  *
//  651  * @param       inMsg  - incoming request
//  652  *
//  653  * @return      none
//  654  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  655 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  656 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL   ?Subroutine61 & 0xFFFF
//  657   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  658   NodePowerDescriptorFormat_t *desc = NULL;
//  659 
//  660   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_105:
        JNZ     ??ZDO_ProcessPowerDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ     ??ZDO_ProcessPowerDescReq_1
//  661   {
//  662     desc = &ZDO_Config_Power_Descriptor;
//  663   }
//  664 
//  665   if ( desc != NULL )
//  666   {
//  667     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV     ?V0 + 0,#ZDO_Config_Power_Descriptor & 0xff
        MOV     ?V0 + 1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R6
        MOV     R2,A
        LCALL   ??ZDP_PowerDescMsg?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP    ??ZDO_ProcessPowerDescReq_2
//  668   }
//  669   else
//  670   {
//  671     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  672               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 0,#0x3
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine64 & 0xFFFF
//  673   }
??CrossCallReturnLabel_107:
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  674 }
??ZDO_ProcessPowerDescReq_2:
        SJMP    ??Subroutine196_0
          CFI EndBlock cfiBlock20

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond21 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond22) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond22) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond22) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond22) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond22) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond22) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond22) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond22) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond22) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond22) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond22) CFA_SP SP+0
          CFI (cfiCond22) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker23 Using cfiCommon1
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        MOV     A,R6
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_560:
        MOV     A,R7
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_501:
        MOV     R5,A
        MOV     R4,#-0x80
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_252:
        RET
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond25) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond25) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond25) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond25) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond25) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond25) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond25) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond25) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond25) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond25) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond25) CFA_SP SP+0
          CFI (cfiCond25) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker26 Using cfiCommon1
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_280:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        ADD     A,#0x0
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R4
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_105
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+0
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond29 Using cfiCommon0
          CFI (cfiCond29) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond29) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_135
          CFI (cfiCond29) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond29) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond29) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond29) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond29) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond29) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond29) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond29) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond29) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond29) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond29) CFA_SP SP+0
          CFI (cfiCond29) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond30 Using cfiCommon0
          CFI (cfiCond30) Function ZDO_ProcessUserDescSet
          CFI (cfiCond30) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_134
          CFI (cfiCond30) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond30) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond30) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond30) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond30) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond30) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond30) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond30) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond30) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond30) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond30) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond30) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond30) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond30) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond30) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond30) CFA_SP SP+0
          CFI (cfiCond30) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker31 Using cfiCommon1
          CFI (cfiPicker31) NoFunction
          CFI (cfiPicker31) Picker
        MOV     A,R6
        LCALL   ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_583:
        MOV     A,R7
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiCond29
          CFI EndBlock cfiCond30
          CFI EndBlock cfiPicker31
        REQUIRE ??Subroutine194_0
        ; // Fall through to label ??Subroutine194_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine194_0:
          CFI Block cfiCond32 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_11
          CFI (cfiCond33) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond33) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond33) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond33) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond33) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond33) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond33) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond33) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond33) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond33) CFA_SP SP+0
          CFI (cfiCond33) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_104
          CFI (cfiCond34) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond34) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond34) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond34) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond34) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond34) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond34) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond34) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond34) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond34) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond34) CFA_SP SP+0
          CFI (cfiCond34) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_105
          CFI (cfiCond35) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond35) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond35) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond35) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond35) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond35) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond35) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond35) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond35) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond35) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond35) CFA_SP SP+0
          CFI (cfiCond35) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_135
          CFI (cfiCond36) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond36) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond36) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond36) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond36) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond36) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond36) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond36) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond36) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond36) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond36) CFA_SP SP+0
          CFI (cfiCond36) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ZDO_ProcessUserDescSet
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_134
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond37) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond37) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+0
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker38 Using cfiCommon1
          CFI (cfiPicker38) NoFunction
          CFI (cfiPicker38) Picker
        LCALL   ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_515:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiPicker38
//  675 
//  676 /*********************************************************************
//  677  * @fn          ZDO_ProcessSimpleDescReq
//  678  *
//  679  * @brief       This function processes and responds to the
//  680  *              Simple_Desc_req message.
//  681  *
//  682  * @param       inMsg - incoming message (request)
//  683  *
//  684  * @return      none
//  685  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock39 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
          CFI EndBlock cfiBlock39
        REQUIRE ??Subroutine195_0
        ; // Fall through to label ??Subroutine195_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine195_0:
          CFI Block cfiBlock40 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock40
        REQUIRE ??Subroutine196_0
        ; // Fall through to label ??Subroutine196_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine196_0:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock41

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  686 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock42 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  687 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  688   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  689   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_135:
        MOV     R2,A
//  690   byte endPoint = inMsg->asdu[2];
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
//  691   byte free = false;
        MOV     ?V0 + 1,#0x0
//  692   byte stat = ZDP_SUCCESS;
        MOV     ?V0 + 0,#0x0
//  693 
//  694   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ      ??ZDO_ProcessSimpleDescReq_0
        CLR     C
        SUBB    A,#-0xf
        JC      ??ZDO_ProcessSimpleDescReq_1
//  695   {
//  696     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV     ?V0 + 0,#-0x7e
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  697   }
//  698   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_ProcessSimpleDescReq_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ     ??ZDO_ProcessSimpleDescReq_4
//  699   {
//  700     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??afFindSimpleDesc?relay
        MOV     A,R1
        MOV     ?V0 + 1,A
//  701     if ( sDesc == NULL )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_433:
        JNZ     ??ZDO_ProcessSimpleDescReq_2
//  702     {
//  703       stat = ZDP_NOT_ACTIVE;
        MOV     ?V0 + 0,#-0x7d
        SJMP    ??ZDO_ProcessSimpleDescReq_2
//  704     }
//  705   }
//  706   else
//  707   {
//  708     if ( ZSTACK_ROUTER_BUILD )
//  709     {
//  710       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_4:
        MOV     ?V0 + 0,#-0x7f
//  711     }
//  712     else if ( ZSTACK_END_DEVICE_BUILD )
//  713     {
//  714       stat = ZDP_INVALID_REQTYPE;
//  715     }
//  716   }
//  717 
//  718   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     R1,?V0 + 0
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_SimpleDescMsg?relay
//  719 
//  720   if ( free && sDesc )
        MOV     A,?V0 + 1
        JZ      ??ZDO_ProcessSimpleDescReq_5
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_434:
        JZ      ??ZDO_ProcessSimpleDescReq_5
//  721   {
//  722     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine221_0 & 0xFFFF
//  723   }
??CrossCallReturnLabel_396:
        LCALL   ??osal_mem_free?relay
//  724 }
??ZDO_ProcessSimpleDescReq_5:
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock42
//  725 
//  726 /*********************************************************************
//  727  * @fn          ZDO_ProcessActiveEPReq
//  728  *
//  729  * @brief       This function processes and responds to the
//  730  *              Active_EP_req message.
//  731  *
//  732  * @param       inMsg  - incoming message (request)
//  733  *
//  734  * @return      none
//  735  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  736 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  737 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
//  738   byte cnt = 0;
        MOV     ?V0 + 2,#0x0
//  739   uint16 aoi;
//  740   byte stat = ZDP_SUCCESS;
        MOV     ?V0 + 3,#0x0
//  741 
//  742   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine62 & 0xFFFF
//  743 
//  744   if ( aoi == NLME_GetShortAddr() )
??CrossCallReturnLabel_282:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     A,R2
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessActiveEPReq_0
        MOV     A,R3
        XRL     A,?V0 + 1
??ZDO_ProcessActiveEPReq_0:
        JNZ     ??ZDO_ProcessActiveEPReq_1
//  745   {
//  746     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL   ??afNumEndPoints?relay
        MOV     A,R1
        DEC     A
        MOV     ?V0 + 2,A
//  747     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV     R1,#0x1
        MOV     R2,#ZDOBuildBuf & 0xff
        MOV     R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   ??afEndPoints?relay
        SJMP    ??ZDO_ProcessActiveEPReq_2
//  748   }
//  749   else
//  750   {
//  751     stat = ZDP_INVALID_REQTYPE;
??ZDO_ProcessActiveEPReq_1:
        MOV     ?V0 + 3,#-0x80
//  752   }
//  753 
//  754   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  755                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_366:
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 4,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,?V0 + 3
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL   ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_364:
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_476:
        MOV     R2,#0x5
        MOV     R3,#-0x80
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
//  756 }
        SJMP    ??Subroutine198_0
          CFI EndBlock cfiBlock43

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond44 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessUserDescReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+0
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker46 Using cfiCommon1
          CFI (cfiPicker46) NoFunction
          CFI (cfiPicker46) Picker
        LCALL   ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_667:
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_491:
        MOV     DPL,R0
        MOV     DPH,R1
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiPicker46
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiCond47 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_281
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_282
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+0
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond49 Using cfiCommon0
          CFI (cfiCond49) Function ZDO_ProcessUserDescReq
          CFI (cfiCond49) Conditional ??CrossCallReturnLabel_283
          CFI (cfiCond49) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond49) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond49) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond49) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond49) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond49) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond49) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond49) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond49) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond49) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond49) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond49) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond49) CFA_SP SP+0
          CFI (cfiCond49) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker50 Using cfiCommon1
          CFI (cfiPicker50) NoFunction
          CFI (cfiPicker50) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
        RET
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiCond49
          CFI EndBlock cfiPicker50

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock51 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock51
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiBlock52 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock52
//  757 
//  758 /*********************************************************************
//  759  * @fn          ZDO_ConvertOTAClusters
//  760  *
//  761  * @brief       This function will convert the over-the-air cluster list
//  762  *              format to an internal format.
//  763  *
//  764  * @param       inMsg  - incoming message (request)
//  765  *
//  766  * @return      pointer to incremented inBuf
//  767  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  768 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock53 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  769 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  770   uint8 x;
//  771 
//  772   for ( x = 0; x < cnt; x++ )
        MOV     R7,#0x0
        SJMP    ??ZDO_ConvertOTAClusters_0
//  773   {
//  774     // convert ota format to internal
//  775     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_274:
        MOV     R1,A
        MOV     A,?V0 + 0
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
        MOV     A,R7
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R4
        ADD     A,R0
        MOV     DPL,A
        MOV     A,R5
        ADDC    A,R1
        MOV     DPH,A
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        MOVX    @DPTR,A
//  776     inBuf += sizeof( uint16 );
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
//  777   }
        INC     R7
??ZDO_ConvertOTAClusters_0:
        MOV     A,R7
        CLR     C
        SUBB    A,R6
        JC      ??ZDO_ConvertOTAClusters_1
//  778   return ( inBuf );
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock53
//  779 }
//  780 
//  781 /*********************************************************************
//  782  * @fn          ZDO_ProcessMatchDescReq
//  783  *
//  784  * @brief       This function processes and responds to the
//  785  *              Match_Desc_req message.
//  786  *
//  787  * @param       inMsg  - incoming message (request)
//  788  *
//  789  * @return      none
//  790  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  791 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock54 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  792 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 5
        MOV     A,#-0x5
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     ?V0 + 14,R2
        MOV     ?V0 + 15,R3
//  793   uint8 epCnt = 0;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
//  794   uint8 numInClusters;
//  795   uint16 *inClusters = NULL;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  796   uint8 numOutClusters;
//  797   uint16 *outClusters = NULL;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        LCALL   ?Subroutine45 & 0xFFFF
//  798   epList_t *epDesc;
//  799   SimpleDescriptionFormat_t *sDesc = NULL;
//  800   uint8 allocated;
//  801   uint8 *msg;
//  802   uint16 aoi;
//  803   uint16 profileID;
//  804 
//  805   // Parse the incoming message
//  806   msg = inMsg->asdu;
??CrossCallReturnLabel_68:
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 3,A
//  807   aoi = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_175:
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  808   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 1,A
//  809   msg += 4;
        MOV     A,?V0 + 2
        ADD     A,#0x4
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
//  810 
//  811   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        XRL     A,#0x1
        JZ      ??ZDO_ProcessMatchDescReq_0
//  812   {
//  813     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  814                           ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
//  815     return;
//  816   }
//  817   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_1
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_ProcessMatchDescReq_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??ZDO_ProcessMatchDescReq_2:
        JZ      ??ZDO_ProcessMatchDescReq_1
//  818   {
//  819     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  820                              ZDAppNwkAddr.addr.shortAddr, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_392:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        CLR     A
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 0,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  821     return;
        LJMP    ??ZDO_ProcessMatchDescReq_3 & 0xFFFF
//  822   }
//  823 
//  824   if ((numInClusters = *msg++) &&
//  825       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_1:
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_161:
        MOV     ?V0 + 8,R0
        JZ      ??ZDO_ProcessMatchDescReq_4
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_435:
        JZ      ??ZDO_ProcessMatchDescReq_4
//  826   {
//  827     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine101 & 0xFFFF
//  828   }
??CrossCallReturnLabel_163:
        MOV     R1,?V0 + 8
        LCALL   ??ZDO_ConvertOTAClusters?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        SJMP    ??ZDO_ProcessMatchDescReq_5
//  829   else
//  830   {
//  831     numInClusters = 0;
??ZDO_ProcessMatchDescReq_4:
        MOV     ?V0 + 8,#0x0
//  832   }
//  833 
//  834   if ((numOutClusters = *msg++) &&
//  835       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_5:
        LCALL   ?Subroutine100 & 0xFFFF
??CrossCallReturnLabel_162:
        MOV     ?V0 + 7,R0
        JZ      ??ZDO_ProcessMatchDescReq_6
        ; Setup parameters for call to function osal_mem_alloc
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_294:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_436:
        JZ      ??ZDO_ProcessMatchDescReq_6
//  836   {
//  837     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine101 & 0xFFFF
//  838   }
??CrossCallReturnLabel_164:
        MOV     R1,?V0 + 7
        LCALL   ??ZDO_ConvertOTAClusters?relay
        SJMP    ??ZDO_ProcessMatchDescReq_7
//  839   else
//  840   {
//  841     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_6:
        MOV     ?V0 + 7,#0x0
//  842   }
//  843 
//  844   // First count the number of endpoints that match.
//  845   epDesc = epList;
??ZDO_ProcessMatchDescReq_7:
        MOV     DPTR,#epList
        SJMP    ??ZDO_ProcessMatchDescReq_8
//  846   while ( epDesc )
//  847   {
//  848     // Don't search endpoint 0 and check if response is allowed
//  849     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  850     {
//  851       if ( epDesc->pfnDescCB )
//  852       {
//  853         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  854         allocated = TRUE;
//  855       }
//  856       else
//  857       {
//  858         sDesc = epDesc->epDesc->simpleDesc;
//  859         allocated = FALSE;
//  860       }
//  861 
//  862       if ( sDesc && sDesc->AppProfId == profileID )
//  863       {
//  864         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  865 
//  866         // Are there matching input clusters?
//  867         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  868                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  869             // Are there matching output clusters?
//  870             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  871                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  872         {
//  873           // Notify the endpoint of the match.
//  874           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  875           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  876 
//  877           if (pRspSent)
//  878           {
//  879             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  880             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  881             pRspSent->numInClusters = numInClusters;
//  882             pRspSent->numOutClusters = numOutClusters;
//  883 
//  884             if (numInClusters)
//  885             {
//  886               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  887               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  888             }
//  889             else
//  890             {
//  891               pRspSent->pInClusters = NULL;
//  892             }
//  893 
//  894             if (numOutClusters)
//  895             {
//  896               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  897               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  898             }
//  899             else
//  900             {
//  901               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_9:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
//  902             }
//  903 
//  904             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_10:
        ; Setup parameters for call to function osal_msg_send
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_137:
        MOV     R1,A
        LCALL   ??osal_msg_send?relay
//  905           }
//  906 
//  907           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_11:
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#ZDOBuildBuf & 0xff
        ADD     A,R0
        MOV     DPL,A
        MOV     A,#(ZDOBuildBuf >> 8) & 0xff
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_621:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_63:
        INC     A
        MOVX    @DPTR,A
//  908         }
//  909       }
//  910 
//  911       if ( allocated )
??ZDO_ProcessMatchDescReq_12:
        MOV     A,?V0 + 9
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_13
//  912       {
//  913         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        LCALL   ??osal_mem_free?relay
//  914       }
//  915     }
//  916     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_13:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
??ZDO_ProcessMatchDescReq_8:
        MOVX    A,@DPTR
        MOV     ?V0 + 12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 13,A
        MOV     A,?V0 + 12
        ORL     A,?V0 + 13
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_317:
        JZ      ??ZDO_ProcessMatchDescReq_13
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.0
        JNC     ??ZDO_ProcessMatchDescReq_13
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_437:
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        JZ      ??ZDO_ProcessMatchDescReq_15
        ; Setup parameters for indirect call
        LCALL   ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_318:
        MOV     R2,A
        MOV     R1,#0x1
        MOV     DPL,?V0 + 12
        MOV     DPH,?V0 + 13
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_177:
        LCALL   ?CALL_IND
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
        MOV     ?V0 + 9,#0x1
        SJMP    ??ZDO_ProcessMatchDescReq_16
??ZDO_ProcessMatchDescReq_15:
        LCALL   ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_178:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 10,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 11,A
        MOV     ?V0 + 9,#0x0
??ZDO_ProcessMatchDescReq_16:
        MOV     A,?V0 + 10
        ORL     A,?V0 + 11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessMatchDescReq_17
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessMatchDescReq_17:
        JZ      $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_397:
        MOV     R1,?V0 + 8
        LCALL   ??ZDO_AnyClusterMatches?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_18
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     DPL,?V0 + 10
        MOV     DPH,?V0 + 11
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_398:
        MOV     R1,?V0 + 7
        LCALL   ??ZDO_AnyClusterMatches?relay
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
??ZDO_ProcessMatchDescReq_18:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     A,?V0 + 7
        ADD     A,?V0 + 8
        CLR     C
        RLC     A
        ADD     A,#0xa
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??osal_msg_allocate?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x2e
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 14
        MOV     DPH,?V0 + 15
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_350:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_332:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 8
        LCALL   ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_25:
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        MOV     A,?V0 + 8
        JZ      ??ZDO_ProcessMatchDescReq_19
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 2
        ADD     A,#0xa
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_333:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V0 + 8
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_399:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessMatchDescReq_20
??ZDO_ProcessMatchDescReq_19:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
??ZDO_ProcessMatchDescReq_20:
        MOV     A,?V0 + 7
        JNZ     $+5
        LJMP    ??ZDO_ProcessMatchDescReq_9 & 0xFFFF
        MOV     A,?V0 + 8
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,?V0 + 2
        ADD     A,R0
        MOV     R0,A
        MOV     A,?V0 + 3
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_295:
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine90 & 0xFFFF
//  917   }
??CrossCallReturnLabel_149:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,?V0 + 7
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        LJMP    ??ZDO_ProcessMatchDescReq_10 & 0xFFFF
//  918 
//  919   if ( epCnt )
??ZDO_ProcessMatchDescReq_14:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessMatchDescReq_21
//  920   {
//  921     // Send the message if at least one match found.
//  922     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  923               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine82 & 0xFFFF
//  924     {
//  925 #if defined( LCD_SUPPORTED )
//  926       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
//  927 #endif
//  928     }
//  929   }
??CrossCallReturnLabel_393:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_388:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     ?V0 + 0,#0x0
        SJMP    ??ZDO_ProcessMatchDescReq_22
          CFI CFA_XSP16 add(XSP16, 29)
//  930   else
//  931   {
//  932     // No match found
//  933     if (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi))
??ZDO_ProcessMatchDescReq_21:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??NLME_IsAddressBroadcast?relay
        MOV     A,R1
        JNZ     ??ZDO_ProcessMatchDescReq_23
//  934     {
//  935       // send response message with match length = 0
//  936       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
//  937                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL   ?Subroutine82 & 0xFFFF
//  938 #if defined( LCD_SUPPORTED )
//  939       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
//  940 #endif
//  941     }
//  942     else
//  943     {
//  944       // no response mesage for broadcast message
//  945 #if defined( LCD_SUPPORTED )
//  946       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
//  947 #endif
//  948     }
//  949   }
??CrossCallReturnLabel_394:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     ?V0 + 0,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 1,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
??ZDO_ProcessMatchDescReq_22:
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        LCALL   ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL   ??ZDP_EPRsp?relay
        MOV     A,#0x7
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
//  950 
//  951   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_23:
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_438:
        JZ      ??ZDO_ProcessMatchDescReq_24
//  952   {
//  953     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine221_0 & 0xFFFF
//  954   }
??CrossCallReturnLabel_400:
        LCALL   ??osal_mem_free?relay
//  955 
//  956   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_24:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_439:
        JZ      ??ZDO_ProcessMatchDescReq_3
//  957   {
//  958     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine221_0 & 0xFFFF
//  959   }
??CrossCallReturnLabel_401:
        LCALL   ??osal_mem_free?relay
??ZDO_ProcessMatchDescReq_3:
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock54
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6
//  960 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock55 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x10
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock55

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond56 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_292
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+0
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond58) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+0
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond59) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond59) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond59) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond59) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond59) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond59) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond59) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond59) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond59) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond59) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond59) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond59) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond59) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond59) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond59) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond59) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond59) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond59) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond59) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond59) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond59) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond59) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond59) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond59) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond59) CFA_SP SP+0
          CFI (cfiCond59) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ZDO_UpdateAddrManager
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond60) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond60) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond60) CFA_SP SP+-5
          CFI (cfiCond60) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_CopyMatchInfo
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_37
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+0
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ZDO_CopyMatchInfo
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_38
          CFI (cfiCond62) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond62) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond62) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond62) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond62) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond62) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond62) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond62) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond62) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond62) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond62) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond62) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond62) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond62) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond62) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond62) CFA_SP SP+0
          CFI (cfiCond62) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_0
          CFI (cfiCond63) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond63) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond63) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond63) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond63) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond63) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond63) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond63) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond63) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond63) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond63) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond63) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond63) CFA_SP SP+0
          CFI (cfiCond63) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_1
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+0
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_2
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+0
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_3
          CFI (cfiCond66) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond66) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond66) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond66) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond66) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond66) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond66) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond66) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond66) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond66) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond66) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond66) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond66) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond66) CFA_SP SP+0
          CFI (cfiCond66) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker67 Using cfiCommon1
          CFI (cfiPicker67) NoFunction
          CFI (cfiPicker67) Picker
        MOV     A,R2
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiPicker67
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond68 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond69 Using cfiCommon0
          CFI (cfiCond69) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond69) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_64
          CFI (cfiCond69) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond69) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond69) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond69) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond69) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond69) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond69) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond69) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond69) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond69) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond69) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond69) CFA_SP SP+0
          CFI (cfiCond69) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_10
          CFI (cfiCond70) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond70) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond70) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond70) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond70) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond70) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond70) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond70) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond70) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond70) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond70) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond70) CFA_SP SP+0
          CFI (cfiCond70) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_11
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+0
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDO_UpdateNwkStatus
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_292
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+0
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_293
          CFI (cfiCond73) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond73) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond73) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond73) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond73) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond73) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond73) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond73) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond73) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond73) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond73) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond73) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond73) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond73) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond73) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond73) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond73) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond73) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond73) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond73) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond73) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond73) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond73) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond73) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond73) CFA_SP SP+0
          CFI (cfiCond73) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond74) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond74) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond74) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond74) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond74) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond74) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond74) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond74) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond74) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond74) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond74) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond74) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond74) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond74) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond74) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond74) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond74) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond74) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond74) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond74) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond74) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond74) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond74) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond74) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond74) CFA_SP SP+0
          CFI (cfiCond74) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond75) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond75) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+0
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ZDO_UpdateAddrManager
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_296
          CFI (cfiCond76) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond76) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond76) CFA_SP SP+-5
          CFI (cfiCond76) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond77 Using cfiCommon0
          CFI (cfiCond77) Function ZDO_CopyMatchInfo
          CFI (cfiCond77) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_37
          CFI (cfiCond77) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond77) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond77) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond77) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond77) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond77) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond77) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond77) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond77) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond77) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond77) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond77) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond77) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond77) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond77) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond77) CFA_SP SP+0
          CFI (cfiCond77) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDO_CopyMatchInfo
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_38
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+0
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_0
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+0
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_1
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+0
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_2
          CFI (cfiCond81) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond81) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond81) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond81) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond81) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond81) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond81) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond81) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond81) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond81) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond81) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond81) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond81) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond81) CFA_SP SP+0
          CFI (cfiCond81) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_3
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+0
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker83 Using cfiCommon1
          CFI (cfiPicker83) NoFunction
          CFI (cfiPicker83) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond68
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiPicker83

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond84 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_194
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond85 Using cfiCommon0
          CFI (cfiCond85) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond85) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond85) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond85) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond85) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond85) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond85) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond85) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond85) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond85) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond85) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond85) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond85) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond85) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond85) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond85) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond85) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond85) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond85) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond85) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond85) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond85) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond85) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond85) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond85) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond85) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond85) CFA_SP SP+0
          CFI (cfiCond85) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker86 Using cfiCommon1
          CFI (cfiPicker86) NoFunction
          CFI (cfiPicker86) Picker
        MOV     A,?V0 + 14
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 15
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 14
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_271:
        MOV     A,?V0 + 15
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_505:
        MOV     R1,A
        MOV     R2,#0x6
        MOV     R3,#-0x80
        RET
          CFI EndBlock cfiCond84
          CFI EndBlock cfiCond85
          CFI EndBlock cfiPicker86

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond87 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond88) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond88) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond88) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond88) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond88) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond88) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond88) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond88) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond88) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond88) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond88) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond88) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond88) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond88) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond88) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond88) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond88) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond88) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond88) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond88) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond88) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond88) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond88) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond88) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond88) CFA_SP SP+0
          CFI (cfiCond88) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker89 Using cfiCommon1
          CFI (cfiPicker89) NoFunction
          CFI (cfiPicker89) Picker
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_326:
        RET
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiPicker89

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_177
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_178
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond91) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond91) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond91) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond91) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond91) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond91) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond91) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond91) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond91) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond91) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond91) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+0
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDO_UpdateNwkStatus
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_136
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+0
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_137
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond93) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond93) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond93) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond93) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond93) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond93) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond93) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond93) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond93) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond93) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond93) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond93) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond93) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+0
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_320
          CFI (cfiCond94) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond94) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond94) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond94) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond94) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond94) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond94) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond94) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond94) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond94) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond94) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond94) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond94) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond94) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond94) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond94) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond94) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond94) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond94) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond94) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond94) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond94) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond94) CFA_SP SP+0
          CFI (cfiCond94) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_321
          CFI (cfiCond95) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond95) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond95) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond95) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond95) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond95) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond95) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond95) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond95) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond95) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond95) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond95) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond95) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond95) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond95) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond95) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond95) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond95) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond95) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond95) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond95) CFA_SP SP+0
          CFI (cfiCond95) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_322
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond96) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond96) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond96) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond96) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond96) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond96) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond96) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond96) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond96) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+0
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_319
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+0
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDO_UpdateNwkStatus
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_316
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+0
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_317
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+0
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_318
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+0
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_488
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+0
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDMatchSendState
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_489
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond102) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond102) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond102) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond102) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond102) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+0
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        MOVX    A,@DPTR
        MOV     R0,A
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_137
          CFI (cfiCond105) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond105) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond105) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond105) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond105) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond105) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond105) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond105) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond105) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond105) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond105) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond105) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond105) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond105) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond105) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond105) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond105) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond105) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond105) CFA_SP SP+0
          CFI (cfiCond105) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_177
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+0
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_326, ??CrossCallReturnLabel_178
          CFI (cfiCond107) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond107) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond107) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond107) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond107) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond107) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond107) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond107) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond107) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond107) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond107) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond107) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond107) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond107) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond107) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond107) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond107) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond107) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond107) CFA_SP SP+0
          CFI (cfiCond107) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_UpdateNwkStatus
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_136
          CFI (cfiCond108) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond108) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond108) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond108) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond108) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond108) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond108) CFA_SP SP+0
          CFI (cfiCond108) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_325, ??CrossCallReturnLabel_137
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond109) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond109) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond109) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond109) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond109) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond109) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond109) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond109) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond109) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond109) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond109) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+0
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_320
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+0
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_321
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+0
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_322
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+0
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_319
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+0
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_UpdateNwkStatus
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_316
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+0
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_317
          CFI (cfiCond115) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond115) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond115) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond115) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond115) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond115) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond115) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond115) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond115) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond115) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond115) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond115) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond115) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond115) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond115) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond115) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond115) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond115) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond115) CFA_SP SP+0
          CFI (cfiCond115) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_327, ??CrossCallReturnLabel_318
          CFI (cfiCond116) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond116) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond116) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond116) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond116) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond116) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond116) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond116) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond116) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond116) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond116) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond116) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond116) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond116) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond116) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond116) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond116) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond116) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond116) CFA_SP SP+0
          CFI (cfiCond116) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_488
          CFI (cfiCond117) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond117) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond117) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond117) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond117) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond117) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond117) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond117) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond117) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond117) CFA_SP SP+0
          CFI (cfiCond117) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDMatchSendState
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_324, ??CrossCallReturnLabel_489
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+0
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker119 Using cfiCommon1
          CFI (cfiPicker119) NoFunction
          CFI (cfiPicker119) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiPicker119

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond120 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_163
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond121) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond121) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond121) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond121) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond121) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond121) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+0
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker122 Using cfiCommon1
          CFI (cfiPicker122) NoFunction
          CFI (cfiPicker122) Picker
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        RET
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiPicker122

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond123 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_248
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_SP SP+0
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_163
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+0
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_164
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond126) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond126) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond126) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond126) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond126) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond126) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond126) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+0
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_155
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+0
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_250, ??CrossCallReturnLabel_156
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+0
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker129 Using cfiCommon1
          CFI (cfiPicker129) NoFunction
          CFI (cfiPicker129) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiPicker129

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond130 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond131) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+0
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker132 Using cfiCommon1
          CFI (cfiPicker132) NoFunction
          CFI (cfiPicker132) Picker
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiPicker132

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond133 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond134) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond134) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond134) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond134) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond134) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond134) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond134) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond134) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond134) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond134) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond134) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond134) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond134) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond134) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond134) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond134) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond134) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond134) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond134) CFA_SP SP+0
          CFI (cfiCond134) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker135 Using cfiCommon1
          CFI (cfiPicker135) NoFunction
          CFI (cfiPicker135) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        RET
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiPicker135

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond136 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+0
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker138 Using cfiCommon1
          CFI (cfiPicker138) NoFunction
          CFI (cfiPicker138) Picker
        LCALL   ??Subroutine200_0 & 0xFFFF
??CrossCallReturnLabel_323:
        INC     DPTR
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_325:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiPicker138
//  961 
//  962 /*********************************************************************
//  963  * @fn      ZDO_ProcessBindUnbindReq()
//  964  *
//  965  * @brief   Called to process a Bind or Unbind Request message.
//  966  *
//  967  * @param   inMsg  - incoming message (request)
//  968  * @param   pReq - place to put parsed information
//  969  *
//  970  * @return  none
//  971  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  972 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock139 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
//  973 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
//  974   zAddrType_t SourceAddr;       // Binding Source addres
//  975   byte bindStat;
//  976 
//  977   SourceAddr.addrMode = Addr64Bit;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
//  978   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCpy?relay
//  979 
//  980   // If the local device is not the primary binding cache
//  981   // check the src address of the bind request.
//  982   // If it is not the local device's extended address
//  983   // discard the request.
//  984   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
//  985         (pReq->dstAddress.addrMode != Addr64Bit &&
//  986          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function sAddrExtCmp
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessBindUnbindReq_0
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_179:
        JZ      ??ZDO_ProcessBindUnbindReq_1
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessBindUnbindReq_1
//  987   {
//  988     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  989   }
//  990   else
//  991   {
//  992     // Check source & destination endpoints
//  993     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
//  994         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
//  995             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CLR     C
        SUBB    A,#-0xf
        JNC     ??ZDO_ProcessBindUnbindReq_3
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_180:
        JNZ     ??ZDO_ProcessBindUnbindReq_4
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_300:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_367:
        JZ      ??ZDO_ProcessBindUnbindReq_3
        CLR     C
        SUBB    A,#-0xf
        JC      ??ZDO_ProcessBindUnbindReq_4
//  996     {
//  997       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7e
        LJMP    ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
//  998     }
//  999     else
// 1000     {
// 1001       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        MOV     A,?V0 + 0
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_368:
        XRL     A,#0x21
        JNZ     ??ZDO_ProcessBindUnbindReq_5
        INC     DPTR
        MOVX    A,@DPTR
??ZDO_ProcessBindUnbindReq_5:
        JNZ     ??ZDO_ProcessBindUnbindReq_6
// 1002       {
// 1003         // Assume the table is full
// 1004         bindStat = ZDP_TABLE_FULL;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x74
        MOVX    @DPTR,A
// 1005 
// 1006 #if defined( APP_TP ) || defined( APP_TP2 )
// 1007         // For ZigBee Conformance Testing
// 1008         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1009 #endif
// 1010         {
// 1011           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1012                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
        ; Setup parameters for call to function APSME_BindRequest
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_305:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   ??APSME_BindRequest?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_7
// 1013           {
// 1014             uint16 nwkAddr;
// 1015 
// 1016             // valid entry
// 1017             bindStat = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1018 
// 1019             // Notify to save info into NV
// 1020             ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
// 1021 
// 1022             // Check for the destination address
// 1023             if ( pReq->dstAddress.addrMode == Addr64Bit )
        LCALL   ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_181:
        JNZ     ??ZDO_ProcessBindUnbindReq_7
// 1024             {
// 1025               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_217:
        LCALL   ??APSME_LookupNwkAddr?relay
        MOV     A,R1
        JNZ     ??ZDO_ProcessBindUnbindReq_7
// 1026               {
// 1027                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV     R5,#0x0
        MOV     R4,#0x0
        MOV     R1,#0x0
        LCALL   ?Subroutine142 & 0xFFFF
// 1028               }
// 1029             }
// 1030           }
// 1031         }
// 1032       }
??CrossCallReturnLabel_218:
        LCALL   ??ZDP_NwkAddrReq?relay
        SJMP    ??ZDO_ProcessBindUnbindReq_7
// 1033       else // Unbind_req
// 1034       {
// 1035         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1036                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_6:
        ; Setup parameters for call to function APSME_UnBindRequest
        LCALL   ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_306:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_113:
        LCALL   ??APSME_UnBindRequest?relay
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        JNZ     ??ZDO_ProcessBindUnbindReq_8
// 1037         {
// 1038           bindStat = ZDP_SUCCESS;
        CLR     A
        MOVX    @DPTR,A
// 1039 
// 1040           // Notify to save info into NV
// 1041           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
        SJMP    ??ZDO_ProcessBindUnbindReq_7
// 1042         }
// 1043         else
// 1044           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_8:
        MOV     A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX    @DPTR,A
// 1045       }
// 1046     }
// 1047   }
// 1048 
// 1049   // Send back a response message
// 1050   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1051                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1052                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_563:
        MOV     A,?V0 + 1
        LCALL   ??Subroutine202_0 & 0xFFFF
??CrossCallReturnLabel_304:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,?V0 + 0
        ADD     A,#0xc
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_369:
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V0 + 3,A
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_198:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1053 }
        MOV     A,#0xc
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock139

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_300
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond141) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond141) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond141) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond141) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond141) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond141) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond141) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond141) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond141) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond141) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond141) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond141) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond141) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond141) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond141) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond141) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond141) CFA_SP SP+0
          CFI (cfiCond141) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+0
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-1
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker144 Using cfiCommon1
          CFI (cfiPicker144) NoFunction
          CFI (cfiPicker144) Picker
        MOV     A,R6
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiPicker144
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiCond145 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_299
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_300
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+0
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+0
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+0
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond149) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond149) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond149) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond149) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond149) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond149) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond149) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond149) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond149) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond149) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond149) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond149) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond149) CFA_SP SP+-1
          CFI (cfiCond149) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker150 Using cfiCommon1
          CFI (cfiPicker150) NoFunction
          CFI (cfiPicker150) Picker
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R7
        RET
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiPicker150

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond151 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_305
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+0
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiCond154 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_304
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+0
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_306
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+0
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker157 Using cfiCommon1
          CFI (cfiPicker157) NoFunction
          CFI (cfiPicker157) Picker
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_509:
        MOV     ?V0 + 2,A
        MOV     R0,#?V0 + 2
        RET
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiPicker157

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond158 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+0
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+0
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker161 Using cfiCommon1
          CFI (cfiPicker161) NoFunction
          CFI (cfiPicker161) Picker
        MOV     A,R6
        LCALL   ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_582:
        MOV     A,R7
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_504:
        XRL     A,#0x3
        RET
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiPicker161

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond162 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+0
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker164 Using cfiCommon1
          CFI (cfiPicker164) NoFunction
          CFI (cfiPicker164) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_469:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiPicker164
// 1054 
// 1055 /*********************************************************************
// 1056  * @fn      ZDO_UpdateAddrManager
// 1057  *
// 1058  * @brief   Update the Address Manager.
// 1059  *
// 1060  * @param   nwkAddr - network address
// 1061  * @param   extAddr - extended address
// 1062  *
// 1063  * @return  none
// 1064  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1065 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock165 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1066 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV     A,#-0xd
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1067   AddrMgrEntry_t addrEntry;
// 1068 
// 1069   // Update the address manager
// 1070   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        MOVX    @DPTR,A
// 1071   addrEntry.nwkAddr = nwkAddr;
        INC     A
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine146 & 0xFFFF
// 1072   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_296:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 1073   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
// 1074 }
        MOV     A,#0xd
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock165
// 1075 
// 1076 /*********************************************************************
// 1077  * @fn      ZDO_ProcessServerDiscReq
// 1078  *
// 1079  * @brief   Process the Server_Discovery_req message.
// 1080  *
// 1081  * @param   inMsg  - incoming message (request)
// 1082  *
// 1083  * @return  none
// 1084  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1085 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock166 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1086 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1087   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1088   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_182:
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_351:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_150:
        MOV     DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX    A,@DPTR
        ANL     A,R0
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,R1
        MOV     ?V0 + 1,A
// 1089 
// 1090   if ( matchMask )
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JZ      ??ZDO_ProcessServerDiscReq_0
// 1091   {
// 1092     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1093                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL   ?Subroutine137 & 0xFFFF
// 1094   }
??CrossCallReturnLabel_209:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_370:
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL   ??ZDP_ServerDiscRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1095 }
??ZDO_ProcessServerDiscReq_0:
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock166
// 1096 
// 1097 /*********************************************************************
// 1098  * Call Back Functions from APS  - API
// 1099  */
// 1100 
// 1101 /*********************************************************************
// 1102  * @fn          ZDO_EndDeviceTimeoutCB
// 1103  *
// 1104  * @brief       This function handles the binding timer for the End
// 1105  *              Device Bind command.
// 1106  *
// 1107  * @param       none
// 1108  *
// 1109  * @return      none
// 1110  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1111 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock167 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1112 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1113 #if defined ( REFLECTOR )
// 1114   byte stat;
// 1115   if ( ZDO_EDBind )
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_440:
        JNZ     $+5
        LJMP    ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1116   {
// 1117     stat = ZDO_EDBind->status;
// 1118 
// 1119     // Send the response message to the first sent
// 1120     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1121                         stat, ZDO_EDBind->SecurityUse );
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x15
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_378:
        MOV     R0,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R1
        ADD     A,#0x16
        MOV     DPL,A
        MOV     A,R1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_371:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     DPTR,#ZDO_EDBind
        MOVX    A,@DPTR
        MOV     R1,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R1
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV     A,R0
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x1
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1122 
// 1123     ZDO_RemoveEndDeviceBind();
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine227_0 & 0xFFFF
// 1124   }
??CrossCallReturnLabel_441:
        JZ      ??ZDO_EndDeviceTimeoutCB_0
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x10
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_448:
        JZ      ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_526:
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_417:
        LCALL   ??osal_mem_free?relay
??ZDO_EndDeviceTimeoutCB_1:
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_527:
        ADD     A,#0x13
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_449:
        JZ      ??ZDO_EndDeviceTimeoutCB_2
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_528:
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_577:
        MOV     A,R0
        LCALL   ??Subroutine219_0 & 0xFFFF
??CrossCallReturnLabel_418:
        LCALL   ??osal_mem_free?relay
??ZDO_EndDeviceTimeoutCB_2:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#ZDO_EDBind
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_402:
        LCALL   ??osal_mem_free?relay
        MOV     DPTR,#ZDO_EDBind
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1125 #endif  // REFLECTOR
// 1126 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP    ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock167
// 1127 
// 1128 /*********************************************************************
// 1129  * Optional Management Messages
// 1130  */
// 1131 
// 1132 /*********************************************************************
// 1133  * @fn          ZDO_ProcessMgmtLqiReq
// 1134  *
// 1135  * @brief       This function handles parsing the incoming Management
// 1136  *              LQI request and generate the response.
// 1137  *
// 1138  *   Note:      This function will limit the number of items returned
// 1139  *              to ZDO_MAX_LQI_ITEMS items.
// 1140  *
// 1141  * @param       inMsg - incoming message (request)
// 1142  *
// 1143  * @return      none
// 1144  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1145 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock168 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1146 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 64, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 64, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 59, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 59, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 37
        MOV     A,#-0x25
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 1147   byte x;
// 1148   byte index;
// 1149   byte numItems;
// 1150   byte maxItems;
// 1151   ZDP_MgmtLqiItem_t* table = NULL;
        MOV     ?V0 + 10,#0x0
        MOV     ?V0 + 11,#0x0
// 1152   ZDP_MgmtLqiItem_t* item;
// 1153   neighborEntry_t    entry;
// 1154   byte aItems;
// 1155   associated_devices_t *aDevice;
// 1156   AddrMgrEntry_t  nwkEntry;
// 1157   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_320:
        MOV     ?V0 + 6,A
// 1158 
// 1159   // Get the number of neighbor items
// 1160   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x64
        LCALL   ??NLME_GetRequest?relay
// 1161 
// 1162   // Get the number of associated items
// 1163   aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
        ; Setup parameters for call to function AssocCount
        MOV     R2,#0x4
        MOV     R1,#0x0
        LCALL   ??AssocCount?relay
        MOV     A,R2
        MOV     ?V0 + 4,A
// 1164 
// 1165   // Total number of items
// 1166   maxItems += aItems;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        ADD     A,?V0 + 4
        MOVX    @DPTR,A
// 1167 
// 1168   // Start with the supplied index
// 1169   if ( maxItems > StartIndex )
        MOV     R0,A
        MOV     A,?V0 + 6
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_0 & 0xFFFF
// 1170   {
// 1171     numItems = maxItems - StartIndex;
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 6
        MOV     ?V0 + 1,A
// 1172 
// 1173     // limit the size of the list
// 1174     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR     C
        SUBB    A,#0x4
        JC      ??ZDO_ProcessMgmtLqiReq_1
// 1175       numItems = ZDO_MAX_LQI_ITEMS;
        MOV     ?V0 + 1,#0x3
// 1176 
// 1177     // Allocate the memory to build the table
// 1178     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1179               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 1
        MOV     B,#0x1a
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 10,R2
        MOV     ?V0 + 11,R3
// 1180 
// 1181     if ( table != NULL )
        MOV     A,R2
        ORL     A,?V0 + 11
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_2 & 0xFFFF
// 1182     {
// 1183       x = 0;
        MOV     ?V0 + 5,#0x0
// 1184       item = table;
        MOV     R6,?V0 + 10
        MOV     R7,?V0 + 11
// 1185       index = StartIndex;
        MOV     ?V0 + 0,?V0 + 6
        LJMP    ??CrossCallReturnLabel_72 & 0xFFFF
// 1186 
// 1187       // Loop through associated items and build list
// 1188       for ( ; x < numItems; x++ )
// 1189       {
// 1190         if ( index < aItems )
// 1191         {
// 1192           // get next associated device
// 1193           aDevice = AssocFindDevice( index++ );
// 1194 
// 1195           // set basic fields
// 1196           item->panID   = _NIB.nwkPanId;
// 1197           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1198           item->nwkAddr = aDevice->shortAddr;
// 1199           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1200           item->depth   = 0xFF;
// 1201           item->lqi     = aDevice->linkInfo.rxLqi;
// 1202 
// 1203           // set extented address
// 1204           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1205           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1206 
// 1207           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1208           {
// 1209             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1210           }
// 1211           else
// 1212           {
// 1213             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_3:
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine140 & 0xFFFF
// 1214           }
??CrossCallReturnLabel_308:
        LCALL   ??osal_memset?relay
// 1215 
// 1216           // use association info to set other fields
// 1217           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_4:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        JNZ     ??ZDO_ProcessMgmtLqiReq_5
// 1218           {
// 1219             if (  aDevice->shortAddr == 0 )
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_442:
        JNZ     ??ZDO_ProcessMgmtLqiReq_6
// 1220             {
// 1221               item->devType = ZDP_MGMT_DT_COORD;
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_301:
        LCALL   ??Subroutine242_0 & 0xFFFF
// 1222               item->depth = 0;
??CrossCallReturnLabel_521:
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
// 1223             }
??CrossCallReturnLabel_622:
        CLR     A
        SJMP    ??ZDO_ProcessMgmtLqiReq_7
// 1224             else
// 1225             {
// 1226               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_6:
        LCALL   ?Subroutine121 & 0xFFFF
??CrossCallReturnLabel_314:
        MOVX    @DPTR,A
// 1227               item->depth = _NIB.nodeDepth - 1;
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
// 1228             }
// 1229 
// 1230             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1231             item->relation = ZDP_MGMT_REL_PARENT;
// 1232           }
??CrossCallReturnLabel_623:
        POP     A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_7:
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_19:
        CLR     A
        SJMP    ??CrossCallReturnLabel_312
// 1233           else
// 1234           {
// 1235             // If not parent, then it's a child
// 1236             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_5:
        MOV     DPTR,#_NIB + 52
        MOVX    A,@DPTR
        INC     A
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x18
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_624:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine24 & 0xFFFF
// 1237 
// 1238             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_28:
        CLR     C
        SUBB    A,#0x3
        MOV     A,R6
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_8 & 0xFFFF
// 1239             {
// 1240               item->devType = ZDP_MGMT_DT_ENDDEV;
        LCALL   ??Subroutine201_0 & 0xFFFF
// 1241 
// 1242               if ( aDevice->nodeRelation == CHILD_RFD )
// 1243               {
// 1244                 item->rxOnIdle = FALSE;
// 1245               }
// 1246               else
// 1247               {
// 1248                 item->rxOnIdle = TRUE;
// 1249               }
// 1250             }
??CrossCallReturnLabel_299:
        LCALL   ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_427:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_29:
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_9 & 0xFFFF
// 1251             else
// 1252             {
// 1253               item->devType = ZDP_MGMT_DT_ROUTER;
// 1254 
// 1255               if ( aDevice->nodeRelation == CHILD_FFD )
// 1256               {
// 1257                 item->rxOnIdle = FALSE;
// 1258               }
// 1259               else
// 1260               {
// 1261                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_10:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine205_0 & 0xFFFF
// 1262               }
??CrossCallReturnLabel_311:
        MOVX    @DPTR,A
// 1263             }
// 1264 
// 1265             item->relation = ZDP_MGMT_REL_CHILD;
        MOV     A,R6
        ADD     A,#0x16
        LCALL   ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_312:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_72:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 1
        JC      $+5
        LJMP    ??CrossCallReturnLabel_73 & 0xFFFF
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,?V0 + 4
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_11 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV     R1,?V0 + 0
        LCALL   ??AssocFindDevice?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        INC     ?V0 + 0
        MOV     DPTR,#_NIB + 33
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ??sAddrExtCpy?relay
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_352:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_15:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_625:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_353:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_334:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupNwk?relay
        MOV     A,R1
        XRL     A,#0x1
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_3 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??Subroutine203_0 & 0xFFFF
??CrossCallReturnLabel_307:
        LCALL   ??sAddrExtCpy?relay
        LJMP    ??ZDO_ProcessMgmtLqiReq_4 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_8:
        LCALL   ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_313:
        LCALL   ?Subroutine24 & 0xFFFF
??CrossCallReturnLabel_30:
        XRL     A,#0x3
        JZ      $+5
        LJMP    ??ZDO_ProcessMgmtLqiReq_10 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_9:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
// 1266           }
// 1267 
// 1268           item++;
// 1269         }
??CrossCallReturnLabel_626:
        CLR     A
        LJMP    ??CrossCallReturnLabel_311 & 0xFFFF
// 1270         else
// 1271         {
// 1272           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_11:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,?V0 + 6
        JC      ??ZDO_ProcessMgmtLqiReq_12
// 1273             // Start with 1st neighbor
// 1274             index = 0;
        MOV     ?V0 + 0,#0x0
        SJMP    ??ZDO_ProcessMgmtLqiReq_13
// 1275           else
// 1276             // Start with >1st neighbor
// 1277             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_12:
        MOV     A,?V0 + 6
        CLR     C
        SUBB    A,?V0 + 4
        MOV     ?V0 + 0,A
        SJMP    ??ZDO_ProcessMgmtLqiReq_13
// 1278           break;
// 1279         }
// 1280       }
// 1281 
// 1282       // Loop through neighbor items and finish list
// 1283       for ( ; x < numItems; x++ )
// 1284       {
// 1285         // Add next neighbor table item
// 1286         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1287 
// 1288         // set ZDP_MgmtLqiItem_t fields
// 1289         item->panID    = entry.panId;
// 1290         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1291         osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
// 1292         item->nwkAddr  = entry.neighborAddress;
// 1293         item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1294         item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1295         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1296         item->depth    = 0xFF;
// 1297         item->lqi      = entry.linkInfo.rxLqi;
// 1298 
// 1299         if ( item->nwkAddr == 0 )
// 1300         {
// 1301           item->devType = ZDP_MGMT_DT_COORD;
// 1302         }
// 1303         else
// 1304         {
// 1305           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_14:
        LCALL   ?Subroutine121 & 0xFFFF
// 1306         }
??CrossCallReturnLabel_315:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_73:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 1
        JNC     ??ZDO_ProcessMgmtLqiReq_2
??ZDO_ProcessMgmtLqiReq_13:
        ; Setup parameters for call to function NLME_GetRequest
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     ?V0 + 2,?V0 + 0
        MOV     R2,?V0 + 2
        MOV     R3,#0x0
        MOV     R1,#-0x79
        LCALL   ??NLME_GetRequest?relay
        INC     ?V0 + 0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine34 & 0xFFFF
??CrossCallReturnLabel_47:
        LCALL   ??sAddrExtCpy?relay
        ; Setup parameters for call to function osal_memset
        LCALL   ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_309:
        LCALL   ??osal_memset?relay
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_403:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine20 & 0xFFFF
??CrossCallReturnLabel_20:
        MOV     A,#0x3
        LCALL   ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_16:
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_627:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_464:
        JNZ     ??ZDO_ProcessMgmtLqiReq_14
        LCALL   ?Subroutine141 & 0xFFFF
// 1307 
// 1308         item++;
// 1309       }
// 1310     }
// 1311   }
??CrossCallReturnLabel_302:
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_628:
        CLR     A
        SJMP    ??CrossCallReturnLabel_315
// 1312   else
// 1313   {
// 1314     numItems = 0;
??ZDO_ProcessMgmtLqiReq_0:
        MOV     ?V0 + 1,#0x0
// 1315   }
// 1316 
// 1317   // Send response
// 1318   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1319                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_2:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 60)
        MOV     R0,#?V0 + 10
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 62)
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV     A,?V0 + 6
        MOV     ?V0 + 1,A
        MOV     R0,#?V0 + 1
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 64)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_483:
        LCALL   ??ZDP_MgmtLqiRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 59)
// 1320 
// 1321   if ( table )
        MOV     A,?V0 + 10
        ORL     A,?V0 + 11
        JZ      ??ZDO_ProcessMgmtLqiReq_15
// 1322   {
// 1323     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 10
        MOV     R3,?V0 + 11
        LCALL   ??osal_mem_free?relay
// 1324   }
// 1325 }
??ZDO_ProcessMgmtLqiReq_15:
        MOV     A,#0x25
          CFI EndBlock cfiBlock168
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock169 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Valid
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock169

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+0
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker172 Using cfiCommon1
          CFI (cfiPicker172) NoFunction
          CFI (cfiPicker172) Picker
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#-0x1
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiPicker172
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiCond173 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_307
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_308
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond174) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond174) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond174) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond174) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond174) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond174) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond174) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond174) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond174) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+0
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+0
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker176 Using cfiCommon1
          CFI (cfiPicker176) NoFunction
          CFI (cfiPicker176) Picker
        MOV     A,R6
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiPicker176

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond177 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond178) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond178) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond178) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond178) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond178) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond178) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond178) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond178) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond178) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond178) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond178) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond178) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond178) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond178) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond178) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond178) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond178) CFA_SP SP+0
          CFI (cfiCond178) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker179 Using cfiCommon1
          CFI (cfiPicker179) NoFunction
          CFI (cfiPicker179) Picker
        MOV     A,R6
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiPicker179
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine204_0:
          CFI Block cfiCond180 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_313
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+0
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+0
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker183 Using cfiCommon1
          CFI (cfiPicker183) NoFunction
          CFI (cfiPicker183) Picker
        ADD     A,#0x14
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiPicker183
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine205_0:
          CFI Block cfiCond184 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_311
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+0
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond186) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond186) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond186) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond186) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond186) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond186) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond186) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond186) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond186) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond186) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond186) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond186) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond186) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond186) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond186) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond186) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond186) CFA_SP SP+0
          CFI (cfiCond186) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond187) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond187) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond187) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond187) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond187) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond187) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond187) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond187) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond187) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond187) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond187) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond187) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond187) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond187) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond187) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond187) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond187) CFA_SP SP+0
          CFI (cfiCond187) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+0
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine206_0:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_310
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+0
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+0
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_313
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+0
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+0
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+0
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker196 Using cfiCommon1
          CFI (cfiPicker196) NoFunction
          CFI (cfiPicker196) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_659:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiPicker196

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond197 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_320
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+0
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+0
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker200 Using cfiCommon1
          CFI (cfiPicker200) NoFunction
          CFI (cfiPicker200) Picker
        LCALL   ?Subroutine183 & 0xFFFF
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiPicker200
??CrossCallReturnLabel_266:
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine207_0:
          CFI Block cfiCond201 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_319
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond202) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond202) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond202) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond202) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond202) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond202) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond202) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond202) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond202) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond202) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond202) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond202) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond202) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond202) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond202) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond202) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond202) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond202) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond202) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond202) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond202) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond202) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond202) CFA_SP SP+0
          CFI (cfiCond202) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond203) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond203) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond203) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond203) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond203) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond203) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond203) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond203) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond203) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+0
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond204) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond204) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond204) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond204) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond204) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond204) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond204) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond204) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond204) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond204) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond204) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond204) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond204) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond204) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond204) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond204) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond204) CFA_SP SP+0
          CFI (cfiCond204) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker205 Using cfiCommon1
          CFI (cfiPicker205) NoFunction
          CFI (cfiPicker205) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiPicker205
??CrossCallReturnLabel_660:
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine208_0:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_316
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+0
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+0
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+0
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_320
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+0
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+0
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond212) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond212) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond212) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond212) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond212) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond212) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond212) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond212) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond212) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+0
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker213 Using cfiCommon1
          CFI (cfiPicker213) NoFunction
          CFI (cfiPicker213) Picker
        LCALL   ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_327:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiPicker213

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond214 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond215) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond215) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond215) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond215) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond215) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+0
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker216 Using cfiCommon1
          CFI (cfiPicker216) NoFunction
          CFI (cfiPicker216) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        INC     ?V0 + 5
        RET
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiPicker216

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond217 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_342
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+0
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker219 Using cfiCommon1
          CFI (cfiPicker219) NoFunction
          CFI (cfiPicker219) Picker
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiPicker219
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine209_0:
          CFI Block cfiCond220 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_332
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond221) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond221) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond221) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond221) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond221) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond221) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond221) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond221) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond221) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond221) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond221) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond221) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond221) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond221) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond221) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond221) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond221) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond221) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond221) CFA_SP SP+0
          CFI (cfiCond221) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+0
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+0
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond224) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond224) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond224) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond224) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond224) CFA_SP SP+0
          CFI (cfiCond224) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+0
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+0
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+0
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDMatchSendState
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+0
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+0
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+0
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+0
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker232 Using cfiCommon1
          CFI (cfiPicker232) NoFunction
          CFI (cfiPicker232) Picker
        MOV     A,R0
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiPicker232
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiCond233 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_328
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+0
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+0
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+0
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond237) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond237) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond237) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond237) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond237) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond237) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond237) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+0
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond238) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond238) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond238) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+0
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+0
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+0
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond241) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond241) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond241) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond241) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond241) CFA_SP SP+0
          CFI (cfiCond241) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond242) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond242) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond242) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond242) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond242) CFA_SP SP+0
          CFI (cfiCond242) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+0
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+0
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDMatchSendState
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+0
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+0
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+0
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+0
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker249 Using cfiCommon1
          CFI (cfiPicker249) NoFunction
          CFI (cfiPicker249) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiPicker249

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond250 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+0
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker252 Using cfiCommon1
          CFI (cfiPicker252) NoFunction
          CFI (cfiPicker252) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_490:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,#(_NIB + 53) & 0xff
        MOV     R5,#((_NIB + 53) >> 8) & 0xff
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiPicker252

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond253 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+0
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+0
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker256 Using cfiCommon1
          CFI (cfiPicker256) NoFunction
          CFI (cfiPicker256) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_229:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiPicker256

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond257 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+0
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker259 Using cfiCommon1
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_257:
        ADD     A,#0x16
        LCALL   ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_666:
        RET
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+0
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker262 Using cfiCommon1
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x17
        LCALL   ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_258:
        ADD     A,#0x18
        LCALL   ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_665:
        MOV     A,#-0x1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine178:
          CFI Block cfiCond263 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_20
          CFI (cfiCond264) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond264) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond264) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond264) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond264) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond264) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond264) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond264) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond264) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond264) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond264) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond264) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond264) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond264) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond264) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond264) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond264) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond264) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond264) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond264) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond264) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond264) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond264) CFA_SP SP+0
          CFI (cfiCond264) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_15
          CFI (cfiCond265) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond265) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond265) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond265) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond265) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond265) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond265) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond265) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond265) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond265) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond265) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond265) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond265) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond265) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond265) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond265) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond265) CFA_SP SP+0
          CFI (cfiCond265) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_16
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond266) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond266) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond266) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond266) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond266) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+0
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiPicker267 Using cfiCommon1
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_671:
        MOV     A,#0x2
        MOVX    @DPTR,A
        MOV     A,R6
        RET
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267
// 1326 
// 1327 /*********************************************************************
// 1328  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1329  *
// 1330  * @brief       This function handles parsing the incoming Management
// 1331  *              Network Discover request and starts the request.
// 1332  *
// 1333  * @param       inMsg - incoming message (request)
// 1334  *
// 1335  * @return      none
// 1336  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1337 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock268 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1338 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV     A,#-0x7
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1339   NLME_ScanFields_t scan;
// 1340   uint8             index;
// 1341   uint8             *msg;
// 1342 
// 1343   msg = inMsg->asdu;
        LCALL   ?Subroutine92 & 0xFFFF
// 1344   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_153:
        LCALL   ??osal_build_uint32?relay
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ?XSTORE_R2345
// 1345   msg += 4;
        LCALL   ?Subroutine122 & 0xFFFF
// 1346   scan.duration = *msg++;
??CrossCallReturnLabel_344:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine151 & 0xFFFF
// 1347   index         = *msg;
??CrossCallReturnLabel_594:
        MOVX    A,@DPTR
        MOV     R2,A
// 1348   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1349   scan.scanApp  = NLME_DISC_SCAN;
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1350 
// 1351   // Save off the information to be used for the response
// 1352   zdappMgmtNwkDiscReqInProgress          = true;
        MOV     DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX    @DPTR,A
// 1353   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC     A
        LCALL   ?Subroutine55 & 0xFFFF
// 1354   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_91:
        INC     DPTR
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_354:
        MOV     DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL   ??Subroutine209_0 & 0xFFFF
// 1355   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_335:
        MOV     A,R2
        MOV     DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX    @DPTR,A
// 1356   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        MOV     A,?V0 + 0
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_268:
        MOV     A,?V0 + 1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_372:
        MOV     DPTR,#zdappMgmtNwkDiscRspTransSeq
        LCALL   ?Subroutine148 & 0xFFFF
// 1357 
// 1358   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
??CrossCallReturnLabel_224:
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??NLME_NwkDiscReq2?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtNwkDiscReq_0
// 1359   {
// 1360     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL   ??NLME_NwkDiscTerm?relay
// 1361 
// 1362     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1363   }
// 1364 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV     A,#0x7
        LJMP    ??Subroutine195_0 & 0xFFFF
          CFI EndBlock cfiBlock268

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond269 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_344
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+0
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker271 Using cfiCommon1
          CFI (cfiPicker271) NoFunction
          CFI (cfiPicker271) Picker
        MOV     A,R6
        ADD     A,#0x4
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiPicker271
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond272 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_346
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond273) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond273) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond273) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond273) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond273) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond273) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond273) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+0
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+0
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+0
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker276 Using cfiCommon1
          CFI (cfiPicker276) NoFunction
          CFI (cfiPicker276) Picker
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiPicker276

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond277 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+0
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+0
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker280 Using cfiCommon1
          CFI (cfiPicker280) NoFunction
          CFI (cfiPicker280) Picker
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiPicker280
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond281 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_AnyClusterMatches
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+0
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond283) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond283) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond283) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+0
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+0
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond285) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+0
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond286) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond286) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond286) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond286) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond286) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+0
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+0
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+0
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+0
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ParseUserDescRsp
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+0
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond291 Using cfiCommon0
          CFI (cfiCond291) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond291) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond291) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond291) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond291) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond291) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond291) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond291) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond291) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond291) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond291) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond291) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond291) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond291) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond291) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond291) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond291) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond291) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond291) CFA_SP SP+0
          CFI (cfiCond291) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+0
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+0
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker294 Using cfiCommon1
          CFI (cfiPicker294) NoFunction
          CFI (cfiPicker294) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_494:
        RET
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiPicker294

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond295 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_491, ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ProcessUserDescReq
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_491, ??CrossCallReturnLabel_283
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+0
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_490, ??CrossCallReturnLabel_46
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond297) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond297) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond297) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond297) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond297) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond297) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond297) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond297) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond297) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond297) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond297) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+0
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_490, ??CrossCallReturnLabel_47
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond298) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond298) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond298) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond298) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond298) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond298) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond298) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond298) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond298) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+0
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_358
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond299) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond299) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond299) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond299) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond299) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+0
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_359
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+0
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_360
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+0
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDO_CompareClusterLists
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_348
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond302) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond302) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+0
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDO_AnyClusterMatches
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_349
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+0
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_350
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond304) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+0
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_351
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+0
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_352
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+0
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_353
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+0
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_354
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+0
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_355
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+0
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_356
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+0
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ParseUserDescRsp
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_494, ??CrossCallReturnLabel_357
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+0
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_493, ??CrossCallReturnLabel_171
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+0
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_493, ??CrossCallReturnLabel_172
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+0
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_488
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+0
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDMatchSendState
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_489
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond315) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+0
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDMatchSendState
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_487
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond316) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond316) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond316) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+0
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_485
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+0
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDMatchSendState
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_495, ??CrossCallReturnLabel_486
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+0
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_UpdateNwkStatus
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_492, ??CrossCallReturnLabel_169
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+0
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_492, ??CrossCallReturnLabel_170
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+0
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker321 Using cfiCommon1
          CFI (cfiPicker321) NoFunction
          CFI (cfiPicker321) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        RET
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiPicker321
// 1365 
// 1366 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1367 /*********************************************************************
// 1368  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1369  *
// 1370  * @brief       This function finishes the processing of the Management
// 1371  *              Network Discover Request and generates the response.
// 1372  *
// 1373  *   Note:      This function will limit the number of items returned
// 1374  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1375  *
// 1376  * @param       ResultCountSrcAddr - source of the request
// 1377  * @param       msg - pointer to incoming message
// 1378  * @param       SecurityUse -
// 1379  *
// 1380  * @return      none
// 1381  */
// 1382 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1383 {
// 1384   byte count, i, ResultCount = 0;
// 1385   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1386 
// 1387   NetworkList = nwk_getNwkDescList();
// 1388 
// 1389   // Count the number of nwk descriptors in the list
// 1390   pList = nwk_getNwkDescList();
// 1391   while (pList)
// 1392   {
// 1393     ResultCount++;
// 1394     pList = pList->nextDesc;
// 1395   }
// 1396 
// 1397   if ( ZSTACK_ROUTER_BUILD )
// 1398   {
// 1399     // Look for my PanID.
// 1400     pList = nwk_getNwkDescList();
// 1401     while ( pList )
// 1402     {
// 1403       if ( pList->panId == _NIB.nwkPanId )
// 1404       {
// 1405         break;
// 1406       }
// 1407 
// 1408 
// 1409       if ( !pList->nextDesc )
// 1410       {
// 1411         break;
// 1412       }
// 1413       pList = pList->nextDesc;
// 1414     }
// 1415 
// 1416 
// 1417     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1418     // prepend it.
// 1419     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1420     {
// 1421       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1422       if ( newDesc )
// 1423       {
// 1424         byte pJoin;
// 1425 
// 1426         newDesc->panId = _NIB.nwkPanId;
// 1427         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1428         newDesc->version = NLME_GetProtocolVersion();
// 1429         newDesc->stackProfile = zgStackProfile;
// 1430 
// 1431         //Extended PanID
// 1432         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1433 
// 1434         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1435         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1436                                            INVALID_NODE_ADDR);
// 1437 
// 1438         newDesc->nextDesc = NetworkList;
// 1439         NetworkList = newDesc;
// 1440         ResultCount++;
// 1441       }
// 1442     }
// 1443   }
// 1444 
// 1445   // Calc the count and apply a max count.
// 1446   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1447   {
// 1448     count = 0;
// 1449   }
// 1450   else
// 1451   {
// 1452     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1453     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1454     {
// 1455       count = ZDO_MAX_NWKDISC_ITEMS;
// 1456     }
// 1457 
// 1458     // Move the list pointer up to the start index.
// 1459     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1460     {
// 1461       NetworkList = NetworkList->nextDesc;
// 1462     }
// 1463   }
// 1464 
// 1465   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1466                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1467                       zdappMgmtNwkDiscStartIndex,
// 1468                       count,
// 1469                       NetworkList,
// 1470                       false );
// 1471 
// 1472   if ( ZSTACK_ROUTER_BUILD )
// 1473   {
// 1474     if ( newDesc != NULL )
// 1475     {
// 1476       osal_mem_free( newDesc );
// 1477     }
// 1478   }
// 1479 
// 1480   NLME_NwkDiscTerm();
// 1481 }
// 1482 #endif
// 1483 
// 1484 /*********************************************************************
// 1485  * @fn          ZDO_ProcessMgmtRtgReq
// 1486  *
// 1487  * @brief       This function finishes the processing of the Management
// 1488  *              Routing Request and generates the response.
// 1489  *
// 1490  *   Note:      This function will limit the number of items returned
// 1491  *              to ZDO_MAX_RTG_ITEMS items.
// 1492  *
// 1493  * @param       inMsg - incoming message (request)
// 1494  *
// 1495  * @return      none
// 1496  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1497 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock322 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1498 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 1499   byte x;
// 1500   byte maxNumItems;
// 1501   byte numItems = 0;
        MOV     R6,#0x0
// 1502   uint8 *pBuf = NULL;
        MOV     ?V0 + 6,R6
        MOV     ?V0 + 7,R6
// 1503   rtgItem_t *pList;
// 1504   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV     R7,A
// 1505 
// 1506   // Get the number of table items
// 1507   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x63
        LCALL   ??NLME_GetRequest?relay
// 1508 
// 1509   if ( maxNumItems > StartIndex )
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R7
        CLR     C
        SUBB    A,R0
        JC      $+5
        LJMP    ??ZDO_ProcessMgmtRtgReq_0 & 0xFFFF
// 1510   {
// 1511     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,R7
        MOV     R6,A
// 1512 
// 1513     // limit the size of the list
// 1514     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR     C
        SUBB    A,#0xb
        JC      ??ZDO_ProcessMgmtRtgReq_1
// 1515     {
// 1516       numItems = ZDO_MAX_RTG_ITEMS;
        MOV     R6,#0xa
// 1517     }
// 1518 
// 1519     // Allocate the memory to build the table
// 1520     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     B,#0x7
        MUL     AB
        MOV     R2,A
        MOV     R3,B
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
// 1521 
// 1522     if ( pBuf != NULL )
        MOV     A,R2
        ORL     A,?V0 + 7
        JZ      ??ZDO_ProcessMgmtRtgReq_2
// 1523     {
// 1524       // Convert buffer to list
// 1525       pList = (rtgItem_t *)pBuf;
// 1526 
// 1527       // Loop through items and build list
// 1528       for ( x = 0; x < numItems; x++ )
        MOV     ?V0 + 4,#0x0
        SJMP    ??ZDO_ProcessMgmtRtgReq_3
// 1529       {
// 1530         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1531 
// 1532         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1533         switch( pList->status )
// 1534         {
// 1535           case RT_ACTIVE:
// 1536             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1537             break;
// 1538 
// 1539           case RT_DISC:
// 1540             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1541             break;
// 1542 
// 1543           case RT_LINK_FAIL:
// 1544             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1545             break;
// 1546 
// 1547           case RT_INIT:
// 1548           case RT_REPAIR:
// 1549           default:
// 1550             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX    @DPTR,A
// 1551             break;
// 1552         }
// 1553 
// 1554         // Increment pointer to next record
// 1555         pList++;
        MOV     A,?V0 + 0
        ADD     A,#0x7
        LCALL   ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_602:
        INC     ?V0 + 4
??ZDO_ProcessMgmtRtgReq_3:
        MOV     A,?V0 + 4
        CLR     C
        SUBB    A,R6
        JNC     ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        MOV     ?V0 + 8,?V0 + 4
        MOV     ?V0 + 10,R7
        MOV     A,?V0 + 8
        ADD     A,?V0 + 10
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x75
        LCALL   ??NLME_GetRequest?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_6
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_7
        DEC     A
        JZ      ??ZDO_ProcessMgmtRtgReq_8
        SJMP    ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_6:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_7:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x1
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,#0x2
        SJMP    ??ZDO_ProcessMgmtRtgReq_5
// 1556       }
// 1557     }
// 1558     else
// 1559     {
// 1560       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV     R6,#0x0
// 1561     }
// 1562   }
// 1563 
// 1564   // Send response
// 1565   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1566                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R0,#?V0 + 6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     A,R6
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R7
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,#0x0
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 2
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_269:
        MOV     A,?V0 + 3
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_477:
        LCALL   ??ZDP_MgmtRtgRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1567 
// 1568   if ( pBuf != NULL )
        MOV     A,?V0 + 6
        ORL     A,?V0 + 7
        JZ      ??ZDO_ProcessMgmtRtgReq_9
// 1569   {
// 1570     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 6
        MOV     R3,?V0 + 7
        LCALL   ??osal_mem_free?relay
// 1571   }
// 1572 }
??ZDO_ProcessMgmtRtgReq_9:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock322
// 1573 
// 1574 /*********************************************************************
// 1575  * @fn          ZDO_ProcessMgmtBindReq
// 1576  *
// 1577  * @brief       This function finishes the processing of the Management
// 1578  *              Bind Request and generates the response.
// 1579  *
// 1580  *   Note:      This function will limit the number of items returned
// 1581  *              to ZDO_MAX_BIND_ITEMS items.
// 1582  *
// 1583  * @param       inMsg - incoming message (request)
// 1584  *
// 1585  * @return      none
// 1586  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1587 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock323 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1588 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 2
        MOV     A,#-0x2
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     ?V0 + 12,R2
        MOV     ?V0 + 13,R3
// 1589 #if defined ( REFLECTOR )
// 1590   byte x;
// 1591   uint16 maxNumItems;
// 1592   uint16 numItems;
// 1593   uint8 *pBuf = NULL;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 1594   apsBindingItem_t *pList;
// 1595   uint8 StartIndex = inMsg->asdu[0];
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_322:
        MOV     ?V0 + 0,A
// 1596   uint8 status;
// 1597 
// 1598   // Get the number of table items
// 1599   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     R2,#0x0
        MOV     R3,#0x0
        MOV     R1,#-0x5d
        LCALL   ??APSME_GetRequest?relay
// 1600 
// 1601   if ( maxNumItems > StartIndex )
        MOV     ?V0 + 4,?V0 + 0
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_358:
        CLR     C
        MOV     A,?V0 + 4
        SUBB    A,R0
        CLR     A
        SUBB    A,R1
        JNC     ??ZDO_ProcessMgmtBindReq_0
// 1602   {
// 1603     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V0 + 4
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x0
        MOV     R7,A
// 1604   }
// 1605   else
// 1606   {
// 1607     numItems = 0;
// 1608   }
// 1609 
// 1610   // limit the size of the list
// 1611   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR     C
        MOV     A,R6
        SUBB    A,#0x4
        MOV     A,R7
        SUBB    A,#0x0
        JC      ??ZDO_ProcessMgmtBindReq_1
// 1612   {
// 1613     numItems = ZDO_MAX_BIND_ITEMS;
        MOV     R6,#0x3
        MOV     R7,#0x0
        SJMP    ??ZDO_ProcessMgmtBindReq_2
// 1614   }
// 1615 
// 1616   // Allocate the memory to build the table
// 1617   if ( numItems && (pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems )) )
??ZDO_ProcessMgmtBindReq_1:
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ProcessMgmtBindReq_0
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,R2
        MOV     B,#0x15
        MUL     AB
        MOV     R2,A
        MOV     R0,B
        MOV     B,#0x15
        MOV     A,R3
        MUL     AB
        ADD     A,R0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     A,R2
        ORL     A,?V0 + 3
        JZ      ??ZDO_ProcessMgmtBindReq_0
// 1618   {
// 1619     status = ZSuccess;
        MOV     ?V0 + 1,#0x0
// 1620 
// 1621     // Convert buffer to list
// 1622     pList = (apsBindingItem_t *)pBuf;
// 1623 
// 1624     // Loop through items and build list
// 1625     for ( x = 0; x < numItems; x++ )
        MOV     ?V0 + 6,#0x0
??ZDO_ProcessMgmtBindReq_3:
        MOV     ?V0 + 8,?V0 + 6
        CLR     C
        MOV     A,?V0 + 8
        SUBB    A,R6
        CLR     A
        SUBB    A,R7
        JNC     ??ZDO_ProcessMgmtBindReq_4
// 1626     {
// 1627       APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
        ; Setup parameters for call to function APSME_GetRequest
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     ?V0 + 10,?V0 + 6
        MOV     ?V0 + 8,?V0 + 0
        MOV     A,?V0 + 10
        ADD     A,?V0 + 8
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        MOV     R1,#-0x5e
        LCALL   ??APSME_GetRequest?relay
// 1628       pList++;
        MOV     A,?V0 + 4
        ADD     A,#0x15
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 5
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
// 1629     }
        INC     ?V0 + 6
        SJMP    ??ZDO_ProcessMgmtBindReq_3
// 1630 
// 1631   }
// 1632   else
// 1633   {
// 1634     status = ZDP_NOT_PERMITTED;
??ZDO_ProcessMgmtBindReq_0:
        MOV     ?V0 + 1,#-0x75
// 1635     numItems = 0;
        MOV     R6,#0x0
// 1636   }
// 1637 
// 1638   // Send response
// 1639   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1640                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_4:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV     ?V0 + 4,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     A,R6
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     R4,?V0 + 1
        LCALL   ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_484:
        LCALL   ??ZDP_MgmtBindRsp?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 1641 
// 1642   if ( pBuf )
        MOV     A,?V0 + 2
        ORL     A,?V0 + 3
        JZ      ??ZDO_ProcessMgmtBindReq_5
// 1643   {
// 1644     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LCALL   ??osal_mem_free?relay
// 1645   }
// 1646 #else
// 1647   (void)inMsg;
// 1648 #endif
// 1649 }
??ZDO_ProcessMgmtBindReq_5:
        MOV     A,#0x2
        LJMP    ?Subroutine7 & 0xFFFF
          CFI EndBlock cfiBlock323
// 1650 
// 1651 /*********************************************************************
// 1652  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1653  *
// 1654  * @brief       This function finishes the processing of the Management
// 1655  *              Direct Join Request and generates the response.
// 1656  *
// 1657  * @param       inMsg - incoming message (request)
// 1658  *
// 1659  * @return      none
// 1660  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1661 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock324 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1662 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine115 & 0xFFFF
// 1663   uint8 *deviceAddr;
// 1664   uint8 capInfo;
// 1665   uint8 stat;
// 1666 
// 1667   // Parse the message
// 1668   deviceAddr = inMsg->asdu;
// 1669   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1670 
// 1671   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
??CrossCallReturnLabel_575:
        MOV     A,R7
        LCALL   ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_160:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   ??NLME_DirectJoinRequest?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1672 
// 1673   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x35
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_362:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock324
// 1674 }
        REQUIRE ?Subroutine11
        ; // Fall through to label ?Subroutine11

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiBlock325 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LJMP    ??Subroutine195_0 & 0xFFFF
          CFI EndBlock cfiBlock325

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond326 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_362
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+0
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        MOV     R1,#0x1
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_361
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+0
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+0
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker332 Using cfiCommon1
          CFI (cfiPicker332) NoFunction
          CFI (cfiPicker332) Picker
        LCALL   ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_365:
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiPicker332

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine182:
          CFI Block cfiCond333 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_364
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_362
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+0
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_363
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+0
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessUserDescSet
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_365, ??CrossCallReturnLabel_361
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+0
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker337 Using cfiCommon1
          CFI (cfiPicker337) NoFunction
          CFI (cfiPicker337) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R6
        ADD     A,#0xf
        RET
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiPicker337
// 1675 
// 1676 /*********************************************************************
// 1677  * @fn          ZDO_ProcessMgmtLeaveReq
// 1678  *
// 1679  * @brief       This function processes a Management Leave Request
// 1680  *              and generates the response.
// 1681  *
// 1682  * @param       inMsg - incoming message (request)
// 1683  *
// 1684  * @return      none
// 1685  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1686 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock338 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1687 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV     A,#-0x6
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 1688   NLME_LeaveReq_t req;
// 1689   ZStatus_t       status;
// 1690   uint8           option;
// 1691   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine113 & 0xFFFF
// 1692 
// 1693   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1694        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
??CrossCallReturnLabel_185:
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??AddrMgrExtAddrValid?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function sAddrExtCmp
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   ??NLME_GetExtAddr?relay
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        XRL     A,#0x1
        JNZ     ??ZDO_ProcessMgmtLeaveReq_1
// 1695   {
// 1696     // Remove this device
// 1697     req.extAddr = NULL;
??ZDO_ProcessMgmtLeaveReq_0:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        SJMP    ??ZDO_ProcessMgmtLeaveReq_2
// 1698   }
// 1699   else
// 1700   {
// 1701     // Remove child device
// 1702     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
// 1703   }
??ZDO_ProcessMgmtLeaveReq_2:
        LCALL   ?Subroutine48 & 0xFFFF
// 1704 
// 1705   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_74:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
// 1706   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV     C,0xE0 /* A   */.6
        JNC     ??ZDO_ProcessMgmtLeaveReq_3
// 1707   {
// 1708     req.removeChildren = TRUE;
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1709   }
// 1710 
// 1711   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV     A,R0
        MOV     C,0xE0 /* A   */.7
        JNC     ??ZDO_ProcessMgmtLeaveReq_4
// 1712   {
// 1713      req.rejoin = TRUE;
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x1
        MOVX    @DPTR,A
// 1714   }
// 1715 
// 1716   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV     A,#0x5
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        MOVX    @DPTR,A
// 1717 
// 1718   status = NLME_LeaveReq( &req );
        ; Setup parameters for call to function NLME_LeaveReq
        INC     A
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??NLME_LeaveReq?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1719 
// 1720   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     ?V0 + 2,#0x34
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_199:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1721 }
        MOV     A,#0x6
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock338

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond339 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+0
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker341 Using cfiCommon1
          CFI (cfiPicker341) NoFunction
          CFI (cfiPicker341) Picker
        MOV     R1,#0x1
        MOV     A,?V0 + 0
        ADD     A,#0x2
        MOV     R4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,?V0 + 0
        ADD     A,#0xf
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiPicker341
// 1722 
// 1723 
// 1724 /*********************************************************************
// 1725  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1726  *
// 1727  * @brief       This function processes a Management Permit Join Request
// 1728  *              and generates the response.
// 1729  *
// 1730  * @param       inMsg - incoming message (request)
// 1731  *
// 1732  * @return      none
// 1733  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1734 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock342 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1735 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        LCALL   ?Subroutine115 & 0xFFFF
// 1736   uint8 stat;
// 1737   uint8 duration;
// 1738   uint8 tcsig;
// 1739 
// 1740   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
// 1741   tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1742 
// 1743   // Set the network layer permit join duration
// 1744   stat = (byte) NLME_PermitJoiningRequest( duration );
??CrossCallReturnLabel_576:
        MOV     A,R7
        LCALL   ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_319:
        MOV     R1,A
        LCALL   ??NLME_PermitJoiningRequest?relay
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1745 
// 1746   // Handle the Trust Center Significance
// 1747   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1748   {
// 1749     if ( tcsig == TRUE )
// 1750     {
// 1751       ZDSecMgrPermitJoining( duration );
// 1752     }
// 1753   }
// 1754 
// 1755   // Send a response if unicast
// 1756   if ( !inMsg->wasBroadcast )
        MOV     A,R6
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_373:
        JNZ     ??ZDO_ProcessMgmtPermitJoinReq_0
// 1757   {
// 1758     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV     ?V0 + 0,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     ?V0 + 0,#0x36
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ?Subroutine120 & 0xFFFF
// 1759   }
??CrossCallReturnLabel_363:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1760 }
??ZDO_ProcessMgmtPermitJoinReq_0:
        LJMP    ?Subroutine11 & 0xFFFF
          CFI EndBlock cfiBlock342

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond343 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_378
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+0
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+0
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+0
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+0
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+0
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDMatchSendState
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+0
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDMatchSendState
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+0
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDMatchSendState
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+0
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDO_ParseAddrRsp
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+0
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker353 Using cfiCommon1
          CFI (cfiPicker353) NoFunction
          CFI (cfiPicker353) Picker
        MOV     DPL,A
        MOV     A,R0
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiPicker353
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiCond354 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_366
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+0
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+0
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+0
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+0
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+0
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+0
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+0
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_ProcessUserDescReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+0
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDO_CopyMatchInfo
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+0
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDO_CopyMatchInfo
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_376
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+0
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_ParseAddrRsp
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+0
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+0
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_379
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+0
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+0
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+0
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+0
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+0
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDMatchSendState
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+0
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDMatchSendState
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+0
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDMatchSendState
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+0
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ParseAddrRsp
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+0
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker376 Using cfiCommon1
          CFI (cfiPicker376) NoFunction
          CFI (cfiPicker376) Picker
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_510:
        RET
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiPicker376
// 1761 
// 1762 /*
// 1763  * This function stub allows the next higher layer to be notified of
// 1764  * a permit joining timeout.
// 1765  */
// 1766 /*********************************************************************
// 1767  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1768  *
// 1769  * @brief       This function stub allows the next higher layer to be
// 1770  *              notified of a permit joining timeout. Currently, this
// 1771  *              directly bypasses the APS layer.
// 1772  *
// 1773  * @param       none
// 1774  *
// 1775  * @return      none
// 1776  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1777 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock377 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 1778 {
        ; Saved register size: 0
        ; Auto size: 0
// 1779   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 1780   // Currently, only the ZDSecMgr needs to be notified
// 1781   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1782   {
// 1783     ZDSecMgrPermitJoiningTimeout();
// 1784   }
// 1785   #endif
// 1786 }
        LJMP    ?BRET
          CFI EndBlock cfiBlock377
// 1787 
// 1788 /*********************************************************************
// 1789  * @fn          ZDO_ProcessUserDescReq
// 1790  *
// 1791  * @brief       This function finishes the processing of the User
// 1792  *              Descriptor Request and generates the response.
// 1793  *
// 1794  * @param       inMsg - incoming message (request)
// 1795  *
// 1796  * @return      none
// 1797  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1798 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock378 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 1799 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 32, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 32, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 17
        MOV     A,#-0x11
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1800   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL   ?Subroutine62 & 0xFFFF
// 1801   UserDescriptorFormat_t userDesc;
// 1802 
// 1803   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 1804              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
??CrossCallReturnLabel_283:
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessUserDescReq_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessUserDescReq_0:
        JNZ     ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     ?V0 + 2,#0x11
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_read?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     A,R1
        JNZ     ??ZDO_ProcessUserDescReq_1
// 1805   {
// 1806     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 32)
        MOV     R4,?V0 + 0
        MOV     R5,?V0 + 1
        LCALL   ?Subroutine117 & 0xFFFF
// 1807   }
??CrossCallReturnLabel_192:
        LCALL   ??ZDP_UserDescRsp?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
        SJMP    ??ZDO_ProcessUserDescReq_2
// 1808   else
// 1809   {
// 1810     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 1811            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV     ?V0 + 2,#0x11
        MOV     ?V0 + 3,#-0x80
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL   ?Subroutine137 & 0xFFFF
// 1812   }
??CrossCallReturnLabel_210:
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_374:
        MOV     R5,A
        MOV     R4,#-0x7c
        LCALL   ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL   ??ZDP_GenericRsp?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 29)
// 1813 }
??ZDO_ProcessUserDescReq_2:
        MOV     A,#0x11
        LJMP    ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond379 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+0
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDO_ProcessUserDescReq
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+0
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond382 Using cfiCommon0
          CFI (cfiCond382) Function ZDO_ProcessUserDescSet
          CFI (cfiCond382) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond382) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond382) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond382) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond382) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond382) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond382) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond382) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond382) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond382) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond382) CFA_SP SP+0
          CFI (cfiCond382) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker383 Using cfiCommon1
          CFI (cfiPicker383) NoFunction
          CFI (cfiPicker383) Picker
        MOV     A,R6
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_562:
        MOV     A,R7
        RET
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiCond382
          CFI EndBlock cfiPicker383

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_191
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessUserDescReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+0
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessUserDescReq
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+0
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        LCALL   ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_253:
        RET
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_107
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+0
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_191
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+0
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDO_ProcessUserDescReq
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_192
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+0
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDO_ProcessUserDescReq
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_193
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+0
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker393 Using cfiCommon1
          CFI (cfiPicker393) NoFunction
          CFI (cfiPicker393) Picker
        MOV     A,R6
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,R6
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_273:
        MOV     A,R7
        LCALL   ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_512:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiPicker393

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine191:
          CFI Block cfiCond394 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_194
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_271, ??CrossCallReturnLabel_195
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+0
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond396 Using cfiCommon0
          CFI (cfiCond396) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond396) Conditional ??CrossCallReturnLabel_268
          CFI (cfiCond396) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond396) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond396) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond396) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond396) CFA_SP SP+0
          CFI (cfiCond396) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond397 Using cfiCommon0
          CFI (cfiCond397) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond397) Conditional ??CrossCallReturnLabel_269
          CFI (cfiCond397) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond397) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond397) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond397) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond397) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond397) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond397) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond397) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond397) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond397) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond397) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond397) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond397) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond397) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond397) CFA_SP SP+0
          CFI (cfiCond397) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_106
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+0
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_107
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+0
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_191
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+0
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDO_ProcessUserDescReq
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_192
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+0
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond402 Using cfiCommon0
          CFI (cfiCond402) Function ZDO_ProcessUserDescReq
          CFI (cfiCond402) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_193
          CFI (cfiCond402) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond402) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond402) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond402) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond402) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond402) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond402) CFA_SP SP+0
          CFI (cfiCond402) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_483
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+0
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_484
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+0
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-1
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker406 Using cfiCommon1
          CFI (cfiPicker406) NoFunction
          CFI (cfiPicker406) Picker
        ADD     A,#0xf
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiCond396
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiPicker406
// 1814 
// 1815 /*********************************************************************
// 1816  * @fn          ZDO_ProcessUserDescSet
// 1817  *
// 1818  * @brief       This function finishes the processing of the User
// 1819  *              Descriptor Set and generates the response.
// 1820  *
// 1821  * @param       inMsg - incoming message (request)
// 1822  *
// 1823  * @return      none
// 1824  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1825 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock407 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 1826 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 21
        MOV     A,#-0x15
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1827   uint8 *msg;
// 1828   uint16 aoi;
// 1829   UserDescriptorFormat_t userDesc;
// 1830   uint8 outMsg[3];
// 1831   uint8 status;
// 1832 
// 1833   msg = inMsg->asdu;
        LCALL   ?Subroutine79 & 0xFFFF
// 1834   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_134:
        ADD     A,#0x0
        MOV     ?V0 + 0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V0 + 1,A
// 1835 
// 1836   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessUserDescSet_0
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessUserDescSet_0:
        JZ      $+5
        LJMP    ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 1837   {
// 1838     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SUBB    A,#0x10
        JNC     ??ZDO_ProcessUserDescSet_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#0x10
??ZDO_ProcessUserDescSet_3:
        MOVX    @DPTR,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine54 & 0xFFFF
// 1839     msg ++;  // increment one for the length field
// 1840 
// 1841     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_88:
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 4,R1
        MOV     ?V0 + 5,R2
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0x7
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1842     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     ?V0 + 2,#0x11
        MOV     ?V0 + 3,#0x0
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     R4,#0x0
        MOV     R5,#0x0
        MOV     R2,#-0x7f
        MOV     R3,#0x0
        LCALL   ??osal_nv_write?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1843     if ( userDesc.len != 0 )
        MOV     A,#0x4
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDO_Config_Node_Descriptor
        JZ      ??ZDO_ProcessUserDescSet_4
// 1844     {
// 1845       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.4
        SJMP    ??ZDO_ProcessUserDescSet_5
// 1846     }
// 1847     else
// 1848     {
// 1849       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX    A,@DPTR
        CLR     0xE0 /* A   */.4
// 1850     }
// 1851 
// 1852     status = ZDP_SUCCESS;
// 1853   }
??ZDO_ProcessUserDescSet_5:
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_225:
        CLR     A
        SJMP    ??ZDO_ProcessUserDescSet_6
// 1854   else
// 1855   {
// 1856     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX    @DPTR,A
// 1857   }
// 1858 
// 1859   outMsg[0] = status;
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 1860   outMsg[1] = LO_UINT16( aoi );
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1861   outMsg[2] = LO_UINT16( aoi );
        MOV     A,#0x3
        LCALL   ?XSTACK_DISP0_8
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 1862 
// 1863   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 1864                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL   ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_390:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     ?V0 + 0,#0x14
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R1,#0x3
        LCALL   ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_361:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 36)
// 1865 }
        MOV     A,#0x15
          CFI EndBlock cfiBlock407
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock408 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock408
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiBlock409 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock409

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond410 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_224
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ZDO_ProcessUserDescSet
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+0
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_63
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+0
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_61
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+0
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDMatchSendState
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_226, ??CrossCallReturnLabel_62
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+0
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker415 Using cfiCommon1
          CFI (cfiPicker415) NoFunction
          CFI (cfiPicker415) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiPicker415

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond416 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_392
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond417) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond417) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond417) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond417) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond417) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond417) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond417) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond417) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond417) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+0
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+0
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker419 Using cfiCommon1
          CFI (cfiPicker419) NoFunction
          CFI (cfiPicker419) Picker
        MOV     A,?V0 + 14
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_561:
        MOV     A,?V0 + 15
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiPicker419
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond420 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_390
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ZDMatchSendState
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+0
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond422) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond422) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond422) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond422) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond422) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond422) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond422) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond422) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond422) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond422) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond422) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond422) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond422) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond422) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond422) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond422) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond422) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond422) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond422) CFA_SP SP+0
          CFI (cfiCond422) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+0
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+0
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker425 Using cfiCommon1
          CFI (cfiPicker425) NoFunction
          CFI (cfiPicker425) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiPicker425
??CrossCallReturnLabel_661:
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiCond426 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_388
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+0
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessUserDescSet
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+0
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond429 Using cfiCommon0
          CFI (cfiCond429) Function ZDMatchSendState
          CFI (cfiCond429) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond429) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond429) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond429) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond429) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond429) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond429) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond429) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond429) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond429) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond429) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond429) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond429) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond429) CFA_SP SP+0
          CFI (cfiCond429) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond430 Using cfiCommon0
          CFI (cfiCond430) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond430) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond430) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond430) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond430) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond430) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond430) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond430) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond430) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond430) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond430) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond430) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond430) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond430) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond430) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond430) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond430) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond430) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond430) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond430) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond430) CFA_SP SP+0
          CFI (cfiCond430) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+0
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond432) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond432) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond432) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond432) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond432) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond432) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond432) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond432) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond432) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond432) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond432) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond432) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond432) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond432) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond432) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond432) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond432) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond432) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond432) CFA_SP SP+0
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker433 Using cfiCommon1
          CFI (cfiPicker433) NoFunction
          CFI (cfiPicker433) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiCond429
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiPicker433

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond434 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_135
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDO_ProcessUserDescSet
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+0
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiPicker436 Using cfiCommon1
          CFI (cfiPicker436) NoFunction
          CFI (cfiPicker436) Picker
        LCALL   ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_278:
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        RET
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiPicker436
// 1866 
// 1867 /*********************************************************************
// 1868  * @fn          ZDO_ProcessDeviceAnnce
// 1869  *
// 1870  * @brief       This function processes a device annouce message.
// 1871  *
// 1872  * @param       inMsg - incoming message
// 1873  *
// 1874  * @return      none
// 1875  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1876 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock437 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 1877 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocChangeNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborUpdateNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 32
        MOV     A,#-0x20
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1878   ZDO_DeviceAnnce_t Annce;
// 1879   AddrMgrEntry_t addrEntry;
// 1880   uint8 parentExt[Z_EXTADDR_LEN];
// 1881 
// 1882   // Parse incoming message
// 1883   ZDO_ParseDeviceAnnce( inMsg, &Annce );
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ??ZDO_ParseDeviceAnnce?relay
// 1884 
// 1885   if ( ZSTACK_END_DEVICE_BUILD )
// 1886   {
// 1887     // Make sure the message didn't come from myself - end device only
// 1888     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
// 1889     {
// 1890       return;
// 1891     }
// 1892   }
// 1893 
// 1894 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 1895   // Clean up the neighbor table
// 1896   nwkNeighborRemoveAllStranded();
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL   ??nwkNeighborRemoveAllStranded?relay
// 1897 
// 1898   // If address conflict is detected, no need to update the address manager
// 1899   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_404:
        LCALL   ??NLME_CheckNewAddrSet?relay
        MOV     A,R1
        XRL     A,#0x1
        JNZ     $+5
        LJMP    ??ZDO_ProcessDeviceAnnce_0 & 0xFFFF
// 1900   {
// 1901     return;
// 1902   }
// 1903 #endif
// 1904 
// 1905 #if defined ( ZIGBEE_STOCHASTIC_ADDRESSING )
// 1906   // Check for parent's address
// 1907   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??NLME_GetCoordExtAddr?relay
// 1908   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 1909   {
// 1910     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL   ??NLME_GetCoordShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_2:
        JZ      ??ZDO_ProcessDeviceAnnce_1
// 1911     {
// 1912       // Set the Parent's MAC's new short address
// 1913       _NIB.nwkCoordAddress = Annce.nwkAddr;
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_359:
        MOV     DPTR,#_NIB + 23
        LCALL   ??Subroutine209_0 & 0xFFFF
// 1914       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_336:
        ; Setup parameters for call to function ZMacSetReq
        MOV     R2,#(_NIB + 23) & 0xff
        MOV     R3,#((_NIB + 23) >> 8) & 0xff
        MOV     R1,#0x4b
        LCALL   ??ZMacSetReq?relay
// 1915     }
// 1916   }
// 1917 
// 1918   if ( ZSTACK_ROUTER_BUILD )
// 1919   {
// 1920     // If the device annce comes from a end device child that has moved
// 1921     // to another parent, remove it from associated device list
// 1922 
// 1923     // If the dev annce is coming from other device's children,
// 1924     // (The dev annce from its own children shall be unicast to itself,
// 1925     // So check the mac destination address)
// 1926     // Remove it from the associated device list. If it is not
// 1927     // a child, no action will be taken in AssocRemove() anyway.
// 1928     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_1:
        MOV     A,R6
        ADD     A,#0x11
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_629:
        PUSH    DPL
          CFI CFA_SP SP+-1
        PUSH    DPH
          CFI CFA_SP SP+-2
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        POP     DPH
          CFI CFA_SP SP+-1
        POP     DPL
          CFI CFA_SP SP+0
        MOVX    A,@DPTR
        XRL     A,?V0 + 0
        JNZ     ??ZDO_ProcessDeviceAnnce_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0 + 1
??ZDO_ProcessDeviceAnnce_3:
        JZ      ??ZDO_ProcessDeviceAnnce_4
// 1929     {
// 1930       associated_devices_t *dev_ptr;
// 1931 
// 1932       // If it's an end device child
// 1933       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AssocGetWithExt?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
// 1934       if ( dev_ptr )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_4
// 1935       {
// 1936         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 1937              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x1
        JZ      ??ZDO_ProcessDeviceAnnce_5
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0x2
        JNZ     ??ZDO_ProcessDeviceAnnce_4
// 1938         {
// 1939           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function AssocRemove
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AssocRemove?relay
// 1940         }
// 1941       }
// 1942     }
// 1943 
// 1944     if ( Annce.nwkAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   ??NLME_GetShortAddr?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R0,?V0 + 0
        MOV     R1,?V0 + 1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_6
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_6:
        JZ      ??ZDO_ProcessDeviceAnnce_7
// 1945     {
// 1946       // If an associated device is found with matched extended Address,
// 1947       // update its short address
// 1948       if ( AssocChangeNwkAddr( Annce.nwkAddr, Annce.extAddr ) )
        ; Setup parameters for call to function AssocChangeNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_405:
        LCALL   ??AssocChangeNwkAddr?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_7
// 1949       {
// 1950         // Set event to save NV
// 1951         ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL   ??ZDApp_NVUpdate?relay
// 1952       }
// 1953     }
// 1954   }
// 1955 
// 1956   // Update the neighbor table
// 1957   nwkNeighborUpdateNwkAddr( Annce.nwkAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_7:
        ; Setup parameters for call to function nwkNeighborUpdateNwkAddr
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_406:
        LCALL   ??nwkNeighborUpdateNwkAddr?relay
// 1958 
// 1959   // Assume that the device has moved, remove existing routing entries
// 1960   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV     R1,#0x0
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_407:
        LCALL   ??RTG_RemoveRtgEntry?relay
// 1961 
// 1962 #endif // ZIGBEE_STOCHASTIC_ADDRESSING
// 1963 
// 1964   // Fill in the extended address in address manager if we don't have it already.
// 1965   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine42 & 0xFFFF
// 1966   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_61:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine209_0 & 0xFFFF
// 1967   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_337:
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupNwk?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_8
// 1968   {
// 1969     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x8
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??osal_memset?relay
// 1970     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCmp?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_8
// 1971     {
// 1972       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 1973       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
// 1974     }
// 1975   }
// 1976 
// 1977   // Update the short address in address manager if it's been changed
// 1978   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_8:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrExtAddrSet?relay
// 1979   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryLookupExt?relay
        MOV     A,R1
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 1980   {
// 1981     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_355:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    A,@DPTR
        XRL     A,R0
        JNZ     ??ZDO_ProcessDeviceAnnce_9
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R1
??ZDO_ProcessDeviceAnnce_9:
        JZ      ??ZDO_ProcessDeviceAnnce_0
// 1982     {
// 1983       addrEntry.nwkAddr = Annce.nwkAddr;
        LCALL   ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_360:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine209_0 & 0xFFFF
// 1984       AddrMgrEntryUpdate( &addrEntry );
??CrossCallReturnLabel_338:
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??AddrMgrEntryUpdate?relay
??ZDO_ProcessDeviceAnnce_0:
        MOV     A,#0x20
// 1985     }
// 1986   }
        LJMP    ??Subroutine195_0 & 0xFFFF
          CFI EndBlock cfiBlock437
// 1987 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond438 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_421
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond439 Using cfiCommon0
          CFI (cfiCond439) Function ZDO_CopyMatchInfo
          CFI (cfiCond439) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond439) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond439) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond439) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond439) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond439) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond439) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond439) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond439) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond439) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond439) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond439) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond439) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond439) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond439) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond439) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond439) CFA_SP SP+0
          CFI (cfiCond439) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker440 Using cfiCommon1
          CFI (cfiPicker440) NoFunction
          CFI (cfiPicker440) Picker
        MOV     A,R6
        ADD     A,#0x12
          CFI EndBlock cfiCond438
          CFI EndBlock cfiCond439
          CFI EndBlock cfiPicker440
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond441 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_419
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond442 Using cfiCommon0
          CFI (cfiCond442) Function ZDO_CopyMatchInfo
          CFI (cfiCond442) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond442) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond442) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond442) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond442) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond442) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond442) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond442) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond442) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond442) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond442) CFA_SP SP+0
          CFI (cfiCond442) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDO_CopyMatchInfo
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+0
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_CopyMatchInfo
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+0
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker445 Using cfiCommon1
          CFI (cfiPicker445) NoFunction
          CFI (cfiPicker445) Picker
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond441
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiPicker445
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond446 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_417
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+0
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDO_CopyMatchInfo
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+0
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond449 Using cfiCommon0
          CFI (cfiCond449) Function ZDO_CopyMatchInfo
          CFI (cfiCond449) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond449) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond449) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond449) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond449) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond449) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond449) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond449) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond449) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond449) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond449) CFA_SP SP+0
          CFI (cfiCond449) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_CopyMatchInfo
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+0
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDO_CopyMatchInfo
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond451) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond451) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+0
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker452 Using cfiCommon1
          CFI (cfiPicker452) NoFunction
          CFI (cfiPicker452) Picker
        ADDC    A,#0x0
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiPicker452
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond453 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_416
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+0
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+0
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDO_CopyMatchInfo
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+0
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDO_CopyMatchInfo
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+0
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDO_CopyMatchInfo
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+0
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDO_CopyMatchInfo
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond459) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond459) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+0
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker460 Using cfiCommon1
          CFI (cfiPicker460) NoFunction
          CFI (cfiPicker460) Picker
        MOV     DPH,A
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiPicker460
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond461 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_395
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+0
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond463) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond463) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond463) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+0
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond464) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond464) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond464) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+0
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+0
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+0
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+0
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+0
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond469) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+0
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+0
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+0
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+0
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+0
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+0
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond475) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond475) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+0
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond476) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond476) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+0
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDO_RemoveMatchMemory
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond477) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond477) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond477) CFA_SP SP+-5
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_RemoveMatchMemory
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond478) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond478) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond478) CFA_SP SP+-5
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDO_RemoveMatchMemory
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond479) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond479) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond479) CFA_SP SP+-5
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDMatchSendState
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond480) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond480) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond480) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond480) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond480) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+0
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDMatchSendState
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+0
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+0
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+0
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+0
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDO_CopyMatchInfo
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+0
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDO_CopyMatchInfo
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+0
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_CopyMatchInfo
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+0
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDO_CopyMatchInfo
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+0
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker489 Using cfiCommon1
          CFI (cfiPicker489) NoFunction
          CFI (cfiPicker489) Picker
        LCALL   ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_470:
        RET
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiPicker489

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond490 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+0
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDMatchSendState
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+0
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker493 Using cfiCommon1
          CFI (cfiPicker493) NoFunction
          CFI (cfiPicker493) Picker
        LCALL   ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_226:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiPicker493
// 1988 
// 1989 /*********************************************************************
// 1990  * @fn          ZDO_BuildSimpleDescBuf
// 1991  *
// 1992  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 1993  *
// 1994  * @param       buf  - pointer to a byte array big enough for data.
// 1995  * @param       desc - SimpleDescriptionFormat_t *
// 1996  *
// 1997  * @return      none
// 1998  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1999 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock494 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2000 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2001   byte cnt;
// 2002   uint16 *ptr;
// 2003 
// 2004   *buf++ = desc->EndPoint;
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine46 & 0xFFFF
// 2005   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_70:
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine27 & 0xFFFF
// 2006   *buf++ = LO_UINT16( desc->AppProfId );
// 2007   *buf++ = HI_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_33:
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        MOV     A,R5
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_254:
        LCALL   ?Subroutine27 & 0xFFFF
// 2008   *buf++ = LO_UINT16( desc->AppDeviceId );
// 2009 
// 2010   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_34:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        LCALL   ?Subroutine36 & 0xFFFF
// 2011 
// 2012   *buf++ = desc->AppNumInClusters;
??CrossCallReturnLabel_50:
        MOVX    A,@DPTR
        LCALL   ?Subroutine36 & 0xFFFF
// 2013   ptr = desc->pAppInClusterList;
??CrossCallReturnLabel_51:
        LCALL   ?Subroutine106 & 0xFFFF
// 2014   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_171:
        SJMP    ??CrossCallReturnLabel_8
// 2015   {
// 2016     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_0:
        LCALL   ?Subroutine15 & 0xFFFF
// 2017     *buf++ = LO_UINT16( *ptr );
// 2018   }
??CrossCallReturnLabel_8:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        JC      ??ZDO_BuildSimpleDescBuf_0
// 2019 
// 2020   *buf++ = desc->AppNumOutClusters;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
// 2021   ptr = desc->pAppOutClusterList;
??CrossCallReturnLabel_71:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine106 & 0xFFFF
// 2022   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_172:
        SJMP    ??CrossCallReturnLabel_9
// 2023   {
// 2024     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_1:
        LCALL   ?Subroutine15 & 0xFFFF
// 2025     *buf++ = LO_UINT16( *ptr );
// 2026   }
??CrossCallReturnLabel_9:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R6,A
        MOV     A,?V0 + 0
        CLR     C
        SUBB    A,R6
        JC      ??ZDO_BuildSimpleDescBuf_1
          CFI EndBlock cfiBlock494
// 2027 }
        REQUIRE ?Subroutine8
        ; // Fall through to label ?Subroutine8

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock495 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock495

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond496 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+0
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker498 Using cfiCommon1
          CFI (cfiPicker498) NoFunction
          CFI (cfiPicker498) Picker
        INC     DPTR
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_493:
        MOV     ?V0 + 0,#0x0
        RET
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiPicker498

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond499 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond500) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond500) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond500) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond500) CFA_SP SP+0
          CFI (cfiCond500) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker501 Using cfiCommon1
          CFI (cfiPicker501) NoFunction
          CFI (cfiPicker501) Picker
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        RET
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiPicker501

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond502 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+0
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker504 Using cfiCommon1
          CFI (cfiPicker504) NoFunction
          CFI (cfiPicker504) Picker
        LCALL   ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_423:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiPicker504

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond505 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+0
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker507 Using cfiCommon1
          CFI (cfiPicker507) NoFunction
          CFI (cfiPicker507) Picker
        INC     DPTR
        LCALL   ??Subroutine222_0 & 0xFFFF
??CrossCallReturnLabel_424:
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_426:
        RET
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiPicker507

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond508 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_34
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+0
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond510 Using cfiCommon0
          CFI (cfiCond510) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond510) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_8
          CFI (cfiCond510) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond510) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond510) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond510) CFA_SP SP+0
          CFI (cfiCond510) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_9
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+0
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        MOV     DPL,R0
        MOV     DPH,R1
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiCond513 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_424, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_424, ??CrossCallReturnLabel_34
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+0
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_33
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+0
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_34
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+0
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_8
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+0
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_9
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+0
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker519 Using cfiCommon1
          CFI (cfiPicker519) NoFunction
          CFI (cfiPicker519) Picker
        MOVX    A,@DPTR
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiPicker519
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond520 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_423, ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_423, ??CrossCallReturnLabel_51
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+0
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_424, ??CrossCallReturnLabel_33
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+0
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_424, ??CrossCallReturnLabel_34
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+0
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_33
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+0
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_426, ??CrossCallReturnLabel_34
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+0
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_8
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+0
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_425, ??CrossCallReturnLabel_9
          CFI (cfiCond527) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond527) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond527) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond527) CFA_SP SP+0
          CFI (cfiCond527) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker528 Using cfiCommon1
          CFI (cfiPicker528) NoFunction
          CFI (cfiPicker528) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiPicker528

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond529 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond530) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond530) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond530) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond530) CFA_SP SP+0
          CFI (cfiCond530) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker531 Using cfiCommon1
          CFI (cfiPicker531) NoFunction
          CFI (cfiPicker531) Picker
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_246:
        LCALL   ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_425:
        LCALL   ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_262:
        INC     ?V0 + 0
        RET
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiPicker531

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond532 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_70
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_247, ??CrossCallReturnLabel_71
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+0
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_8
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+0
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_9
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+0
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker536 Using cfiCommon1
          CFI (cfiPicker536) NoFunction
          CFI (cfiPicker536) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiPicker536
// 2028 
// 2029 /*********************************************************************
// 2030  * @fn      ZDO_MatchEndDeviceBind()
// 2031  *
// 2032  * @brief
// 2033  *
// 2034  *   Called to match end device binding requests
// 2035  *
// 2036  * @param  bindReq  - binding request information
// 2037  * @param  SecurityUse - Security enable/disable
// 2038  *
// 2039  * @return  none
// 2040  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2041 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock537 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2042 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 10
        MOV     A,#-0xa
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2043   zAddrType_t dstAddr;
// 2044   uint8 sendRsp = FALSE;
        MOV     ?V0 + 0,#0x0
// 2045   uint8 status;
// 2046 
// 2047   // Is this the first request?
// 2048   if ( matchED == NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_443:
        JNZ     ??ZDO_MatchEndDeviceBind_0
// 2049   {
// 2050     // Create match info structure
// 2051     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x37
        MOV     R3,#0x0
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#matchED
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        LCALL   ?Subroutine50 & 0xFFFF
// 2052     if ( matchED )
??CrossCallReturnLabel_79:
        JZ      ??ZDO_MatchEndDeviceBind_1
// 2053     {
// 2054       // Clear the structure
// 2055       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0x37
        MOV     R5,#0x0
        MOV     R1,#0x0
        LCALL   ??osal_memset?relay
// 2056 
// 2057       // Copy the first request's information
// 2058       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     DPTR,#matchED
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2059       {
// 2060         status = ZDP_NO_ENTRY;
// 2061         sendRsp = TRUE;
// 2062       }
// 2063     }
??CrossCallReturnLabel_408:
        LCALL   ??ZDO_CopyMatchInfo?relay
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_2
// 2064     else
// 2065     {
// 2066       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        LJMP    ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
// 2067       sendRsp = TRUE;
// 2068     }
// 2069 
// 2070     if ( !sendRsp )
// 2071     {
// 2072       // Set into the correct state
// 2073       matchED->state = ZDMATCH_WAIT_REQ;
??ZDO_MatchEndDeviceBind_2:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_531:
        ADD     A,#0x2e
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_310:
        MOVX    @DPTR,A
// 2074 
// 2075       // Setup the timeout
// 2076       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#??ZDO_EndDeviceBindMatchTimeoutCB?relay & 0xff
        MOV     R5,#(??ZDO_EndDeviceBindMatchTimeoutCB?relay >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2077     }
// 2078   }
??CrossCallReturnLabel_409:
        LCALL   ??APS_SetEndDeviceBindTimeout?relay
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
// 2079   else
// 2080   {
// 2081       matchED->state = ZDMATCH_SENDING_BINDS;
??ZDO_MatchEndDeviceBind_0:
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x2e
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_428:
        MOVX    @DPTR,A
// 2082 
// 2083       // Copy the 2nd request's information
// 2084       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_167:
        LCALL   ??ZDO_CopyMatchInfo?relay
        MOV     A,R1
        JNZ     ??ZDO_MatchEndDeviceBind_5
// 2085       {
// 2086         status = ZDP_NO_ENTRY;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2087         sendRsp = TRUE;
        MOV     ?V0 + 0,#0x1
// 2088       }
// 2089 
// 2090       // Make a source match for ed1
// 2091       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2092                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2093                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_5:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     ?V0 + 2,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 3,#(ZDOBuildBuf >> 8) & 0xff
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_140:
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_532:
        ADD     A,#0x28
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_379:
        MOV     R4,A
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_533:
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_478:
        LCALL   ??ZDO_CompareClusterLists?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_431:
        LCALL   ?Subroutine38 & 0xFFFF
// 2094       if ( matchED->ed1numMatched )
??CrossCallReturnLabel_456:
        ADD     A,#0x31
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_380:
        JZ      ??ZDO_MatchEndDeviceBind_6
// 2095       {
// 2096         // Save the match list
// 2097         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_93:
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x32
        LCALL   ?Subroutine25 & 0xFFFF
// 2098         if ( matchED->ed1Matched )
??CrossCallReturnLabel_462:
        JZ      ??ZDO_MatchEndDeviceBind_7
// 2099         {
// 2100           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine57 & 0xFFFF
// 2101         }
??CrossCallReturnLabel_94:
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        SJMP    ??ZDO_MatchEndDeviceBind_6
// 2102         else
// 2103         {
// 2104           // Allocation error, stop
// 2105           status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_7:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
// 2106           sendRsp = TRUE;
        MOV     ?V0 + 0,#0x1
// 2107         }
// 2108       }
// 2109 
// 2110       // Make a source match for ed2
// 2111       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2112                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2113                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_6:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV     R0,#?V0 + 2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 27)
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_534:
        ADD     A,#0x11
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_381:
        MOV     R4,A
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_120:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_535:
        ADD     A,#0x2b
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_479:
        LCALL   ??ZDO_CompareClusterLists?relay
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_536:
        ADD     A,#0x34
        LCALL   ?Subroutine38 & 0xFFFF
// 2114       if ( matchED->ed2numMatched )
??CrossCallReturnLabel_457:
        ADD     A,#0x34
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_382:
        JZ      ??ZDO_MatchEndDeviceBind_8
// 2115       {
// 2116         // Save the match list
// 2117         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine58 & 0xFFFF
??CrossCallReturnLabel_96:
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x35
        LCALL   ?Subroutine25 & 0xFFFF
// 2118         if ( matchED->ed2Matched )
??CrossCallReturnLabel_463:
        JZ      ??ZDO_MatchEndDeviceBind_9
// 2119         {
// 2120           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,#ZDOBuildBuf & 0xff
        MOV     ?V0 + 5,#(ZDOBuildBuf >> 8) & 0xff
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL   ?Subroutine58 & 0xFFFF
// 2121         }
??CrossCallReturnLabel_97:
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_122:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2122         else
// 2123         {
// 2124           // Allocation error, stop
// 2125           status = ZDP_NO_ENTRY;
// 2126           sendRsp = TRUE;
// 2127         }
// 2128       }
// 2129 
// 2130       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
??ZDO_MatchEndDeviceBind_8:
        MOV     A,?V0 + 0
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_MatchEndDeviceBind_10
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_432:
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_383:
        JNZ     ??ZDO_MatchEndDeviceBind_11
        MOV     DPTR,#matchED
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_101:
        JZ      ??ZDO_MatchEndDeviceBind_10
// 2131       {
// 2132         // Do the first unbind/bind state
// 2133         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
??ZDO_MatchEndDeviceBind_11:
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#0x0
        MOV     R1,#0x0
        LCALL   ??ZDMatchSendState?relay
// 2134       }
// 2135       else
// 2136       {
// 2137         status = ZDP_NO_MATCH;
// 2138         sendRsp = TRUE;
// 2139       }
// 2140   }
// 2141 
// 2142   if ( sendRsp )
        LJMP    ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
??ZDO_MatchEndDeviceBind_9:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x78
        MOVX    @DPTR,A
??ZDO_MatchEndDeviceBind_10:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7a
??ZDO_MatchEndDeviceBind_3:
        MOVX    @DPTR,A
// 2143   {
// 2144     // send response to this requester
// 2145     dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine48 & 0xFFFF
// 2146     dstAddr.addr.shortAddr = bindReq->srcAddr;
??CrossCallReturnLabel_75:
        LCALL   ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_485:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine209_0 & 0xFFFF
// 2147     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_339:
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_389:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2148 
// 2149     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_128:
        JNZ     ??ZDO_MatchEndDeviceBind_12
// 2150     {
// 2151       // send response to first requester
// 2152       dstAddr.addrMode = Addr16Bit;
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 2153       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
        LCALL   ?Subroutine69 & 0xFFFF
// 2154       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2155     }
??CrossCallReturnLabel_488:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_23:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#matchED
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_410:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 25)
// 2156 
// 2157     // Process ended - release memory used
// 2158     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_12:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   ??ZDO_RemoveMatchMemory?relay
// 2159   }
// 2160 }
??ZDO_MatchEndDeviceBind_4:
        MOV     A,#0xa
        LJMP    ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock537

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond538 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_428
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDMatchSendState
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond539) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond539) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond539) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+0
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker540 Using cfiCommon1
          CFI (cfiPicker540) NoFunction
          CFI (cfiPicker540) Picker
        MOV     DPL,A
        MOV     A,R0
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiPicker540
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond541 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_427
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_428
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+0
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDMatchSendState
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+0
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_662:
        MOV     A,#0x2
        RET
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_431
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+0
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker547 Using cfiCommon1
          CFI (cfiPicker547) NoFunction
          CFI (cfiPicker547) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiPicker547
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiCond548 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_430
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+0
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+0
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker551 Using cfiCommon1
          CFI (cfiPicker551) NoFunction
          CFI (cfiPicker551) Picker
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_553:
        ADD     A,#0x31
        RET
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiPicker551

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond552 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_448
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+0
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_RemoveMatchMemory
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond554) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond554) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond554) CFA_SP SP+-5
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_RemoveMatchMemory
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond555) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond555) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond555) CFA_SP SP+-5
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_RemoveMatchMemory
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond556) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond556) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond556) CFA_SP SP+-5
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_RemoveMatchMemory
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond557) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond557) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond557) CFA_SP SP+-5
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_RemoveMatchMemory
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond558) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond558) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond558) CFA_SP SP+-5
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_RemoveMatchMemory
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond559) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond559) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond559) CFA_SP SP+-5
          CFI Block cfiPicker560 Using cfiCommon1
          CFI (cfiPicker560) NoFunction
          CFI (cfiPicker560) Picker
        MOV     DPL,A
        MOV     A,R0
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiPicker560
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiCond561 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_446
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_CopyMatchInfo
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+0
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+0
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+0
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_RemoveMatchMemory
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond565) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond565) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond565) CFA_SP SP+-5
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDO_RemoveMatchMemory
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond566) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond566) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond566) CFA_SP SP+-5
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDO_RemoveMatchMemory
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond567) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond567) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond567) CFA_SP SP+-5
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_RemoveMatchMemory
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond568) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond568) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond568) CFA_SP SP+-5
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_RemoveMatchMemory
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond569) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond569) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond569) CFA_SP SP+-5
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_RemoveMatchMemory
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond570) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond570) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond570) CFA_SP SP+-5
          CFI Block cfiPicker571 Using cfiCommon1
          CFI (cfiPicker571) NoFunction
          CFI (cfiPicker571) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiPicker571
??CrossCallReturnLabel_663:
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond572 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_433
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+0
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond574) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond574) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond574) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond574) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond574) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond574) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond574) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond574) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond574) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+0
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+0
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond576) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond576) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond576) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+0
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+0
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond578) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+0
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+0
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+0
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond581) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+0
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+0
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_RemoveMatchMemory
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond583) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond583) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond583) CFA_SP SP+-5
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_445
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+0
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDO_CopyMatchInfo
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+0
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDO_CopyMatchInfo
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_447
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+0
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_448
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+0
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_449
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+0
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDO_RemoveMatchMemory
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_450
          CFI (cfiCond589) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond589) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond589) CFA_SP SP+-5
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDO_RemoveMatchMemory
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond590) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond590) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond590) CFA_SP SP+-5
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_RemoveMatchMemory
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_452
          CFI (cfiCond591) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond591) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond591) CFA_SP SP+-5
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_RemoveMatchMemory
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_453
          CFI (cfiCond592) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond592) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond592) CFA_SP SP+-5
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_RemoveMatchMemory
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_454
          CFI (cfiCond593) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond593) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond593) CFA_SP SP+-5
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDO_RemoveMatchMemory
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_455
          CFI (cfiCond594) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond594) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond594) CFA_SP SP+-5
          CFI Block cfiPicker595 Using cfiCommon1
          CFI (cfiPicker595) NoFunction
          CFI (cfiPicker595) Picker
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_467:
        RET
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiPicker595

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond596 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond597) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond597) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+0
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+0
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker599 Using cfiCommon1
          CFI (cfiPicker599) NoFunction
          CFI (cfiPicker599) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_591:
        INC     DPTR
        RET
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiPicker599

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond600 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_456
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+0
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker602 Using cfiCommon1
          CFI (cfiPicker602) NoFunction
          CFI (cfiPicker602) Picker
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine244_0 & 0xFFFF
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiPicker602
??CrossCallReturnLabel_652:
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond603 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_458
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_456
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+0
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_457
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+0
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker606 Using cfiCommon1
          CFI (cfiPicker606) NoFunction
          CFI (cfiPicker606) Picker
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_459:
        XCH     A,R0
        RET
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiPicker606

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond607 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_456
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_457
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+0
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDMatchSendState
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_458
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond609) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond609) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond609) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+0
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_23
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+0
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDMatchSendState
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_24
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond611) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond611) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond611) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+0
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker612 Using cfiCommon1
          CFI (cfiPicker612) NoFunction
          CFI (cfiPicker612) Picker
        MOV     A,R1
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiPicker612
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine229_0:
          CFI Block cfiCond613 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDMatchSendState
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_461, ??CrossCallReturnLabel_80
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond614) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+0
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_456
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+0
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_457
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+0
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDMatchSendState
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_459, ??CrossCallReturnLabel_458
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+0
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_23
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+0
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDMatchSendState
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_460, ??CrossCallReturnLabel_24
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+0
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker620 Using cfiCommon1
          CFI (cfiPicker620) NoFunction
          CFI (cfiPicker620) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiPicker620

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond621 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+0
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker623 Using cfiCommon1
          CFI (cfiPicker623) NoFunction
          CFI (cfiPicker623) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_256:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiPicker623
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine230_0:
          CFI Block cfiCond624 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_464
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+0
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+0
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiPicker627 Using cfiCommon1
          CFI (cfiPicker627) NoFunction
          CFI (cfiPicker627) Picker
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_571:
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_468:
        RET
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiPicker627

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine176:
          CFI Block cfiCond628 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_254
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_462
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+0
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_463
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+0
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+0
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker632 Using cfiCommon1
          CFI (cfiPicker632) NoFunction
          CFI (cfiPicker632) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiPicker632
// 2161 
// 2162 /*********************************************************************
// 2163  * @fn      ZDO_RemoveMatchMemory()
// 2164  *
// 2165  * @brief   Called to clear the memory used for the end device bind.
// 2166  *
// 2167  * @param  none
// 2168  *
// 2169  * @return  none
// 2170  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2171 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock633 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2172 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2173   if ( matchED != NULL )
        MOV     DPTR,#matchED
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_444:
        JZ      ??ZDO_RemoveMatchMemory_0
// 2174   {
// 2175     if ( matchED->ed2Matched != NULL )
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x35
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_450:
        JZ      ??ZDO_RemoveMatchMemory_1
// 2176     {
// 2177       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine73 & 0xFFFF
// 2178     }
??CrossCallReturnLabel_123:
        LCALL   ??osal_mem_free?relay
// 2179     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_537:
        ADD     A,#0x32
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_451:
        JZ      ??ZDO_RemoveMatchMemory_2
// 2180     {
// 2181       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine71 & 0xFFFF
// 2182     }
??CrossCallReturnLabel_119:
        LCALL   ??osal_mem_free?relay
// 2183     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_538:
        ADD     A,#0x12
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_452:
        JZ      ??ZDO_RemoveMatchMemory_3
// 2184     {
// 2185       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine87 & 0xFFFF
// 2186     }
??CrossCallReturnLabel_143:
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_411:
        LCALL   ??osal_mem_free?relay
// 2187     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_539:
        ADD     A,#0x15
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_453:
        JZ      ??ZDO_RemoveMatchMemory_4
// 2188     {
// 2189       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine70 & 0xFFFF
// 2190     }
??CrossCallReturnLabel_117:
        LCALL   ??osal_mem_free?relay
// 2191     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_540:
        ADD     A,#0x29
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_454:
        JZ      ??ZDO_RemoveMatchMemory_5
// 2192     {
// 2193       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine86 & 0xFFFF
// 2194     }
??CrossCallReturnLabel_141:
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_412:
        LCALL   ??osal_mem_free?relay
// 2195     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_541:
        ADD     A,#0x2c
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_455:
        JZ      ??ZDO_RemoveMatchMemory_6
// 2196     {
// 2197       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine72 & 0xFFFF
// 2198     }
??CrossCallReturnLabel_121:
        LCALL   ??osal_mem_free?relay
// 2199 
// 2200     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV     DPTR,#matchED
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_413:
        LCALL   ??osal_mem_free?relay
// 2201     matchED = (ZDMatchEndDeviceBind_t *)NULL;
        MOV     DPTR,#matchED
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
          CFI EndBlock cfiBlock633
// 2202   }
// 2203 }
??ZDO_RemoveMatchMemory_0:
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock634 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP     DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP     DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP    ?BRET
          CFI EndBlock cfiBlock634

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond635 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDO_RemoveMatchMemory
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond636) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond636) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond636) CFA_SP SP+-5
          CFI Block cfiPicker637 Using cfiCommon1
          CFI (cfiPicker637) NoFunction
          CFI (cfiPicker637) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_551:
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_654:
        RET
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiPicker637

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond638 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_RemoveMatchMemory
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond639) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond639) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond639) CFA_SP SP+-5
          CFI Block cfiPicker640 Using cfiCommon1
          CFI (cfiPicker640) NoFunction
          CFI (cfiPicker640) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_550:
        ADD     A,#0x29
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_653:
        RET
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiPicker640

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond641 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ZDO_RemoveMatchMemory
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond642) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond642) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond642) CFA_SP SP+-5
          CFI Block cfiPicker643 Using cfiCommon1
          CFI (cfiPicker643) NoFunction
          CFI (cfiPicker643) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_548:
        ADD     A,#0x35
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_475:
        RET
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiPicker643

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond644 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_RemoveMatchMemory
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond645) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond645) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond645) CFA_SP SP+-5
          CFI Block cfiPicker646 Using cfiCommon1
          CFI (cfiPicker646) NoFunction
          CFI (cfiPicker646) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_547:
        ADD     A,#0x2c
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_474:
        RET
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiPicker646

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond647 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_RemoveMatchMemory
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond648) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond648) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond648) CFA_SP SP+-5
          CFI Block cfiPicker649 Using cfiCommon1
          CFI (cfiPicker649) NoFunction
          CFI (cfiPicker649) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_546:
        ADD     A,#0x32
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_473:
        RET
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiPicker649

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond650 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ZDO_RemoveMatchMemory
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_123
          CFI (cfiCond651) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond651) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond651) CFA_SP SP+-5
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_120
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+0
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_RemoveMatchMemory
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_121
          CFI (cfiCond653) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond653) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond653) CFA_SP SP+-5
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_118
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+0
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDO_RemoveMatchMemory
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_119
          CFI (cfiCond655) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond655) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond655) CFA_SP SP+-5
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_116
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+0
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDO_RemoveMatchMemory
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_117
          CFI (cfiCond657) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond657) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond657) CFA_SP SP+-5
          CFI Block cfiPicker658 Using cfiCommon1
          CFI (cfiPicker658) NoFunction
          CFI (cfiPicker658) Picker
        MOV     DPL,A
        MOV     A,R0
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiPicker658
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine231_0:
          CFI Block cfiCond659 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_159
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+0
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_122
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+0
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDO_RemoveMatchMemory
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_123
          CFI (cfiCond662) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond662) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond662) CFA_SP SP+-5
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_120
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+0
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDO_RemoveMatchMemory
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_121
          CFI (cfiCond664) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond664) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond664) CFA_SP SP+-5
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_118
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+0
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_RemoveMatchMemory
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_119
          CFI (cfiCond666) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond666) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond666) CFA_SP SP+-5
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_116
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+0
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_RemoveMatchMemory
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_117
          CFI (cfiCond668) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond668) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond668) CFA_SP SP+-5
          CFI Block cfiPicker669 Using cfiCommon1
          CFI (cfiPicker669) NoFunction
          CFI (cfiPicker669) Picker
        LCALL   ?Subroutine190 & 0xFFFF
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiPicker669
??CrossCallReturnLabel_673:
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine232_0:
          CFI Block cfiCond670 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_469, ??CrossCallReturnLabel_113
          CFI (cfiCond671) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond671) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond671) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond671) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond671) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond671) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond671) CFA_SP SP+0
          CFI (cfiCond671) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDO_CopyMatchInfo
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_421
          CFI (cfiCond672) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond672) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond672) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond672) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond672) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond672) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond672) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond672) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond672) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond672) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond672) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond672) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond672) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond672) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond672) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond672) CFA_SP SP+0
          CFI (cfiCond672) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_CopyMatchInfo
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_422
          CFI (cfiCond673) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond673) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond673) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond673) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond673) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond673) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond673) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond673) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond673) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond673) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond673) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond673) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond673) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond673) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond673) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond673) CFA_SP SP+0
          CFI (cfiCond673) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDO_CopyMatchInfo
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_419
          CFI (cfiCond674) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond674) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond674) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond674) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond674) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond674) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond674) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond674) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond674) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond674) CFA_SP SP+0
          CFI (cfiCond674) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function ZDO_CopyMatchInfo
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_420
          CFI (cfiCond675) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond675) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond675) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond675) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond675) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond675) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond675) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond675) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond675) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond675) CFA_SP SP+0
          CFI (cfiCond675) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_417
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+0
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_418
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+0
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_416
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+0
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDO_StartDevice
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_395
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+0
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_396
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+0
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_397
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond681) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+0
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_398
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond682) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+0
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_399
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond683) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+0
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_400
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond684) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond684) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond684) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond684) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond684) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond684) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond684) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond684) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond684) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond684) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond684) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+0
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_401
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+0
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_402
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+0
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_403
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+0
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_404
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+0
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_405
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+0
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_406
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+0
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_407
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+0
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_408
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+0
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_409
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+0
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_410
          CFI (cfiCond694) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond694) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond694) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond694) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond694) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond694) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond694) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond694) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond694) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond694) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond694) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond694) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond694) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond694) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond694) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond694) CFA_SP SP+0
          CFI (cfiCond694) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ZDO_RemoveMatchMemory
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_411
          CFI (cfiCond695) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond695) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond695) CFA_SP SP+-5
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_RemoveMatchMemory
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_412
          CFI (cfiCond696) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond696) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond696) CFA_SP SP+-5
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_RemoveMatchMemory
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_413
          CFI (cfiCond697) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond697) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond697) CFA_SP SP+-5
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDMatchSendState
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_414
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+0
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDMatchSendState
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_470, ??CrossCallReturnLabel_415
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+0
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_160
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+0
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_159
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+0
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_122
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+0
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_RemoveMatchMemory
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_123
          CFI (cfiCond703) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond703) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond703) CFA_SP SP+-5
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_120
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+0
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDO_RemoveMatchMemory
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_121
          CFI (cfiCond705) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond705) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond705) CFA_SP SP+-5
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_118
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+0
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_RemoveMatchMemory
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_119
          CFI (cfiCond707) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond707) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond707) CFA_SP SP+-5
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_116
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+0
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDO_RemoveMatchMemory
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_117
          CFI (cfiCond709) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond709) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond709) CFA_SP SP+-5
          CFI Block cfiPicker710 Using cfiCommon1
          CFI (cfiPicker710) NoFunction
          CFI (cfiPicker710) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiPicker710

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond711 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDO_RemoveMatchMemory
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond712) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond712) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond712) CFA_SP SP+-5
          CFI Block cfiPicker713 Using cfiCommon1
          CFI (cfiPicker713) NoFunction
          CFI (cfiPicker713) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_545:
        ADD     A,#0x15
        LCALL   ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_472:
        RET
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiPicker713
// 2204 
// 2205 /*********************************************************************
// 2206  * @fn      ZDO_CopyMatchInfo()
// 2207  *
// 2208  * @brief   Called to copy memory used for the end device bind.
// 2209  *
// 2210  * @param  srcReq - source information
// 2211  * @param  dstReq - destination location
// 2212  *
// 2213  * @return  TRUE if copy was successful.
// 2214  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2215 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock714 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2216 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2217   uint8 allOK = TRUE;
        MOV     ?V0 + 2,#0x1
// 2218 
// 2219   // Copy bind information into the match info structure
// 2220   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 4,R4
        MOV     ?V0 + 5,R5
        MOV     ?V0 + 6,#0x0
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,#0x17
        MOV     R5,#0x0
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2221 
// 2222   // Initialize the destination cluster pointers
// 2223   destReq->inClusters = NULL;
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine133 & 0xFFFF
// 2224   destReq->outClusters = NULL;
??CrossCallReturnLabel_204:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R7
        LCALL   ?Subroutine130 & 0xFFFF
// 2225 
// 2226   // Copy input cluster IDs
// 2227   if ( srcReq->numInClusters )
??CrossCallReturnLabel_202:
        ADD     A,#0x11
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_375:
        JZ      ??ZDO_CopyMatchInfo_0
// 2228   {
// 2229     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
        MOV     A,R6
        ADD     A,#0x12
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 4,R0
        MOV     ?V0 + 5,R1
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_496:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine30 & 0xFFFF
// 2230     if ( destReq->inClusters )
??CrossCallReturnLabel_37:
        JZ      ??ZDO_CopyMatchInfo_1
// 2231     {
// 2232       // Copy the clusters
// 2233       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2234                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        ADD     A,#0x12
        LCALL   ?Subroutine102 & 0xFFFF
// 2235     }
??CrossCallReturnLabel_165:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,?V0 + 0
        ADD     A,#0x11
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_200:
        LCALL   ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_421:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
        SJMP    ??ZDO_CopyMatchInfo_0
// 2236     else
// 2237     {
// 2238       allOK = FALSE;
??ZDO_CopyMatchInfo_1:
        MOV     ?V0 + 2,#0x0
// 2239     }
// 2240   }
// 2241 
// 2242   // Copy output cluster IDs
// 2243   if ( srcReq->numOutClusters )
??ZDO_CopyMatchInfo_0:
        MOV     A,?V0 + 0
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_376:
        JZ      ??ZDO_CopyMatchInfo_2
// 2244   {
// 2245     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
        MOV     A,R6
        ADD     A,#0x15
        MOV     R0,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 4,R0
        MOV     ?V0 + 5,R1
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_497:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine30 & 0xFFFF
// 2246     if ( destReq->outClusters )
??CrossCallReturnLabel_38:
        JZ      ??ZDO_CopyMatchInfo_3
// 2247     {
// 2248       // Copy the clusters
// 2249       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2250                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        ADD     A,#0x15
        LCALL   ?Subroutine102 & 0xFFFF
// 2251     }
??CrossCallReturnLabel_166:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,?V0 + 0
        ADD     A,#0x14
        LCALL   ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_419:
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
// 2252     else
// 2253     {
// 2254       allOK = FALSE;
// 2255     }
// 2256   }
// 2257 
// 2258   if ( allOK == FALSE )
??ZDO_CopyMatchInfo_2:
        MOV     A,?V0 + 2
        MOV     C,0xE0 /* A   */.0
        JC      ??ZDO_CopyMatchInfo_4
// 2259   {
// 2260     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_5:
        MOV     A,R6
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_446:
        JZ      ??ZDO_CopyMatchInfo_6
// 2261     {
// 2262       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL   ?Subroutine99 & 0xFFFF
// 2263     }
??CrossCallReturnLabel_422:
        LCALL   ??osal_mem_free?relay
// 2264     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_6:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_447:
        JZ      ??ZDO_CopyMatchInfo_4
// 2265     {
// 2266       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        ADD     A,#0x15
        LCALL   ??Subroutine218_0 & 0xFFFF
// 2267     }
// 2268   }
??CrossCallReturnLabel_420:
        LCALL   ??osal_mem_free?relay
// 2269 
// 2270   return ( allOK );
??ZDO_CopyMatchInfo_4:
        MOV     R1,?V0 + 2
        LJMP    ??Subroutine215_0 & 0xFFFF
??ZDO_CopyMatchInfo_3:
        MOV     ?V0 + 2,#0x0
        SJMP    ??ZDO_CopyMatchInfo_5
          CFI EndBlock cfiBlock714
// 2271 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond715 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_200
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_CopyMatchInfo
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+0
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_506:
        CLR     C
        RLC     A
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        RET
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_165
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_CopyMatchInfo
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+0
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker720 Using cfiCommon1
          CFI (cfiPicker720) NoFunction
          CFI (cfiPicker720) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_503:
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        RET
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiPicker720

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond721 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDO_CopyMatchInfo
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+0
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiPicker723 Using cfiCommon1
          CFI (cfiPicker723) NoFunction
          CFI (cfiPicker723) Picker
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_298:
        MOV     DPL,?V0 + 4
        MOV     DPH,?V0 + 5
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_466:
        RET
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiPicker723

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond724 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_448
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_449
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+0
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDO_RemoveMatchMemory
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_450
          CFI (cfiCond726) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond726) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond726) CFA_SP SP+-5
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_RemoveMatchMemory
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_451
          CFI (cfiCond727) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond727) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond727) CFA_SP SP+-5
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_RemoveMatchMemory
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_452
          CFI (cfiCond728) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond728) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond728) CFA_SP SP+-5
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_RemoveMatchMemory
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_453
          CFI (cfiCond729) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond729) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond729) CFA_SP SP+-5
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_RemoveMatchMemory
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_454
          CFI (cfiCond730) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond730) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond730) CFA_SP SP+-5
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDO_RemoveMatchMemory
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_455
          CFI (cfiCond731) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond731) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond731) CFA_SP SP+-5
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDO_CopyMatchInfo
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_446
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+0
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDO_CopyMatchInfo
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_447
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+0
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_433
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+0
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_434
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+0
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_435
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond736) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+0
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_436
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond737) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+0
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_437
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond738) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond738) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+0
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_438
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond739) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond739) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond739) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond739) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond739) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond739) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond739) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond739) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond739) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond739) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond739) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+0
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_439
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+0
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_440
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+0
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_441
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+0
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_442
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+0
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_443
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+0
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDO_RemoveMatchMemory
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_444
          CFI (cfiCond745) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond745) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond745) CFA_SP SP+-5
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_467, ??CrossCallReturnLabel_445
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+0
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_462
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+0
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_463
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+0
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_468, ??CrossCallReturnLabel_464
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond749) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+0
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ZDO_CopyMatchInfo
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_466, ??CrossCallReturnLabel_37
          CFI (cfiCond750) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond750) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond750) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond750) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond750) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond750) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond750) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond750) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond750) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond750) CFA_SP SP+0
          CFI (cfiCond750) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ZDO_CopyMatchInfo
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_466, ??CrossCallReturnLabel_38
          CFI (cfiCond751) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond751) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond751) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond751) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond751) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond751) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond751) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond751) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond751) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond751) CFA_SP SP+0
          CFI (cfiCond751) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_465, ??CrossCallReturnLabel_0
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+0
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_465, ??CrossCallReturnLabel_1
          CFI (cfiCond753) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond753) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond753) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond753) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond753) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond753) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond753) CFA_SP SP+0
          CFI (cfiCond753) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_465, ??CrossCallReturnLabel_2
          CFI (cfiCond754) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond754) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond754) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond754) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond754) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond754) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond754) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond754) CFA_SP SP+0
          CFI (cfiCond754) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_465, ??CrossCallReturnLabel_3
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+0
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker756 Using cfiCommon1
          CFI (cfiPicker756) NoFunction
          CFI (cfiPicker756) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiPicker756
// 2272 
// 2273 /*********************************************************************
// 2274  * @fn      ZDMatchSendState()
// 2275  *
// 2276  * @brief   State machine for the End device match message algorithm.
// 2277  *
// 2278  * @param  reason - state of algoritm
// 2279  * @param  status - initial message status
// 2280  * @param  TransSeq - next transaction sequence number
// 2281  *
// 2282  * @return  FALSE if error and we are not currently matching, TRUE
// 2283  *          if success.
// 2284  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2285 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock757 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2286 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 19
        MOV     A,#-0x13
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV     ?V0 + 2,R1
        MOV     ?V0 + 6,R2
        MOV     ?V0 + 7,R3
// 2287   uint8 *dstIEEEAddr = NULL;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
// 2288   uint8 dstEP = 0xFF;
        MOV     ?V0 + 3,#-0x1
// 2289   zAddrType_t dstAddr;
// 2290   zAddrType_t destinationAddr;
// 2291   uint16 msgType;
// 2292   uint16 clusterID = 0xFFFF;
        MOV     ?V0 + 8,#-0x1
        MOV     ?V0 + 9,#-0x1
// 2293   ZDEndDeviceBind_t *ed = NULL;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 2294   uint8 rspStatus = ZDP_SUCCESS;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        CLR     A
        LCALL   ?Subroutine50 & 0xFFFF
// 2295 
// 2296   if ( matchED == NULL )
??CrossCallReturnLabel_80:
        JZ      ??ZDMatchSendState_0
// 2297   {
// 2298     return ( FALSE );
// 2299   }
// 2300 
// 2301   // Check sequence number
// 2302   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JZ      ??ZDMatchSendState_1
        MOV     A,#0x2
        XRL     A,?V0 + 2
        JNZ     ??ZDMatchSendState_2
// 2303   {
// 2304     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOVX    A,@DPTR
        XCH     A,R0
        ADD     A,#0x30
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_384:
        XRL     A,?V0 + 7
        JZ      ??ZDMatchSendState_2
// 2305     {
// 2306       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV     R1,#0x0
        LJMP    ??ZDMatchSendState_3 & 0xFFFF
// 2307     }
// 2308   }
// 2309 
// 2310   // turn off timer
// 2311   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#??ZDO_EndDeviceBindMatchTimeoutCB?relay & 0xff
        MOV     R5,#(??ZDO_EndDeviceBindMatchTimeoutCB?relay >> 8) & 0xff
        MOV     R2,#0x0
        MOV     R3,#0x0
        LCALL   ??APS_SetEndDeviceBindTimeout?relay
// 2312 
// 2313   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV     A,#0x1
        XRL     A,?V0 + 2
        JNZ     ??ZDMatchSendState_4
// 2314   {
// 2315     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x7b
        SJMP    ??CrossCallReturnLabel_429
// 2316   }
// 2317 
// 2318   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV     A,?V0 + 2
        JZ      ??ZDMatchSendState_5
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JNZ     ??ZDMatchSendState_6
// 2319   {
// 2320     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_5:
        MOV     DPTR,#matchED
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_132:
        MOVX    @DPTR,A
// 2321 
// 2322     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV     A,#0x3
        XRL     A,?V0 + 2
        JNZ     ??ZDMatchSendState_7
        MOV     A,?V0 + 6
        JZ      ??ZDMatchSendState_8
// 2323     {
// 2324       rspStatus = status;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        SJMP    ??CrossCallReturnLabel_429
// 2325     }
// 2326   }
// 2327   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_6:
        MOV     A,#0x2
        XRL     A,?V0 + 2
        JNZ     ??ZDMatchSendState_8
// 2328   {
// 2329     if ( status == ZDP_SUCCESS )
        MOV     A,?V0 + 6
        MOV     DPTR,#matchED
        JNZ     ??ZDMatchSendState_9
// 2330     {
// 2331       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL   ?Subroutine78 & 0xFFFF
// 2332     }
??CrossCallReturnLabel_133:
        SJMP    ??CrossCallReturnLabel_429
// 2333     else
// 2334     {
// 2335       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_9:
        LCALL   ??Subroutine245_0 & 0xFFFF
// 2336     }
// 2337   }
??CrossCallReturnLabel_529:
        ADD     A,#0x2f
        LCALL   ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_429:
        MOVX    @DPTR,A
        SJMP    ??ZDMatchSendState_8
// 2338 
// 2339   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_7:
        MOV     A,?V0 + 2
        JZ      ??ZDMatchSendState_10
??ZDMatchSendState_8:
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_130:
        JNZ     ??ZDMatchSendState_10
// 2340   {
// 2341     // Move to the next cluster ID
// 2342     if ( matchED->ed1numMatched )
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_124:
        JZ      ??ZDMatchSendState_11
// 2343     {
// 2344       matchED->ed1numMatched--;
        LCALL   ??Subroutine225_0 & 0xFFFF
// 2345     }
??CrossCallReturnLabel_430:
        SJMP    ??ZDMatchSendState_12
// 2346     else if ( matchED->ed2numMatched )
??ZDMatchSendState_11:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_102:
        JZ      ??ZDMatchSendState_10
// 2347     {
// 2348       matchED->ed2numMatched--;
        LCALL   ?Subroutine94 & 0xFFFF
// 2349     }
// 2350   }
??CrossCallReturnLabel_542:
        ADD     A,#0x34
??ZDMatchSendState_12:
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_385:
        DEC     A
        MOVX    @DPTR,A
// 2351 
// 2352   // What message do we send now
// 2353   if ( matchED->ed1numMatched )
??ZDMatchSendState_10:
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_125:
        JZ      ??ZDMatchSendState_13
// 2354   {
// 2355     ed = &(matchED->ed1);
        LCALL   ??Subroutine193_0 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV     ?V0 + 1,A
// 2356     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
        LCALL   ?Subroutine57 & 0xFFFF
// 2357     dstIEEEAddr = matchED->ed2.ieeeAddr;
// 2358     dstEP = matchED->ed2.endpoint;
// 2359   }
??CrossCallReturnLabel_95:
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R2
        ADD     A,#0x32
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_99:
        ADD     A,#0x1d
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_144:
        ADD     A,#0x25
        SJMP    ??ZDMatchSendState_14
// 2360   else if ( matchED->ed2numMatched )
??ZDMatchSendState_13:
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_103:
        JZ      ??ZDMatchSendState_15
// 2361   {
// 2362     ed = &(matchED->ed2);
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ??Subroutine251_0 & 0xFFFF
// 2363     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
??CrossCallReturnLabel_599:
        LCALL   ?Subroutine58 & 0xFFFF
// 2364     dstIEEEAddr = matchED->ed1.ieeeAddr;
// 2365     dstEP = matchED->ed1.endpoint;
// 2366   }
??CrossCallReturnLabel_98:
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R2
        ADD     A,#0x35
        LCALL   ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_100:
        ADD     A,#0x6
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_145:
        ADD     A,#0xe
??ZDMatchSendState_14:
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_386:
        MOV     ?V0 + 3,A
// 2367 
// 2368   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_15:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine42 & 0xFFFF
// 2369 
// 2370   // Send the next message
// 2371   if ( (rspStatus == ZDP_SUCCESS) && ed )
??CrossCallReturnLabel_62:
        JZ      $+5
        LJMP    ??ZDMatchSendState_16 & 0xFFFF
        MOV     A,?V0 + 0
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??ZDMatchSendState_16 & 0xFFFF
// 2372   {
// 2373     // Send unbind/bind message to source
// 2374     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_131:
        JNZ     ??ZDMatchSendState_17
// 2375     {
// 2376       msgType = Unbind_req;
        MOV     R6,#0x22
        SJMP    ??ZDMatchSendState_18
// 2377     }
// 2378     else
// 2379     {
// 2380       msgType = Bind_req;
??ZDMatchSendState_17:
        MOV     R6,#0x21
// 2381     }
// 2382 
// 2383     dstAddr.addr.shortAddr = ed->srcAddr;
??ZDMatchSendState_18:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_487:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine209_0 & 0xFFFF
// 2384 
// 2385     // Save off the transaction sequence number
// 2386     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_340:
        MOV     DPTR,#ZDP_TransID
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_543:
        ADD     A,#0x30
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_630:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2387 
// 2388     destinationAddr.addrMode = Addr64Bit;
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x3
        MOVX    @DPTR,A
// 2389     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 4
        MOV     R5,?V0 + 5
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     R2,DPL
        MOV     R3,DPH
        LCALL   ??sAddrExtCpy?relay
// 2390 
// 2391     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2392         &destinationAddr, dstEP, ed->SecurityUse );
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     R0,#?V0 + 3
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 4,DPL
        MOV     ?V0 + 5,DPH
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV     R0,#?V0 + 8
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV     A,?V0 + 0
        ADD     A,#0x6
        MOV     ?V0 + 4,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        MOV     R0,#?V0 + 4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        LCALL   ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_564:
        MOV     A,?V0 + 1
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_480:
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     A,R6
        MOV     R2,A
        MOV     R3,#0x0
        LCALL   ??ZDP_BindUnbindReq?relay
        MOV     A,#0x8
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2393 
// 2394     // Set timeout for response
// 2395     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV     R4,#??ZDO_EndDeviceBindMatchTimeoutCB?relay & 0xff
        MOV     R5,#(??ZDO_EndDeviceBindMatchTimeoutCB?relay >> 8) & 0xff
        MOV     DPTR,#AIB_MaxBindingTime
        LCALL   ??Subroutine221_0 & 0xFFFF
// 2396   }
??CrossCallReturnLabel_414:
        LCALL   ??APS_SetEndDeviceBindTimeout?relay
        LJMP    ??ZDMatchSendState_19 & 0xFFFF
// 2397   else
// 2398   {
// 2399     // Send the response messages to requesting devices
// 2400     // send response to first requester
// 2401     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_16:
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_489:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine22 & 0xFFFF
// 2402     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_24:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        MOV     DPTR,#matchED
        LCALL   ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_415:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2403 
// 2404     // send response to second requester
// 2405     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_129:
        JNZ     ??ZDMatchSendState_20
// 2406     {
// 2407       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL   ?Subroutine94 & 0xFFFF
// 2408       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2409     }
??CrossCallReturnLabel_544:
        ADD     A,#0x19
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_631:
        LCALL   ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_486:
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_458:
        ADD     A,#0x18
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine216_0 & 0xFFFF
??CrossCallReturnLabel_391:
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV     A,#0x1
        LCALL   ?XSTACK_DISP0_8
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV     ?V0 + 0,#0x20
        MOV     ?V0 + 1,#-0x80
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV     R1,#0x1
        MOV     A,#0x6
        LCALL   ?XSTACK_DISP0_8
        MOV     R4,DPL
        MOV     R5,DPH
        LCALL   ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_168:
        LCALL   ??ZDP_SendData?relay
        MOV     A,#0x5
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2410 
// 2411     // Process ended - release memory used
// 2412     ZDO_RemoveMatchMemory();
??ZDMatchSendState_20:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL   ??ZDO_RemoveMatchMemory?relay
// 2413   }
// 2414 
// 2415   return ( TRUE );
??ZDMatchSendState_19:
        MOV     R1,#0x1
??ZDMatchSendState_3:
        MOV     A,#0x13
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock757
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
// 2416 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock758 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock758

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond759 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_483
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond760) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond760) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond760) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond760) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond760) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond760) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond760) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond760) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond760) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond760) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond760) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond760) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond760) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond760) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond760) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond760) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond760) CFA_SP SP+0
          CFI (cfiCond760) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker761 Using cfiCommon1
          CFI (cfiPicker761) NoFunction
          CFI (cfiPicker761) Picker
        MOV     A,?V0 + 12
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 13
        ADDC    A,#0x0
        MOV     R3,A
        MOV     A,?V0 + 12
        LCALL   ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_272:
        MOV     A,?V0 + 13
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiPicker761
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine233_0:
          CFI Block cfiCond762 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_476
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+0
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond764 Using cfiCommon0
          CFI (cfiCond764) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond764) Conditional ??CrossCallReturnLabel_478
          CFI (cfiCond764) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond764) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond764) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond764) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond764) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond764) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond764) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond764) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond764) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond764) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond764) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond764) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond764) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond764) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond764) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond764) CFA_SP SP+0
          CFI (cfiCond764) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond765 Using cfiCommon0
          CFI (cfiCond765) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond765) Conditional ??CrossCallReturnLabel_479
          CFI (cfiCond765) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond765) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond765) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond765) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond765) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond765) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond765) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond765) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond765) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond765) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond765) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond765) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond765) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond765) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond765) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond765) CFA_SP SP+0
          CFI (cfiCond765) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDMatchSendState
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+0
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_481
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+0
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+0
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+0
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+0
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiPicker771 Using cfiCommon1
          CFI (cfiPicker771) NoFunction
          CFI (cfiPicker771) Picker
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_511:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiCond764
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiPicker771

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond772 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDMatchSendState
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+0
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker774 Using cfiCommon1
          CFI (cfiPicker774) NoFunction
          CFI (cfiPicker774) Picker
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiPicker774

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond775 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_144
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDMatchSendState
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond776) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond776) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond776) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond776) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond776) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+0
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker777 Using cfiCommon1
          CFI (cfiPicker777) NoFunction
          CFI (cfiPicker777) Picker
        MOV     ?V0 + 4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     ?V0 + 5,A
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_552:
        RET
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiPicker777

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond778 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDO_RemoveMatchMemory
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_143
          CFI (cfiCond779) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond779) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond779) CFA_SP SP+-5
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_140
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+0
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_RemoveMatchMemory
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_141
          CFI (cfiCond781) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond781) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond781) CFA_SP SP+-5
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_122
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+0
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_RemoveMatchMemory
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_123
          CFI (cfiCond783) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond783) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond783) CFA_SP SP+-5
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_120
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+0
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDO_RemoveMatchMemory
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_121
          CFI (cfiCond785) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond785) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond785) CFA_SP SP+-5
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_118
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+0
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_RemoveMatchMemory
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_119
          CFI (cfiCond787) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond787) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond787) CFA_SP SP+-5
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_116
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+0
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_RemoveMatchMemory
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_117
          CFI (cfiCond789) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond789) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond789) CFA_SP SP+-5
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDMatchSendState
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_144
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond790) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond790) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond790) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+0
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDMatchSendState
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_145
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond791) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond791) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond791) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+0
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_128
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+0
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDMatchSendState
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_129
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+0
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker794 Using cfiCommon1
          CFI (cfiPicker794) NoFunction
          CFI (cfiPicker794) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiPicker794
        REQUIRE ??Subroutine234_0
        ; // Fall through to label ??Subroutine234_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine234_0:
          CFI Block cfiCond795 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_431
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_432
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+0
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDMatchSendState
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_430
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+0
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_531
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+0
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_532
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+0
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_533
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+0
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_534
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+0
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_535
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+0
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_536
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+0
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDO_RemoveMatchMemory
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_537
          CFI (cfiCond804) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond804) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond804) CFA_SP SP+-5
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_RemoveMatchMemory
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_538
          CFI (cfiCond805) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond805) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond805) CFA_SP SP+-5
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ZDO_RemoveMatchMemory
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_539
          CFI (cfiCond806) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond806) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond806) CFA_SP SP+-5
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ZDO_RemoveMatchMemory
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_540
          CFI (cfiCond807) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond807) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond807) CFA_SP SP+-5
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDO_RemoveMatchMemory
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_541
          CFI (cfiCond808) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond808) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond808) CFA_SP SP+-5
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ZDMatchSendState
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_542
          CFI (cfiCond809) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond809) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond809) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond809) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond809) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond809) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond809) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond809) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond809) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond809) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond809) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond809) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond809) CFA_SP SP+0
          CFI (cfiCond809) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond810 Using cfiCommon0
          CFI (cfiCond810) Function ZDMatchSendState
          CFI (cfiCond810) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_543
          CFI (cfiCond810) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond810) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond810) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond810) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond810) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond810) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond810) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond810) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond810) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond810) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond810) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond810) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond810) CFA_SP SP+-1
          CFI (cfiCond810) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function ZDMatchSendState
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_544
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+0
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond812 Using cfiCommon0
          CFI (cfiCond812) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond812) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_526
          CFI (cfiCond812) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond812) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond812) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond812) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond812) CFA_SP SP+0
          CFI (cfiCond812) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond813 Using cfiCommon0
          CFI (cfiCond813) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond813) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_527
          CFI (cfiCond813) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond813) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond813) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond813) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond813) CFA_SP SP+0
          CFI (cfiCond813) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_528
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+0
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDMatchSendState
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_529
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+0
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ZDO_ParseAddrRsp
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_530
          CFI (cfiCond816) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond816) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond816) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond816) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond816) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond816) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond816) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond816) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond816) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond816) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond816) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond816) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond816) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond816) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond816) CFA_SP SP+0
          CFI (cfiCond816) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_142
          CFI (cfiCond817) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond817) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond817) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond817) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond817) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond817) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond817) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond817) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond817) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond817) CFA_SP SP+0
          CFI (cfiCond817) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_RemoveMatchMemory
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_143
          CFI (cfiCond818) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond818) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond818) CFA_SP SP+-5
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_140
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+0
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ZDO_RemoveMatchMemory
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_141
          CFI (cfiCond820) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond820) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond820) CFA_SP SP+-5
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_122
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+0
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ZDO_RemoveMatchMemory
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_123
          CFI (cfiCond822) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond822) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond822) CFA_SP SP+-5
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_120
          CFI (cfiCond823) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond823) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond823) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond823) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond823) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond823) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond823) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond823) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond823) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond823) CFA_SP SP+0
          CFI (cfiCond823) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDO_RemoveMatchMemory
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_121
          CFI (cfiCond824) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond824) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond824) CFA_SP SP+-5
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_118
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+0
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDO_RemoveMatchMemory
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_119
          CFI (cfiCond826) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond826) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond826) CFA_SP SP+-5
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_116
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+0
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDO_RemoveMatchMemory
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_117
          CFI (cfiCond828) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond828) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond828) CFA_SP SP+-5
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDMatchSendState
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_144
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+0
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ZDMatchSendState
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_145
          CFI (cfiCond830) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond830) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond830) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond830) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond830) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond830) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond830) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond830) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond830) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond830) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond830) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond830) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond830) CFA_SP SP+0
          CFI (cfiCond830) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond831 Using cfiCommon0
          CFI (cfiCond831) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond831) Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_128
          CFI (cfiCond831) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond831) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond831) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond831) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond831) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond831) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond831) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond831) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond831) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond831) CFA_SP SP+0
          CFI (cfiCond831) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond832 Using cfiCommon0
          CFI (cfiCond832) Function ZDMatchSendState
          CFI (cfiCond832) Conditional ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_129
          CFI (cfiCond832) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond832) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond832) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond832) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond832) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond832) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond832) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond832) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond832) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond832) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond832) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond832) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond832) CFA_SP SP+0
          CFI (cfiCond832) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker833 Using cfiCommon1
          CFI (cfiPicker833) NoFunction
          CFI (cfiPicker833) Picker
        LCALL   ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_558:
        RET
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiCond812
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiCond831
          CFI EndBlock cfiCond832
          CFI EndBlock cfiPicker833

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine187:
          CFI Block cfiCond834 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDO_RemoveMatchMemory
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_143
          CFI (cfiCond835) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond835) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond835) CFA_SP SP+-5
          CFI Block cfiCond836 Using cfiCommon0
          CFI (cfiCond836) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond836) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_140
          CFI (cfiCond836) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond836) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond836) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond836) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond836) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond836) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond836) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond836) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond836) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond836) CFA_SP SP+0
          CFI (cfiCond836) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond837 Using cfiCommon0
          CFI (cfiCond837) Function ZDO_RemoveMatchMemory
          CFI (cfiCond837) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_550, ??CrossCallReturnLabel_141
          CFI (cfiCond837) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond837) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond837) CFA_SP SP+-5
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_122
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+0
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDO_RemoveMatchMemory
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_123
          CFI (cfiCond839) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond839) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond839) CFA_SP SP+-5
          CFI Block cfiCond840 Using cfiCommon0
          CFI (cfiCond840) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond840) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_120
          CFI (cfiCond840) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond840) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond840) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond840) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond840) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond840) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond840) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond840) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond840) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond840) CFA_SP SP+0
          CFI (cfiCond840) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ZDO_RemoveMatchMemory
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_121
          CFI (cfiCond841) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond841) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond841) CFA_SP SP+-5
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_118
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+0
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDO_RemoveMatchMemory
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_119
          CFI (cfiCond843) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond843) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond843) CFA_SP SP+-5
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_116
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+0
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ZDO_RemoveMatchMemory
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_545, ??CrossCallReturnLabel_117
          CFI (cfiCond845) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond845) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond845) CFA_SP SP+-5
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function ZDMatchSendState
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_144
          CFI (cfiCond846) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond846) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond846) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond846) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond846) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond846) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond846) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond846) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond846) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond846) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond846) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond846) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond846) CFA_SP SP+0
          CFI (cfiCond846) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDMatchSendState
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_145
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+0
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_128
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+0
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDMatchSendState
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_549, ??CrossCallReturnLabel_129
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+0
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_431
          CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond850) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond850) CFA_SP SP+0
          CFI (cfiCond850) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_432
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+0
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDMatchSendState
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_430
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+0
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_531
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+0
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_532
          CFI (cfiCond854) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond854) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond854) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond854) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond854) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond854) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond854) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond854) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond854) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond854) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond854) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond854) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond854) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond854) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond854) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond854) CFA_SP SP+0
          CFI (cfiCond854) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond855 Using cfiCommon0
          CFI (cfiCond855) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond855) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_533
          CFI (cfiCond855) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond855) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond855) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond855) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond855) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond855) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond855) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond855) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond855) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond855) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond855) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond855) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond855) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond855) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond855) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond855) CFA_SP SP+0
          CFI (cfiCond855) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_534
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+0
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_535
          CFI (cfiCond857) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond857) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond857) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond857) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond857) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond857) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond857) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond857) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond857) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond857) CFA_SP SP+0
          CFI (cfiCond857) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_536
          CFI (cfiCond858) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond858) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond858) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond858) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond858) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond858) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond858) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond858) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond858) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond858) CFA_SP SP+0
          CFI (cfiCond858) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_RemoveMatchMemory
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_537
          CFI (cfiCond859) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond859) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond859) CFA_SP SP+-5
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_RemoveMatchMemory
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_538
          CFI (cfiCond860) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond860) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond860) CFA_SP SP+-5
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ZDO_RemoveMatchMemory
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_539
          CFI (cfiCond861) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond861) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond861) CFA_SP SP+-5
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ZDO_RemoveMatchMemory
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_540
          CFI (cfiCond862) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond862) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond862) CFA_SP SP+-5
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_RemoveMatchMemory
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_541
          CFI (cfiCond863) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond863) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond863) CFA_SP SP+-5
          CFI Block cfiCond864 Using cfiCommon0
          CFI (cfiCond864) Function ZDMatchSendState
          CFI (cfiCond864) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_542
          CFI (cfiCond864) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond864) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond864) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond864) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond864) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond864) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond864) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond864) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond864) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond864) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond864) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond864) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond864) CFA_SP SP+0
          CFI (cfiCond864) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond865 Using cfiCommon0
          CFI (cfiCond865) Function ZDMatchSendState
          CFI (cfiCond865) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_543
          CFI (cfiCond865) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond865) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond865) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond865) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond865) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond865) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond865) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond865) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond865) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond865) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond865) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond865) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond865) CFA_SP SP+-1
          CFI (cfiCond865) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDMatchSendState
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_544
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+0
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_526
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+0
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_527
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+0
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_528
          CFI (cfiCond869) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond869) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond869) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond869) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond869) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond869) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond869) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond869) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond869) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond869) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond869) CFA_SP SP+0
          CFI (cfiCond869) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond870 Using cfiCommon0
          CFI (cfiCond870) Function ZDMatchSendState
          CFI (cfiCond870) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_529
          CFI (cfiCond870) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond870) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond870) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond870) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond870) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond870) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond870) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond870) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond870) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond870) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond870) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond870) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond870) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond870) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond870) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond870) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond870) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond870) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond870) CFA_SP SP+0
          CFI (cfiCond870) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond871 Using cfiCommon0
          CFI (cfiCond871) Function ZDO_ParseAddrRsp
          CFI (cfiCond871) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554, ??CrossCallReturnLabel_530
          CFI (cfiCond871) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond871) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond871) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond871) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond871) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond871) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond871) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond871) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond871) CFA_SP SP+0
          CFI (cfiCond871) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDMatchSendState
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_132
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+0
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond873 Using cfiCommon0
          CFI (cfiCond873) Function ZDMatchSendState
          CFI (cfiCond873) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_133
          CFI (cfiCond873) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond873) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond873) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond873) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond873) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond873) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond873) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond873) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond873) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond873) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond873) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond873) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond873) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond873) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond873) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond873) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond873) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond873) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond873) CFA_SP SP+0
          CFI (cfiCond873) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ZDMatchSendState
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_130
          CFI (cfiCond874) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond874) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond874) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond874) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond874) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond874) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond874) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond874) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond874) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond874) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond874) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond874) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond874) CFA_SP SP+0
          CFI (cfiCond874) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDMatchSendState
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_557, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_131
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+0
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_101
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+0
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDMatchSendState
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_102
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+0
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDMatchSendState
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_103
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+0
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond879 Using cfiCommon0
          CFI (cfiCond879) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond879) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_96
          CFI (cfiCond879) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond879) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond879) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond879) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond879) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond879) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond879) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond879) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond879) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond879) CFA_SP SP+0
          CFI (cfiCond879) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond880 Using cfiCommon0
          CFI (cfiCond880) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond880) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_97
          CFI (cfiCond880) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond880) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond880) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond880) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond880) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond880) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond880) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond880) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond880) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond880) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond880) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond880) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond880) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond880) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond880) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond880) CFA_SP SP+0
          CFI (cfiCond880) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDMatchSendState
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_556, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_98
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+0
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ZDMatchSendState
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_124
          CFI (cfiCond882) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond882) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond882) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond882) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond882) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond882) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond882) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond882) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond882) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond882) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond882) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond882) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond882) CFA_SP SP+0
          CFI (cfiCond882) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ZDMatchSendState
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_125
          CFI (cfiCond883) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond883) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond883) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond883) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond883) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond883) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond883) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond883) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond883) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond883) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond883) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond883) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond883) CFA_SP SP+0
          CFI (cfiCond883) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_93
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+0
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_94
          CFI (cfiCond885) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond885) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond885) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond885) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond885) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond885) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond885) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond885) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond885) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond885) CFA_SP SP+0
          CFI (cfiCond885) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond886 Using cfiCommon0
          CFI (cfiCond886) Function ZDMatchSendState
          CFI (cfiCond886) Conditional ??CrossCallReturnLabel_555, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_95
          CFI (cfiCond886) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond886) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond886) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond886) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond886) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond886) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond886) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond886) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond886) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond886) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond886) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond886) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond886) CFA_SP SP+0
          CFI (cfiCond886) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker887 Using cfiCommon1
          CFI (cfiPicker887) NoFunction
          CFI (cfiPicker887) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        XCH     A,R0
        RET
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiCond836
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiCond864
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiCond870
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiCond879
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiCond886
          CFI EndBlock cfiPicker887

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond888 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ZDMatchSendState
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond889) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond889) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond889) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond889) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond889) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond889) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond889) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond889) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond889) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond889) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond889) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond889) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond889) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond889) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond889) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond889) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond889) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond889) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond889) CFA_SP SP+0
          CFI (cfiCond889) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker890 Using cfiCommon1
          CFI (cfiPicker890) NoFunction
          CFI (cfiPicker890) Picker
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_241:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiPicker890

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond891 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ZDMatchSendState
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond892) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond892) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond892) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond892) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond892) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond892) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond892) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond892) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond892) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond892) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond892) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond892) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond892) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond892) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond892) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond892) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond892) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond892) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond892) CFA_SP SP+0
          CFI (cfiCond892) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker893 Using cfiCommon1
          CFI (cfiPicker893) NoFunction
          CFI (cfiPicker893) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_240:
        MOVX    A,@DPTR
        XRL     A,#0x1
        RET
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiPicker893

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond894 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function ZDMatchSendState
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_133
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+0
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ZDMatchSendState
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_130
          CFI (cfiCond896) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond896) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond896) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond896) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond896) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond896) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond896) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond896) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond896) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond896) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond896) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond896) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond896) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond896) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond896) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond896) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond896) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond896) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond896) CFA_SP SP+0
          CFI (cfiCond896) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ZDMatchSendState
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_131
          CFI (cfiCond897) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond897) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond897) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond897) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond897) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond897) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond897) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond897) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond897) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond897) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond897) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond897) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond897) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond897) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond897) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond897) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond897) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond897) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond897) CFA_SP SP+0
          CFI (cfiCond897) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker898 Using cfiCommon1
          CFI (cfiPicker898) NoFunction
          CFI (cfiPicker898) Picker
        LCALL   ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_557:
        ADD     A,#0x2f
        MOV     DPL,A
        MOV     A,R0
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_670:
        RET
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiPicker898

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond899 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDMatchSendState
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond900) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+0
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker901 Using cfiCommon1
          CFI (cfiPicker901) NoFunction
          CFI (cfiPicker901) Picker
        LCALL   ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_549:
        ADD     A,#0x2e
        MOV     DPL,A
        MOV     A,R0
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_502:
        XRL     A,#0x2
        RET
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiPicker901

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond902 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond903 Using cfiCommon0
          CFI (cfiCond903) Function ZDMatchSendState
          CFI (cfiCond903) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond903) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond903) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond903) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond903) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond903) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond903) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond903) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond903) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond903) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond903) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond903) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond903) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond903) CFA_SP SP+0
          CFI (cfiCond903) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker904 Using cfiCommon1
          CFI (cfiPicker904) NoFunction
          CFI (cfiPicker904) Picker
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_237:
        MOV     DPTR,#matchED
        RET
          CFI EndBlock cfiCond902
          CFI EndBlock cfiCond903
          CFI EndBlock cfiPicker904

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond905 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_488
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ZDMatchSendState
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond906) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond906) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond906) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond906) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond906) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond906) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond906) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond906) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond906) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond906) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond906) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond906) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond906) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond906) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond906) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond906) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond906) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond906) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond906) CFA_SP SP+0
          CFI (cfiCond906) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker907 Using cfiCommon1
          CFI (cfiPicker907) NoFunction
          CFI (cfiPicker907) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine168 & 0xFFFF
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiPicker907
??CrossCallReturnLabel_324:
        REQUIRE ??Subroutine235_0
        ; // Fall through to label ??Subroutine235_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine235_0:
          CFI Block cfiCond908 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_487
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond909) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond909) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond909) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond909) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond909) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond909) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond909) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond909) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond909) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond909) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond909) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond909) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond909) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond909) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond909) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond909) CFA_SP SP+0
          CFI (cfiCond909) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond910 Using cfiCommon0
          CFI (cfiCond910) Function ZDMatchSendState
          CFI (cfiCond910) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond910) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond910) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond910) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond910) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond910) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond910) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond910) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond910) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond910) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond910) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond910) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond910) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond910) CFA_SP SP+0
          CFI (cfiCond910) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker911 Using cfiCommon1
          CFI (cfiPicker911) NoFunction
          CFI (cfiPicker911) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiCond910
          CFI EndBlock cfiPicker911
        REQUIRE ??Subroutine236_0
        ; // Fall through to label ??Subroutine236_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine236_0:
          CFI Block cfiCond912 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_485
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDMatchSendState
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_486
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+0
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDMatchSendState
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_487
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+0
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+0
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDMatchSendState
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+0
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker917 Using cfiCommon1
          CFI (cfiPicker917) NoFunction
          CFI (cfiPicker917) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_495:
        MOV     A,#0x1
        RET
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiPicker917

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond918 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDMatchSendState
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+0
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDMatchSendState
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+0
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker921 Using cfiCommon1
          CFI (cfiPicker921) NoFunction
          CFI (cfiPicker921) Picker
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_239:
        RET
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiPicker921

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond922 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDMatchSendState
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_102
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+0
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDMatchSendState
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_103
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond924) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+0
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_96
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+0
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_97
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+0
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDMatchSendState
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_98
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+0
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker928 Using cfiCommon1
          CFI (cfiPicker928) NoFunction
          CFI (cfiPicker928) Picker
        LCALL   ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_556:
        ADD     A,#0x34
        LCALL   ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_514:
        RET
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiPicker928

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond929 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDMatchSendState
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+0
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker931 Using cfiCommon1
          CFI (cfiPicker931) NoFunction
          CFI (cfiPicker931) Picker
        MOV     DPL,A
        MOV     A,R2
        LCALL   ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_500:
        ADD     A,R0
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     R1,A
        MOV     A,R0
        ADD     A,#-0x2
        MOV     DPL,A
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 8,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 9,A
        MOV     DPTR,#matchED
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiPicker931

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond932 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_96
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+0
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDMatchSendState
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+0
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker935 Using cfiCommon1
          CFI (cfiPicker935) NoFunction
          CFI (cfiPicker935) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_238:
        CLR     C
        RLC     A
        RET
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiPicker935

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond936 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+0
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDMatchSendState
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+0
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker939 Using cfiCommon1
          CFI (cfiPicker939) NoFunction
          CFI (cfiPicker939) Picker
        LCALL   ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_236:
        CLR     C
        RLC     A
        RET
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiPicker939

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond940 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDMatchSendState
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_125
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+0
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_93
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+0
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_94
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+0
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDMatchSendState
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_95
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+0
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker945 Using cfiCommon1
          CFI (cfiPicker945) NoFunction
          CFI (cfiPicker945) Picker
        MOV     DPTR,#matchED
        LCALL   ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_555:
        ADD     A,#0x31
        LCALL   ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_513:
        RET
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiPicker945

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine189:
          CFI Block cfiCond946 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDMatchSendState
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_102
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+0
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDMatchSendState
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_103
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+0
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_96
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+0
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_97
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+0
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDMatchSendState
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_98
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+0
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDMatchSendState
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_124
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+0
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDMatchSendState
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_125
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+0
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_93
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+0
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond955 Using cfiCommon0
          CFI (cfiCond955) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond955) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_94
          CFI (cfiCond955) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond955) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond955) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond955) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond955) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond955) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond955) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond955) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond955) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond955) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond955) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond955) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond955) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond955) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond955) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond955) CFA_SP SP+0
          CFI (cfiCond955) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond956 Using cfiCommon0
          CFI (cfiCond956) Function ZDMatchSendState
          CFI (cfiCond956) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_95
          CFI (cfiCond956) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond956) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond956) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond956) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond956) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond956) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond956) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond956) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond956) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond956) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond956) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond956) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond956) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond956) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond956) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond956) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond956) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond956) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond956) CFA_SP SP+0
          CFI (cfiCond956) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker957 Using cfiCommon1
          CFI (cfiPicker957) NoFunction
          CFI (cfiPicker957) Picker
        MOV     DPL,A
        MOV     A,R0
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiCond955
          CFI EndBlock cfiCond956
          CFI EndBlock cfiPicker957
        REQUIRE ??Subroutine237_0
        ; // Fall through to label ??Subroutine237_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine237_0:
          CFI Block cfiCond958 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond959 Using cfiCommon0
          CFI (cfiCond959) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond959) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_105
          CFI (cfiCond959) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond959) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond959) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond959) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond959) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond959) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond959) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond959) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond959) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond959) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond959) CFA_SP SP+0
          CFI (cfiCond959) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_135
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+0
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond961 Using cfiCommon0
          CFI (cfiCond961) Function ZDO_ProcessUserDescSet
          CFI (cfiCond961) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_134
          CFI (cfiCond961) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond961) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond961) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond961) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond961) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond961) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond961) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond961) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond961) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond961) CFA_SP SP+0
          CFI (cfiCond961) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond962 Using cfiCommon0
          CFI (cfiCond962) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond962) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_10
          CFI (cfiCond962) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond962) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond962) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond962) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond962) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond962) CFA_SP SP+0
          CFI (cfiCond962) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond963 Using cfiCommon0
          CFI (cfiCond963) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond963) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_11
          CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond963) CFA_SP SP+0
          CFI (cfiCond963) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_106
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+0
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_107
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+0
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond966 Using cfiCommon0
          CFI (cfiCond966) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond966) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_191
          CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond966) CFA_SP SP+0
          CFI (cfiCond966) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond967 Using cfiCommon0
          CFI (cfiCond967) Function ZDO_ProcessUserDescReq
          CFI (cfiCond967) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_192
          CFI (cfiCond967) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond967) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond967) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond967) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond967) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond967) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond967) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond967) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond967) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond967) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond967) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond967) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond967) CFA_SP SP+0
          CFI (cfiCond967) CFA_XSP16 add(XSP16, 32)
          CFI Block cfiCond968 Using cfiCommon0
          CFI (cfiCond968) Function ZDO_ProcessUserDescReq
          CFI (cfiCond968) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_193
          CFI (cfiCond968) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond968) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond968) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond968) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond968) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond968) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond968) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond968) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond968) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond968) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond968) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond968) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond968) CFA_SP SP+0
          CFI (cfiCond968) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_68
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+0
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond970 Using cfiCommon0
          CFI (cfiCond970) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond970) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_69
          CFI (cfiCond970) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond970) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond970) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond970) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond970) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond970) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond970) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond970) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond970) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond970) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond970) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond970) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond970) CFA_SP SP+0
          CFI (cfiCond970) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond971 Using cfiCommon0
          CFI (cfiCond971) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond971) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_110
          CFI (cfiCond971) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond971) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond971) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond971) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond971) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond971) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond971) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond971) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond971) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond971) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond971) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond971) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond971) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond971) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond971) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond971) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond971) CFA_SP SP+0
          CFI (cfiCond971) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond972 Using cfiCommon0
          CFI (cfiCond972) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond972) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_111
          CFI (cfiCond972) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond972) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond972) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond972) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond972) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond972) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond972) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond972) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond972) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond972) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond972) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond972) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond972) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond972) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond972) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond972) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond972) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond972) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond972) CFA_SP SP+0
          CFI (cfiCond972) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond973 Using cfiCommon0
          CFI (cfiCond973) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond973) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_106
          CFI (cfiCond973) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond973) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond973) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond973) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond973) CFA_SP SP+0
          CFI (cfiCond973) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_107
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+0
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond975 Using cfiCommon0
          CFI (cfiCond975) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond975) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_505, ??CrossCallReturnLabel_194
          CFI (cfiCond975) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond975) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond975) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond975) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond975) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond975) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond975) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond975) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond975) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond975) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond975) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond975) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond975) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond975) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond975) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond975) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond975) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond975) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond975) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond975) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond975) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond975) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond975) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond975) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond975) CFA_SP SP+0
          CFI (cfiCond975) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond976 Using cfiCommon0
          CFI (cfiCond976) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond976) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_505, ??CrossCallReturnLabel_195
          CFI (cfiCond976) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond976) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond976) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond976) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond976) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond976) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond976) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond976) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond976) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond976) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond976) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond976) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond976) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond976) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond976) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond976) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond976) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond976) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond976) CFA_SP SP+0
          CFI (cfiCond976) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_305
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+0
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_306
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+0
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_304
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_SP SP+0
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond980 Using cfiCommon0
          CFI (cfiCond980) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond980) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_179
          CFI (cfiCond980) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond980) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond980) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond980) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond980) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond980) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond980) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond980) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond980) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond980) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond980) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond980) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond980) CFA_SP SP+0
          CFI (cfiCond980) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond981 Using cfiCommon0
          CFI (cfiCond981) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond981) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_180
          CFI (cfiCond981) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond981) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond981) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond981) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond981) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond981) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond981) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond981) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond981) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond981) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond981) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond981) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond981) CFA_SP SP+0
          CFI (cfiCond981) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_181
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+0
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_378
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+0
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_379
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+0
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_380
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+0
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_381
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+0
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_382
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+0
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_383
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond988) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond988) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+0
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDMatchSendState
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_384
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+0
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond990 Using cfiCommon0
          CFI (cfiCond990) Function ZDMatchSendState
          CFI (cfiCond990) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_385
          CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond990) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond990) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond990) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond990) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond990) CFA_SP SP+0
          CFI (cfiCond990) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDMatchSendState
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_386
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond991) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond991) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond991) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond991) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond991) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+0
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond992 Using cfiCommon0
          CFI (cfiCond992) Function ZDO_ParseAddrRsp
          CFI (cfiCond992) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_387
          CFI (cfiCond992) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond992) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond992) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond992) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond992) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond992) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond992) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond992) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond992) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond992) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond992) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond992) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond992) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond992) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond992) CFA_SP SP+0
          CFI (cfiCond992) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond993 Using cfiCommon0
          CFI (cfiCond993) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond993) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_366
          CFI (cfiCond993) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond993) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond993) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond993) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond993) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond993) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond993) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond993) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond993) CFA_SP SP+0
          CFI (cfiCond993) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_367
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+0
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond995 Using cfiCommon0
          CFI (cfiCond995) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond995) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_368
          CFI (cfiCond995) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond995) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond995) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond995) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond995) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond995) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond995) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond995) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond995) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond995) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond995) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond995) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond995) CFA_SP SP+0
          CFI (cfiCond995) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond996 Using cfiCommon0
          CFI (cfiCond996) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond996) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_369
          CFI (cfiCond996) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond996) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond996) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond996) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond996) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond996) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond996) CFA_SP SP+0
          CFI (cfiCond996) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_370
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+0
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_371
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+0
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond999 Using cfiCommon0
          CFI (cfiCond999) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond999) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_372
          CFI (cfiCond999) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond999) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond999) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond999) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond999) CFA_SP SP+0
          CFI (cfiCond999) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1000 Using cfiCommon0
          CFI (cfiCond1000) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1000) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_373
          CFI (cfiCond1000) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1000) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1000) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1000) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1000) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1000) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1000) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1000) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1000) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1000) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1000) CFA_SP SP+0
          CFI (cfiCond1000) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_374
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+0
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function ZDO_CopyMatchInfo
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_375
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+0
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_CopyMatchInfo
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_376
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+0
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_ParseAddrRsp
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_377
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+0
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_CopyMatchInfo
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_506, ??CrossCallReturnLabel_200
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+0
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_CopyMatchInfo
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_506, ??CrossCallReturnLabel_201
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+0
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1007 Using cfiCommon0
          CFI (cfiCond1007) Function ZDO_CopyMatchInfo
          CFI (cfiCond1007) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_165
          CFI (cfiCond1007) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1007) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1007) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1007) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1007) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1007) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1007) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1007) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1007) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1007) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1007) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1007) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1007) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1007) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1007) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1007) CFA_SP SP+0
          CFI (cfiCond1007) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1008 Using cfiCommon0
          CFI (cfiCond1008) Function ZDO_CopyMatchInfo
          CFI (cfiCond1008) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_166
          CFI (cfiCond1008) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1008) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1008) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1008) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1008) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1008) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1008) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1008) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1008) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1008) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1008) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1008) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1008) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1008) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1008) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1008) CFA_SP SP+0
          CFI (cfiCond1008) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_483
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+0
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond1010 Using cfiCommon0
          CFI (cfiCond1010) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1010) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_484
          CFI (cfiCond1010) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1010) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1010) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1010) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1010) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1010) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1010) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1010) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1010) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1010) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1010) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1010) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1010) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1010) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1010) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1010) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1010) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1010) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1010) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1010) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1010) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1010) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1010) CFA_SP SP+0
          CFI (cfiCond1010) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1011 Using cfiCommon0
          CFI (cfiCond1011) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1011) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_476
          CFI (cfiCond1011) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1011) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1011) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1011) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1011) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1011) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1011) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1011) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1011) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1011) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1011) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1011) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1011) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1011) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1011) CFA_SP SP+0
          CFI (cfiCond1011) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_477
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1012) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1012) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1012) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1012) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1012) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1012) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1012) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+0
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_478
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+0
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_479
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+0
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1015 Using cfiCommon0
          CFI (cfiCond1015) Function ZDMatchSendState
          CFI (cfiCond1015) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_480
          CFI (cfiCond1015) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1015) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1015) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1015) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1015) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1015) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1015) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1015) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1015) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1015) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1015) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1015) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1015) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1015) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1015) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1015) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1015) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1015) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1015) CFA_SP SP+0
          CFI (cfiCond1015) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1016 Using cfiCommon0
          CFI (cfiCond1016) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1016) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_481
          CFI (cfiCond1016) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1016) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1016) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1016) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1016) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1016) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1016) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1016) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1016) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1016) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1016) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1016) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1016) CFA_SP SP+0
          CFI (cfiCond1016) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_482
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+0
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_128
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+0
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function ZDMatchSendState
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_129
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1019) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1019) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1019) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1019) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1019) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+0
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function ZDMatchSendState
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_500, ??CrossCallReturnLabel_99
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+0
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDMatchSendState
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_516, ??CrossCallReturnLabel_500, ??CrossCallReturnLabel_100
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+0
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_101
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_SP SP+0
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1023 Using cfiCommon0
          CFI (cfiCond1023) Function ZDMatchSendState
          CFI (cfiCond1023) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_102
          CFI (cfiCond1023) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1023) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1023) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1023) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1023) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1023) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1023) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1023) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1023) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1023) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1023) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1023) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1023) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1023) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1023) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1023) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1023) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1023) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1023) CFA_SP SP+0
          CFI (cfiCond1023) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1024 Using cfiCommon0
          CFI (cfiCond1024) Function ZDMatchSendState
          CFI (cfiCond1024) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_239, ??CrossCallReturnLabel_103
          CFI (cfiCond1024) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1024) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1024) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1024) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1024) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1024) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1024) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1024) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1024) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1024) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1024) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1024) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1024) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1024) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1024) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1024) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1024) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1024) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1024) CFA_SP SP+0
          CFI (cfiCond1024) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1025 Using cfiCommon0
          CFI (cfiCond1025) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1025) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_96
          CFI (cfiCond1025) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1025) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1025) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1025) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1025) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1025) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1025) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1025) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1025) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1025) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1025) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1025) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1025) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1025) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1025) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1025) CFA_SP SP+0
          CFI (cfiCond1025) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1026 Using cfiCommon0
          CFI (cfiCond1026) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1026) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_97
          CFI (cfiCond1026) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1026) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1026) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1026) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1026) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1026) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1026) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1026) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1026) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1026) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1026) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1026) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1026) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1026) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1026) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1026) CFA_SP SP+0
          CFI (cfiCond1026) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDMatchSendState
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_238, ??CrossCallReturnLabel_98
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+0
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1028 Using cfiCommon0
          CFI (cfiCond1028) Function ZDMatchSendState
          CFI (cfiCond1028) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_124
          CFI (cfiCond1028) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1028) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1028) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1028) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1028) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1028) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1028) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1028) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1028) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1028) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1028) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1028) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1028) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1028) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1028) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1028) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1028) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1028) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1028) CFA_SP SP+0
          CFI (cfiCond1028) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1029 Using cfiCommon0
          CFI (cfiCond1029) Function ZDMatchSendState
          CFI (cfiCond1029) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_125
          CFI (cfiCond1029) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1029) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1029) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1029) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1029) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1029) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1029) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1029) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1029) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1029) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1029) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1029) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1029) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1029) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1029) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1029) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1029) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1029) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1029) CFA_SP SP+0
          CFI (cfiCond1029) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_93
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+0
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1031 Using cfiCommon0
          CFI (cfiCond1031) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1031) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_94
          CFI (cfiCond1031) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1031) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1031) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1031) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1031) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1031) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1031) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1031) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1031) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1031) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1031) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1031) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1031) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1031) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1031) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1031) CFA_SP SP+0
          CFI (cfiCond1031) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1032 Using cfiCommon0
          CFI (cfiCond1032) Function ZDMatchSendState
          CFI (cfiCond1032) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_95
          CFI (cfiCond1032) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1032) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1032) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1032) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1032) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1032) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1032) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1032) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1032) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1032) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1032) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1032) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1032) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1032) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1032) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1032) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1032) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1032) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1032) CFA_SP SP+0
          CFI (cfiCond1032) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1033 Using cfiCommon1
          CFI (cfiPicker1033) NoFunction
          CFI (cfiPicker1033) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond958
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiCond961
          CFI EndBlock cfiCond962
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiCond966
          CFI EndBlock cfiCond967
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiCond970
          CFI EndBlock cfiCond971
          CFI EndBlock cfiCond972
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiCond975
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiCond980
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiCond992
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiCond995
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiCond999
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiCond1007
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiCond1010
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiCond1015
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiCond1023
          CFI EndBlock cfiCond1024
          CFI EndBlock cfiCond1025
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiCond1028
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiCond1031
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiPicker1033

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond1034 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDMatchSendState
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+0
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1036 Using cfiCommon1
          CFI (cfiPicker1036) NoFunction
          CFI (cfiPicker1036) Picker
        LCALL   ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_461:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        RET
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiPicker1036

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1037 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_23
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDMatchSendState
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+0
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1039 Using cfiCommon1
          CFI (cfiPicker1039) NoFunction
          CFI (cfiPicker1039) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        LCALL   ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_460:
        MOV     DPH,A
        MOV     DPL,R0
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        MOV     R0,#?V0 + 0
        RET
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiPicker1039
// 2417 
// 2418 /*********************************************************************
// 2419  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2420  *
// 2421  * @brief   End device bind timeout.
// 2422  *
// 2423  * @param  none
// 2424  *
// 2425  * @return  none
// 2426  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2427 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock1040 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2428 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH    DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2429   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV     R3,#0x0
        MOV     R2,#-0x7b
        MOV     R1,#0x1
        LCALL   ??ZDMatchSendState?relay
// 2430 }
        LJMP    ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock1040
// 2431 
// 2432 /*********************************************************************
// 2433  * ZDO MESSAGE PARSING API FUNCTIONS
// 2434  */
// 2435 
// 2436 /*********************************************************************
// 2437  * @fn          ZDO_ParseEndDeviceBindReq
// 2438  *
// 2439  * @brief       This function parses the End_Device_Bind_req message.
// 2440  *
// 2441  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2442  *            function and must be freed by that calling function.
// 2443  *
// 2444  * @param       inMsg  - incoming message (request)
// 2445  * @param       bindReq - pointer to place to parse message to
// 2446  *
// 2447  * @return      none
// 2448  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2449 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock1041 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2450 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2451   uint8 *msg;
// 2452 
// 2453   // Parse the message
// 2454   bindReq->TransSeq = inMsg->TransSeq;
        MOV     A,R2
        ADD     A,#0xf
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_684:
        LCALL   ?Subroutine51 & 0xFFFF
// 2455   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_81:
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_356:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine209_0 & 0xFFFF
// 2456   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_341:
        MOV     A,R2
        ADD     A,#0xe
        LCALL   ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_685:
        LCALL   ?Subroutine45 & 0xFFFF
// 2457   msg = inMsg->asdu;
??CrossCallReturnLabel_69:
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine97 & 0xFFFF
// 2458 
// 2459   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_157:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine29 & 0xFFFF
// 2460   msg += 2;
// 2461 
// 2462   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??CrossCallReturnLabel_35:
        ADD     A,#0x6
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2463   msg += Z_EXTADDR_LEN;
        MOV     A,R6
        ADD     A,#0x8
        LCALL   ??Subroutine211_0 & 0xFFFF
// 2464 
// 2465   bindReq->endpoint = *msg++;
??CrossCallReturnLabel_346:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_650:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine17 & 0xFFFF
// 2466   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_12:
        MOV     R0,A
        MOV     A,?V0 + 0
        ADD     A,#0xf
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_639:
        MOV     A,R0
        LCALL   ?Subroutine39 & 0xFFFF
// 2467   msg += 2;
// 2468 
// 2469   bindReq->inClusters = NULL;
??CrossCallReturnLabel_57:
        ADD     A,#0x12
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine130 & 0xFFFF
// 2470   bindReq->outClusters = NULL;
??CrossCallReturnLabel_203:
        ADD     A,#0x15
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine133 & 0xFFFF
// 2471 
// 2472   if ((bindReq->numInClusters = *msg++) &&
// 2473       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_205:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        INC     DPTR
        INC     R6
        MOV     R7,DPH
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0x11
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_640:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_0
        MOV     A,?V0 + 0
        ADD     A,#0x12
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_498:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_0:
        JZ      ??ZDO_ParseEndDeviceBindReq_0
// 2474   {
// 2475     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,?V0 + 0
        ADD     A,#0x12
        LCALL   ?Subroutine95 & 0xFFFF
// 2476   }
??CrossCallReturnLabel_155:
        ADD     A,#0x11
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_481:
        LCALL   ??ZDO_ConvertOTAClusters?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
        SJMP    ??CrossCallReturnLabel_522
// 2477   else
// 2478   {
// 2479     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_0:
        MOV     A,?V0 + 0
        ADD     A,#0x11
        LCALL   ?Subroutine134 & 0xFFFF
// 2480   }
// 2481 
// 2482   if ((bindReq->numOutClusters = *msg++) &&
// 2483       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??CrossCallReturnLabel_522:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0x14
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_641:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        JZ      ??ZDO_ParseEndDeviceBindReq_1
        MOV     A,?V0 + 0
        ADD     A,#0x15
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_499:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_1:
        JZ      ??ZDO_ParseEndDeviceBindReq_1
// 2484   {
// 2485     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV     A,?V0 + 0
        ADD     A,#0x15
        LCALL   ?Subroutine95 & 0xFFFF
// 2486   }
??CrossCallReturnLabel_156:
        ADD     A,#0x14
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_482:
        LCALL   ??ZDO_ConvertOTAClusters?relay
        SJMP    ??CrossCallReturnLabel_523
// 2487   else
// 2488   {
// 2489     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_1:
        MOV     A,?V0 + 0
        ADD     A,#0x14
        LCALL   ?Subroutine134 & 0xFFFF
// 2490   }
// 2491 }
??CrossCallReturnLabel_523:
        LJMP    ??Subroutine192_0 & 0xFFFF
          CFI EndBlock cfiBlock1041

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond1042 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1043 Using cfiCommon0
          CFI (cfiCond1043) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1043) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond1043) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1043) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1043) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1043) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1043) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1043) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1043) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1043) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1043) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1043) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1043) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1043) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1043) CFA_SP SP+0
          CFI (cfiCond1043) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1044 Using cfiCommon1
          CFI (cfiPicker1044) NoFunction
          CFI (cfiPicker1044) Picker
        LCALL   ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_260:
        RET
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiCond1043
          CFI EndBlock cfiPicker1044

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine179:
          CFI Block cfiCond1045 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_205
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+0
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1047 Using cfiCommon0
          CFI (cfiCond1047) Function ZDO_CopyMatchInfo
          CFI (cfiCond1047) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_202
          CFI (cfiCond1047) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1047) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1047) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1047) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1047) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1047) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1047) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1047) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1047) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1047) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1047) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1047) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1047) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1047) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1047) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1047) CFA_SP SP+0
          CFI (cfiCond1047) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1048 Using cfiCommon0
          CFI (cfiCond1048) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1048) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_203
          CFI (cfiCond1048) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1048) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1048) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1048) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1048) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1048) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1048) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1048) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1048) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1048) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1048) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1048) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1048) CFA_SP SP+0
          CFI (cfiCond1048) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1049 Using cfiCommon1
          CFI (cfiPicker1049) NoFunction
          CFI (cfiPicker1049) Picker
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_672:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiCond1047
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiPicker1049

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond1050 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_202
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_SP SP+0
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1052 Using cfiCommon1
          CFI (cfiPicker1052) NoFunction
          CFI (cfiPicker1052) Picker
        LCALL   ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_259:
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiPicker1052

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond1053 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_155
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1054 Using cfiCommon0
          CFI (cfiCond1054) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1054) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond1054) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1054) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1054) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1054) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1054) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1054) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1054) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1054) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1054) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1054) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1054) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1054) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1054) CFA_SP SP+0
          CFI (cfiCond1054) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1055 Using cfiCommon1
          CFI (cfiPicker1055) NoFunction
          CFI (cfiPicker1055) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_655:
        LCALL   ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_250:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiCond1054
          CFI EndBlock cfiPicker1055

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1056 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_498
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+0
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1058 Using cfiCommon1
          CFI (cfiPicker1058) NoFunction
          CFI (cfiPicker1058) Picker
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiPicker1058
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        REQUIRE ??Subroutine238_0
        ; // Fall through to label ??Subroutine238_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine238_0:
          CFI Block cfiCond1059 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_496
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1060 Using cfiCommon0
          CFI (cfiCond1060) Function ZDO_CopyMatchInfo
          CFI (cfiCond1060) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond1060) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1060) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1060) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1060) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1060) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1060) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1060) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1060) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1060) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1060) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1060) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1060) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1060) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1060) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1060) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1060) CFA_SP SP+0
          CFI (cfiCond1060) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+0
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+0
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1063 Using cfiCommon1
          CFI (cfiPicker1063) NoFunction
          CFI (cfiPicker1063) Picker
        MOVX    A,@DPTR
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1059
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiPicker1063

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1064 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+0
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1066 Using cfiCommon1
          CFI (cfiPicker1066) NoFunction
          CFI (cfiPicker1066) Picker
        INC     DPTR
        MOVX    @DPTR,A
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_507:
        RET
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiPicker1066

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond1067 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_69
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_SP SP+0
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_110
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+0
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_111
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+0
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1071 Using cfiCommon1
          CFI (cfiPicker1071) NoFunction
          CFI (cfiPicker1071) Picker
        LCALL   ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_585:
        MOV     A,R3
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiPicker1071
        REQUIRE ??Subroutine239_0
        ; // Fall through to label ??Subroutine239_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine239_0:
          CFI Block cfiCond1072 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_107
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+0
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_505, ??CrossCallReturnLabel_194
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1074) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1074) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1074) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1074) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1074) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1074) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1074) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1074) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1074) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1074) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1074) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+0
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_505, ??CrossCallReturnLabel_195
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1075) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1075) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1075) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1075) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1075) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1075) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1075) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1075) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1075) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1075) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1075) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+0
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_305
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+0
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1077 Using cfiCommon0
          CFI (cfiCond1077) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_306
          CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1077) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1077) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1077) CFA_SP SP+0
          CFI (cfiCond1077) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_509, ??CrossCallReturnLabel_304
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+0
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_179
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+0
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1080 Using cfiCommon0
          CFI (cfiCond1080) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1080) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_180
          CFI (cfiCond1080) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1080) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1080) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1080) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1080) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1080) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1080) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1080) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1080) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1080) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1080) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1080) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1080) CFA_SP SP+0
          CFI (cfiCond1080) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1081 Using cfiCommon0
          CFI (cfiCond1081) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1081) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_181
          CFI (cfiCond1081) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1081) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1081) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1081) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1081) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1081) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1081) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1081) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1081) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1081) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1081) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1081) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1081) CFA_SP SP+0
          CFI (cfiCond1081) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_378
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+0
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_379
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1083) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1083) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+0
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1084 Using cfiCommon0
          CFI (cfiCond1084) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1084) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_380
          CFI (cfiCond1084) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1084) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1084) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1084) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1084) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1084) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1084) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1084) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1084) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1084) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1084) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1084) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1084) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1084) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1084) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1084) CFA_SP SP+0
          CFI (cfiCond1084) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1085 Using cfiCommon0
          CFI (cfiCond1085) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1085) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_381
          CFI (cfiCond1085) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1085) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1085) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1085) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1085) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1085) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1085) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1085) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1085) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1085) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1085) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1085) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1085) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1085) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1085) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1085) CFA_SP SP+0
          CFI (cfiCond1085) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_382
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1086) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1086) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+0
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1087 Using cfiCommon0
          CFI (cfiCond1087) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_383
          CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1087) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1087) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1087) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1087) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1087) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1087) CFA_SP SP+0
          CFI (cfiCond1087) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDMatchSendState
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_384
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1088) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1088) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1088) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1088) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1088) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+0
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDMatchSendState
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_385
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1089) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1089) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1089) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1089) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1089) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+0
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1090 Using cfiCommon0
          CFI (cfiCond1090) Function ZDMatchSendState
          CFI (cfiCond1090) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_386
          CFI (cfiCond1090) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1090) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1090) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1090) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1090) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1090) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1090) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1090) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1090) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1090) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1090) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1090) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1090) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1090) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1090) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1090) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1090) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1090) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1090) CFA_SP SP+0
          CFI (cfiCond1090) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1091 Using cfiCommon0
          CFI (cfiCond1091) Function ZDO_ParseAddrRsp
          CFI (cfiCond1091) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_387
          CFI (cfiCond1091) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1091) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1091) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1091) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1091) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1091) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1091) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1091) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1091) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1091) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1091) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1091) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1091) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1091) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1091) CFA_SP SP+0
          CFI (cfiCond1091) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_366
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1092) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+0
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_367
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+0
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_368
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+0
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_369
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+0
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_370
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+0
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_371
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+0
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_372
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+0
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_373
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+0
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1100 Using cfiCommon0
          CFI (cfiCond1100) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1100) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_374
          CFI (cfiCond1100) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1100) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1100) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1100) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1100) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1100) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1100) CFA_SP SP+0
          CFI (cfiCond1100) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1101 Using cfiCommon0
          CFI (cfiCond1101) Function ZDO_CopyMatchInfo
          CFI (cfiCond1101) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_375
          CFI (cfiCond1101) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1101) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1101) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1101) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1101) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1101) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1101) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1101) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1101) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1101) CFA_SP SP+0
          CFI (cfiCond1101) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_CopyMatchInfo
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_376
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1102) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1102) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+0
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1103 Using cfiCommon0
          CFI (cfiCond1103) Function ZDO_ParseAddrRsp
          CFI (cfiCond1103) Conditional ??CrossCallReturnLabel_510, ??CrossCallReturnLabel_377
          CFI (cfiCond1103) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1103) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1103) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1103) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1103) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1103) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1103) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1103) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1103) CFA_SP SP+0
          CFI (cfiCond1103) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1104 Using cfiCommon0
          CFI (cfiCond1104) Function ZDO_CopyMatchInfo
          CFI (cfiCond1104) Conditional ??CrossCallReturnLabel_506, ??CrossCallReturnLabel_200
          CFI (cfiCond1104) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1104) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1104) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1104) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1104) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1104) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1104) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1104) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1104) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1104) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1104) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1104) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1104) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1104) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1104) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1104) CFA_SP SP+0
          CFI (cfiCond1104) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function ZDO_CopyMatchInfo
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_506, ??CrossCallReturnLabel_201
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1105) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1105) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+0
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1106 Using cfiCommon0
          CFI (cfiCond1106) Function ZDO_CopyMatchInfo
          CFI (cfiCond1106) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_165
          CFI (cfiCond1106) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1106) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1106) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1106) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1106) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1106) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1106) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1106) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1106) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1106) CFA_SP SP+0
          CFI (cfiCond1106) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1107 Using cfiCommon0
          CFI (cfiCond1107) Function ZDO_CopyMatchInfo
          CFI (cfiCond1107) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_166
          CFI (cfiCond1107) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1107) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1107) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1107) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1107) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1107) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1107) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1107) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1107) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1107) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1107) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1107) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1107) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1107) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1107) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1107) CFA_SP SP+0
          CFI (cfiCond1107) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_483
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1108) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1108) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1108) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1108) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1108) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1108) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1108) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1108) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1108) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+0
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 64)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_484
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1109) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1109) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1109) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1109) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1109) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1109) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1109) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1109) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1109) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+0
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_476
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1110) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+0
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1111 Using cfiCommon0
          CFI (cfiCond1111) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1111) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_477
          CFI (cfiCond1111) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1111) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1111) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1111) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1111) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1111) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1111) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1111) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1111) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1111) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1111) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1111) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1111) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1111) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1111) CFA_SP SP+0
          CFI (cfiCond1111) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1112 Using cfiCommon0
          CFI (cfiCond1112) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1112) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_478
          CFI (cfiCond1112) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1112) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1112) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1112) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1112) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1112) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1112) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1112) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1112) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1112) CFA_SP SP+0
          CFI (cfiCond1112) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_479
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1113) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1113) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+0
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1114 Using cfiCommon0
          CFI (cfiCond1114) Function ZDMatchSendState
          CFI (cfiCond1114) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_480
          CFI (cfiCond1114) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1114) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1114) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1114) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1114) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1114) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1114) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1114) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1114) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1114) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1114) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1114) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1114) CFA_SP SP+0
          CFI (cfiCond1114) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1115 Using cfiCommon0
          CFI (cfiCond1115) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1115) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_481
          CFI (cfiCond1115) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1115) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1115) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1115) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1115) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1115) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1115) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1115) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1115) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1115) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1115) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1115) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1115) CFA_SP SP+0
          CFI (cfiCond1115) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1116 Using cfiCommon0
          CFI (cfiCond1116) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1116) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_482
          CFI (cfiCond1116) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1116) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1116) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1116) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1116) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1116) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1116) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1116) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1116) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1116) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1116) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1116) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1116) CFA_SP SP+0
          CFI (cfiCond1116) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_128
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+0
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1118 Using cfiCommon0
          CFI (cfiCond1118) Function ZDMatchSendState
          CFI (cfiCond1118) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_129
          CFI (cfiCond1118) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1118) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1118) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1118) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1118) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1118) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1118) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1118) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1118) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1118) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1118) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1118) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1118) CFA_SP SP+0
          CFI (cfiCond1118) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1119 Using cfiCommon0
          CFI (cfiCond1119) Function ZDMatchSendState
          CFI (cfiCond1119) Conditional ??CrossCallReturnLabel_500, ??CrossCallReturnLabel_99
          CFI (cfiCond1119) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1119) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1119) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1119) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1119) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1119) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1119) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1119) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1119) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1119) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1119) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1119) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1119) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1119) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1119) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1119) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1119) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1119) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1119) CFA_SP SP+0
          CFI (cfiCond1119) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1120 Using cfiCommon0
          CFI (cfiCond1120) Function ZDMatchSendState
          CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_500, ??CrossCallReturnLabel_100
          CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1120) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1120) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1120) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1120) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1120) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1120) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1120) CFA_SP SP+0
          CFI (cfiCond1120) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1121 Using cfiCommon0
          CFI (cfiCond1121) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1121) Conditional ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_68
          CFI (cfiCond1121) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1121) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1121) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1121) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1121) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1121) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1121) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1121) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1121) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1121) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1121) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1121) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1121) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1121) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1121) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1121) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1121) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1121) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1121) CFA_SP SP+0
          CFI (cfiCond1121) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1122 Using cfiCommon0
          CFI (cfiCond1122) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1122) Conditional ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_69
          CFI (cfiCond1122) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1122) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1122) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1122) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1122) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1122) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1122) CFA_SP SP+0
          CFI (cfiCond1122) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1123 Using cfiCommon0
          CFI (cfiCond1123) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1123) Conditional ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_110
          CFI (cfiCond1123) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1123) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1123) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1123) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1123) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1123) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1123) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1123) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1123) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1123) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1123) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1123) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1123) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1123) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1123) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1123) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1123) CFA_SP SP+0
          CFI (cfiCond1123) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_111
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1124) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1124) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1124) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1124) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1124) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1124) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1124) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+0
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1125 Using cfiCommon1
          CFI (cfiPicker1125) NoFunction
          CFI (cfiPicker1125) Picker
        LCALL   ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_516:
        RET
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiCond1080
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiCond1084
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiCond1090
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiCond1100
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiCond1103
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiCond1106
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiCond1111
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiCond1114
          CFI EndBlock cfiCond1115
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiCond1118
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiCond1121
          CFI EndBlock cfiCond1122
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiPicker1125

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine188:
          CFI Block cfiCond1126 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1127 Using cfiCommon0
          CFI (cfiCond1127) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_69
          CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1127) CFA_SP SP+0
          CFI (cfiCond1127) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1128 Using cfiCommon0
          CFI (cfiCond1128) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_110
          CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1128) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1128) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1128) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1128) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1128) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1128) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1128) CFA_SP SP+0
          CFI (cfiCond1128) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_111
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1129) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1129) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1129) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1129) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1129) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1129) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1129) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+0
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1130 Using cfiCommon0
          CFI (cfiCond1130) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1130) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_320
          CFI (cfiCond1130) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1130) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1130) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1130) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1130) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1130) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1130) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1130) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1130) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1130) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1130) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1130) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1130) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1130) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1130) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1130) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1130) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1130) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1130) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1130) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1130) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1130) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1130) CFA_SP SP+0
          CFI (cfiCond1130) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1131 Using cfiCommon0
          CFI (cfiCond1131) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1131) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_321
          CFI (cfiCond1131) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1131) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1131) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1131) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1131) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1131) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1131) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1131) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1131) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1131) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1131) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1131) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1131) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1131) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1131) CFA_SP SP+0
          CFI (cfiCond1131) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1132 Using cfiCommon0
          CFI (cfiCond1132) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_322
          CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1132) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1132) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1132) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1132) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1132) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1132) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1132) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1132) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1132) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1132) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1132) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1132) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1132) CFA_SP SP+0
          CFI (cfiCond1132) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_10
          CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1133) CFA_SP SP+0
          CFI (cfiCond1133) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_11
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+0
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_611
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1135) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1135) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1135) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+0
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_612
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+0
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1137 Using cfiCommon0
          CFI (cfiCond1137) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_613
          CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1137) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1137) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1137) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1137) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1137) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1137) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1137) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1137) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1137) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1137) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1137) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1137) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1137) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1137) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1137) CFA_SP SP+0
          CFI (cfiCond1137) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1138 Using cfiCommon0
          CFI (cfiCond1138) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_187
          CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1138) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1138) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1138) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1138) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1138) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1138) CFA_SP SP+0
          CFI (cfiCond1138) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1139 Using cfiCommon0
          CFI (cfiCond1139) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1139) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_188
          CFI (cfiCond1139) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1139) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1139) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1139) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1139) CFA_SP SP+0
          CFI (cfiCond1139) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1140 Using cfiCommon0
          CFI (cfiCond1140) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1140) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI (cfiCond1140) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1140) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1140) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1140) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1140) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1140) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1140) CFA_SP SP+0
          CFI (cfiCond1140) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1141 Using cfiCommon0
          CFI (cfiCond1141) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1141) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1141) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1141) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1141) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1141) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1141) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1141) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1141) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1141) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1141) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1141) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1141) CFA_SP SP+0
          CFI (cfiCond1141) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+0
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1143 Using cfiCommon0
          CFI (cfiCond1143) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1143) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1143) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1143) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1143) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1143) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1143) CFA_SP SP+0
          CFI (cfiCond1143) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1144 Using cfiCommon1
          CFI (cfiPicker1144) NoFunction
          CFI (cfiPicker1144) Picker
        MOV     A,R2
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiCond1130
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiCond1139
          CFI EndBlock cfiCond1140
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiCond1143
          CFI EndBlock cfiPicker1144
        REQUIRE ??Subroutine240_0
        ; // Fall through to label ??Subroutine240_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine240_0:
          CFI Block cfiCond1145 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_105
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+0
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_135
          CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1147) CFA_SP SP+0
          CFI (cfiCond1147) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1148 Using cfiCommon0
          CFI (cfiCond1148) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1148) Conditional ??CrossCallReturnLabel_583, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_134
          CFI (cfiCond1148) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1148) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1148) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1148) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1148) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1148) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1148) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1148) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1148) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1148) CFA_SP SP+0
          CFI (cfiCond1148) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1149 Using cfiCommon0
          CFI (cfiCond1149) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1149) Conditional ??CrossCallReturnLabel_582, ??CrossCallReturnLabel_179
          CFI (cfiCond1149) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1149) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1149) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1149) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1149) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1149) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1149) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1149) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1149) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1149) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1149) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1149) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1149) CFA_SP SP+0
          CFI (cfiCond1149) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1150 Using cfiCommon0
          CFI (cfiCond1150) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1150) Conditional ??CrossCallReturnLabel_582, ??CrossCallReturnLabel_180
          CFI (cfiCond1150) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1150) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1150) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1150) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1150) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1150) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1150) CFA_SP SP+0
          CFI (cfiCond1150) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_582, ??CrossCallReturnLabel_181
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_SP SP+0
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_575
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+0
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_576
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+0
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1154 Using cfiCommon0
          CFI (cfiCond1154) Function ZDO_ParseAddrRsp
          CFI (cfiCond1154) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_581
          CFI (cfiCond1154) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1154) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1154) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1154) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1154) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1154) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1154) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1154) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1154) CFA_SP SP+0
          CFI (cfiCond1154) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1155 Using cfiCommon0
          CFI (cfiCond1155) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1155) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_577
          CFI (cfiCond1155) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1155) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1155) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1155) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1155) CFA_SP SP+0
          CFI (cfiCond1155) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1156 Using cfiCommon0
          CFI (cfiCond1156) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_578
          CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1156) CFA_SP SP+0
          CFI (cfiCond1156) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1157 Using cfiCommon0
          CFI (cfiCond1157) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_579
          CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1157) CFA_SP SP+0
          CFI (cfiCond1157) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function ZDO_ParseEPListRsp
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_587, ??CrossCallReturnLabel_580
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+0
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_68
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+0
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_507, ??CrossCallReturnLabel_69
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1160) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+0
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_110
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+0
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_585, ??CrossCallReturnLabel_508, ??CrossCallReturnLabel_111
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+0
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1163 Using cfiCommon0
          CFI (cfiCond1163) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1163) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_320
          CFI (cfiCond1163) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1163) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1163) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1163) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1163) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1163) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1163) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1163) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1163) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1163) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1163) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1163) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1163) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1163) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1163) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1163) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1163) CFA_SP SP+0
          CFI (cfiCond1163) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1164 Using cfiCommon0
          CFI (cfiCond1164) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1164) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_321
          CFI (cfiCond1164) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1164) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1164) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1164) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1164) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1164) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1164) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1164) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1164) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1164) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1164) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1164) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1164) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1164) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1164) CFA_SP SP+0
          CFI (cfiCond1164) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1165 Using cfiCommon0
          CFI (cfiCond1165) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1165) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_322
          CFI (cfiCond1165) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1165) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1165) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1165) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1165) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1165) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1165) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1165) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1165) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1165) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1165) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1165) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1165) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1165) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1165) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1165) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1165) CFA_SP SP+0
          CFI (cfiCond1165) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1166 Using cfiCommon0
          CFI (cfiCond1166) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1166) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_10
          CFI (cfiCond1166) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1166) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1166) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1166) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1166) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1166) CFA_SP SP+0
          CFI (cfiCond1166) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1167 Using cfiCommon0
          CFI (cfiCond1167) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_11
          CFI (cfiCond1167) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1167) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1167) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1167) CFA_SP SP+0
          CFI (cfiCond1167) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1168 Using cfiCommon0
          CFI (cfiCond1168) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1168) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_611
          CFI (cfiCond1168) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1168) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1168) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1168) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1168) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1168) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1168) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1168) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1168) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1168) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1168) CFA_SP SP+0
          CFI (cfiCond1168) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1169 Using cfiCommon0
          CFI (cfiCond1169) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1169) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_612
          CFI (cfiCond1169) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1169) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1169) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1169) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1169) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1169) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1169) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1169) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1169) CFA_SP SP+0
          CFI (cfiCond1169) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_613
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1170) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1170) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1170) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1170) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1170) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1170) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1170) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1170) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1170) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1170) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1170) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+0
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_187
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+0
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1172 Using cfiCommon0
          CFI (cfiCond1172) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_586, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_188
          CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1172) CFA_SP SP+0
          CFI (cfiCond1172) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1173 Using cfiCommon0
          CFI (cfiCond1173) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1173) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1173) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1173) CFA_SP SP+0
          CFI (cfiCond1173) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1174 Using cfiCommon0
          CFI (cfiCond1174) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1174) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1174) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1174) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1174) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1174) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1174) CFA_SP SP+0
          CFI (cfiCond1174) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1175 Using cfiCommon0
          CFI (cfiCond1175) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1175) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1175) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1175) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1175) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1175) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1175) CFA_SP SP+0
          CFI (cfiCond1175) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_584, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+0
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1177 Using cfiCommon1
          CFI (cfiPicker1177) NoFunction
          CFI (cfiPicker1177) Picker
        ADD     A,#0x13
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiCond1148
          CFI EndBlock cfiCond1149
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiCond1154
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiCond1163
          CFI EndBlock cfiCond1164
          CFI EndBlock cfiCond1165
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiCond1167
          CFI EndBlock cfiCond1168
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiCond1174
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiPicker1177
// 2492 
// 2493 /*********************************************************************
// 2494  * @fn          ZDO_ParseBindUnbindReq
// 2495  *
// 2496  * @brief       This function parses the Bind_req or Unbind_req message.
// 2497  *
// 2498  * @param       inMsg  - incoming message (request)
// 2499  * @param       pReq - place to put parsed information
// 2500  *
// 2501  * @return      none
// 2502  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2503 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock1178 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2504 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 2505   uint8 *msg;
// 2506 
// 2507   msg = inMsg->asdu;
        LCALL   ?Subroutine113 & 0xFFFF
// 2508   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_186:
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??sAddrExtCpy?relay
// 2509   msg += Z_EXTADDR_LEN;
        LCALL   ?Subroutine126 & 0xFFFF
// 2510   pReq->srcEndpoint = *msg++;
??CrossCallReturnLabel_517:
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_138:
        LCALL   ?Subroutine17 & 0xFFFF
// 2511   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_13:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine13 & 0xFFFF
// 2512   msg += 2;
// 2513   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_686:
        MOV     R0,A
        MOV     A,?V0 + 0
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_578:
        LCALL   ??Subroutine257_0 & 0xFFFF
??CrossCallReturnLabel_638:
        MOV     A,R0
        LCALL   ?Subroutine32 & 0xFFFF
// 2514   if ( pReq->dstAddress.addrMode == Addr64Bit )
??CrossCallReturnLabel_42:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseBindUnbindReq_0
// 2515   {
// 2516     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0 + 0
        ADD     A,#0xb
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2517     msg += Z_EXTADDR_LEN;
// 2518     pReq->dstEndpoint = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0x14
        LCALL   ??Subroutine256_0 & 0xFFFF
// 2519   }
??CrossCallReturnLabel_642:
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??CrossCallReturnLabel_207
// 2520   else
// 2521   {
// 2522     // copy group address
// 2523     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        LCALL   ?Subroutine91 & 0xFFFF
// 2524   }
??CrossCallReturnLabel_151:
        MOV     A,?V0 + 0
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_207:
        MOVX    @DPTR,A
// 2525 }
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock1178

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond1179 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1180 Using cfiCommon0
          CFI (cfiCond1180) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1180) CFA_SP SP+0
          CFI (cfiCond1180) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1181 Using cfiCommon1
          CFI (cfiPicker1181) NoFunction
          CFI (cfiPicker1181) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_658:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        RET
          CFI EndBlock cfiCond1179
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiPicker1181

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond1182 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_517
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function ZDO_ParseAddrRsp
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_518
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+0
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1184 Using cfiCommon1
          CFI (cfiPicker1184) NoFunction
          CFI (cfiPicker1184) Picker
        MOV     A,R6
        ADD     A,#0x8
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiPicker1184
        REQUIRE ??Subroutine241_0
        ; // Fall through to label ??Subroutine241_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine241_0:
          CFI Block cfiCond1185 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_519
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_520
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+0
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+0
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1188 Using cfiCommon0
          CFI (cfiCond1188) Function ZDO_ParseAddrRsp
          CFI (cfiCond1188) Conditional ??CrossCallReturnLabel_518
          CFI (cfiCond1188) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1188) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1188) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1188) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1188) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1188) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1188) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1188) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1188) CFA_SP SP+0
          CFI (cfiCond1188) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1189 Using cfiCommon1
          CFI (cfiPicker1189) NoFunction
          CFI (cfiPicker1189) Picker
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiCond1188
          CFI EndBlock cfiPicker1189

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond1190 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_185
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1191 Using cfiCommon0
          CFI (cfiCond1191) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1191) CFA_SP SP+0
          CFI (cfiCond1191) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1192 Using cfiCommon1
          CFI (cfiPicker1192) NoFunction
          CFI (cfiPicker1192) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_619:
        MOV     R7,A
        ; Setup parameters for call to function AddrMgrExtAddrValid
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        RET
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiPicker1192

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1193 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1194 Using cfiCommon0
          CFI (cfiCond1194) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1194) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond1194) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1194) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1194) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1194) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1194) CFA_SP SP+0
          CFI (cfiCond1194) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+0
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1196 Using cfiCommon1
          CFI (cfiPicker1196) NoFunction
          CFI (cfiPicker1196) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_287:
        MOV     R0,A
        RET
          CFI EndBlock cfiCond1193
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiPicker1196

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond1197 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_SP SP+0
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_SP SP+0
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1200 Using cfiCommon1
          CFI (cfiPicker1200) NoFunction
          CFI (cfiPicker1200) Picker
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiPicker1200
// 2526 
// 2527 /*********************************************************************
// 2528  * @fn      ZDO_ParseAddrRsp
// 2529  *
// 2530  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2531  *          structure.
// 2532  *
// 2533  * @param   inMsg - incoming message
// 2534  *
// 2535  * @return  pointer to parsed structures.  This structure was
// 2536  *          allocated using osal_mem_alloc, so it must be freed
// 2537  *          by the calling function [osal_mem_free()].
// 2538  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2539 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock1201 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2540 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 2541   ZDO_NwkIEEEAddrResp_t *rsp;
// 2542   uint8 *msg;
// 2543   byte cnt = 0;
        MOV     ?V0 + 2,#0x0
// 2544 
// 2545   // Calculate the number of items in the list
// 2546   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV     A,R6
        ADD     A,#0x10
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_377:
        CLR     C
        SUBB    A,#0xc
        JC      ??ZDO_ParseAddrRsp_0
// 2547   {
// 2548     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        LCALL   ?Subroutine112 & 0xFFFF
// 2549   }
??CrossCallReturnLabel_183:
        LCALL   ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_530:
        ADD     A,#0xb
        LCALL   ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV     ?V0 + 2,A
// 2550   else
// 2551   {
// 2552     cnt = 0;
// 2553   }
// 2554 
// 2555   // Make buffer
// 2556   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 2
        CLR     C
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R0
        ADD     A,#0xd
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2557 
// 2558   if ( rsp )
        MOV     A,R2
        ORL     A,?V0 + 1
        JZ      ??ZDO_ParseAddrRsp_1
// 2559   {
// 2560     msg = inMsg->asdu;
        LCALL   ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_581:
        MOV     A,R7
        LCALL   ??Subroutine253_0 & 0xFFFF
// 2561 
// 2562     rsp->status = *msg++;
??CrossCallReturnLabel_614:
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine52 & 0xFFFF
// 2563     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_84:
        JNZ     ??ZDO_ParseAddrRsp_1
// 2564     {
// 2565       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 2566       msg += Z_EXTADDR_LEN;
        LCALL   ?Subroutine126 & 0xFFFF
// 2567       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_518:
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_146:
        INC     DPTR
        LCALL   ?Subroutine39 & 0xFFFF
// 2568 
// 2569       msg += 2;
// 2570       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_58:
        ADD     A,#0xb
        LCALL   ?Subroutine134 & 0xFFFF
// 2571 
// 2572       // StartIndex field is only present if NumAssocDev field is non-zero.
// 2573       if ( cnt > 0 )
??CrossCallReturnLabel_524:
        MOV     A,?V0 + 2
        JZ      ??ZDO_ParseAddrRsp_1
// 2574       {
// 2575         uint16 *pList = &(rsp->devList[0]);
        MOV     A,?V0 + 0
        ADD     A,#0xd
        MOV     R0,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R1,A
// 2576         byte n = cnt;
// 2577 
// 2578         rsp->numAssocDevs = *msg++;
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xb
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_643:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine31 & 0xFFFF
// 2579         rsp->startIndex = *msg++;
??CrossCallReturnLabel_39:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xc
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_644:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
??CrossCallReturnLabel_43:
        MOV     ?V0 + 3,?V0 + 2
// 2580 
// 2581         while ( n != 0 )
// 2582         {
// 2583           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine43 & 0xFFFF
// 2584           msg += sizeof( uint16 );
??CrossCallReturnLabel_65:
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 2585           n--;
// 2586         }
        DEC     ?V0 + 3
        MOV     A,?V0 + 3
        JNZ     ??ZDO_ParseAddrRsp_2
// 2587       }
// 2588     }
// 2589   }
// 2590 
// 2591   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LJMP    ??Subroutine198_0 & 0xFFFF
          CFI EndBlock cfiBlock1201
// 2592 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond1202 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_522
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1203 Using cfiCommon0
          CFI (cfiCond1203) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1203) Conditional ??CrossCallReturnLabel_523
          CFI (cfiCond1203) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1203) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1203) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1203) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1203) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1203) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1203) CFA_SP SP+0
          CFI (cfiCond1203) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1204 Using cfiCommon0
          CFI (cfiCond1204) Function ZDO_ParseAddrRsp
          CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1204) CFA_SP SP+0
          CFI (cfiCond1204) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+0
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1206 Using cfiCommon1
          CFI (cfiPicker1206) NoFunction
          CFI (cfiPicker1206) Picker
        MOV     DPL,A
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond1202
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiPicker1206
        REQUIRE ??Subroutine242_0
        ; // Fall through to label ??Subroutine242_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine242_0:
          CFI Block cfiCond1207 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_521
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1208 Using cfiCommon0
          CFI (cfiCond1208) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_522
          CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1208) CFA_SP SP+0
          CFI (cfiCond1208) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1209 Using cfiCommon0
          CFI (cfiCond1209) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_523
          CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1209) CFA_SP SP+0
          CFI (cfiCond1209) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1210 Using cfiCommon0
          CFI (cfiCond1210) Function ZDO_ParseAddrRsp
          CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1210) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1210) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1210) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1210) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1210) CFA_SP SP+0
          CFI (cfiCond1210) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1211 Using cfiCommon0
          CFI (cfiCond1211) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1211) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1211) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1211) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1211) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1211) CFA_SP SP+0
          CFI (cfiCond1211) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1212 Using cfiCommon1
          CFI (cfiPicker1212) NoFunction
          CFI (cfiPicker1212) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_664:
        CLR     A
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiCond1208
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiPicker1212

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond1213 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_ParseAddrRsp
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1214) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+0
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1215 Using cfiCommon0
          CFI (cfiCond1215) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1215) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1215) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1215) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1215) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1215) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1215) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1215) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1215) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1215) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1215) CFA_SP SP+0
          CFI (cfiCond1215) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1216 Using cfiCommon1
          CFI (cfiPicker1216) NoFunction
          CFI (cfiPicker1216) Picker
        LCALL   ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_668:
        RET
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiCond1215
          CFI EndBlock cfiPicker1216

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine180:
          CFI Block cfiCond1217 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_283
          CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1218) CFA_SP SP+0
          CFI (cfiCond1218) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_182
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+0
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1220 Using cfiCommon0
          CFI (cfiCond1220) Function ZDO_ParseAddrRsp
          CFI (cfiCond1220) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_183
          CFI (cfiCond1220) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1220) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1220) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1220) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1220) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1220) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1220) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1220) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1220) CFA_SP SP+0
          CFI (cfiCond1220) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1221 Using cfiCommon0
          CFI (cfiCond1221) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1221) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_184
          CFI (cfiCond1221) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1221) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1221) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1221) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1221) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1221) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1221) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1221) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1221) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1221) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1221) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1221) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1221) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1221) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1221) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1221) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1221) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1221) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1221) CFA_SP SP+0
          CFI (cfiCond1221) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1222 Using cfiCommon1
          CFI (cfiPicker1222) NoFunction
          CFI (cfiPicker1222) Picker
        MOV     A,R6
        ADD     A,#0x13
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiCond1220
          CFI EndBlock cfiCond1221
          CFI EndBlock cfiPicker1222
        REQUIRE ??Subroutine243_0
        ; // Fall through to label ??Subroutine243_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine243_0:
          CFI Block cfiCond1223 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_20
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1224) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1224) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1224) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1224) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1224) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_SP SP+0
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1225 Using cfiCommon0
          CFI (cfiCond1225) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_15
          CFI (cfiCond1225) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1225) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1225) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1225) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1225) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1225) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1225) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1225) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1225) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1225) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1225) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1225) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1225) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1225) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1225) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1225) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1225) CFA_SP SP+0
          CFI (cfiCond1225) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1226 Using cfiCommon0
          CFI (cfiCond1226) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1226) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_16
          CFI (cfiCond1226) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1226) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1226) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1226) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1226) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1226) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1226) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1226) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1226) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1226) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1226) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1226) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1226) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1226) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1226) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1226) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1226) CFA_SP SP+0
          CFI (cfiCond1226) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1227 Using cfiCommon0
          CFI (cfiCond1227) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1227) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_282
          CFI (cfiCond1227) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1227) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1227) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1227) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1227) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1227) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1227) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1227) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1227) CFA_SP SP+0
          CFI (cfiCond1227) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1228 Using cfiCommon0
          CFI (cfiCond1228) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_283
          CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1228) CFA_SP SP+0
          CFI (cfiCond1228) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_182
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_SP SP+0
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDO_ParseAddrRsp
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_183
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+0
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_184
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_SP SP+0
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1232 Using cfiCommon1
          CFI (cfiPicker1232) NoFunction
          CFI (cfiPicker1232) Picker
        MOV     DPL,A
        MOV     A,R7
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiCond1225
          CFI EndBlock cfiCond1226
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiPicker1232
        REQUIRE ??Subroutine244_0
        ; // Fall through to label ??Subroutine244_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine244_0:
          CFI Block cfiCond1233 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_314
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_315
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1234) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1234) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1234) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1234) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1234) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1234) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1234) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_SP SP+0
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_313
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1235) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1235) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1235) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1235) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1235) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1235) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1235) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_SP SP+0
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1236 Using cfiCommon0
          CFI (cfiCond1236) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_311
          CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1236) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1236) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1236) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1236) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1236) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1236) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1236) CFA_SP SP+0
          CFI (cfiCond1236) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1237 Using cfiCommon0
          CFI (cfiCond1237) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_312
          CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1237) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1237) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1237) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1237) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1237) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1237) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1237) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1237) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1237) CFA_SP SP+0
          CFI (cfiCond1237) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_310
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_SP SP+0
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_320
          CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1239) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1239) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1239) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1239) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1239) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1239) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1239) CFA_SP SP+0
          CFI (cfiCond1239) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1240 Using cfiCommon0
          CFI (cfiCond1240) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_321
          CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1240) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1240) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1240) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1240) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1240) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1240) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1240) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1240) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1240) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1240) CFA_SP SP+0
          CFI (cfiCond1240) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_322
          CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1241) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1241) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1241) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1241) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1241) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1241) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1241) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1241) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1241) CFA_SP SP+0
          CFI (cfiCond1241) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_319
          CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1242) CFA_SP SP+0
          CFI (cfiCond1242) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1243 Using cfiCommon0
          CFI (cfiCond1243) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_392
          CFI (cfiCond1243) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1243) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1243) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1243) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1243) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1243) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1243) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1243) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1243) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1243) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1243) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1243) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1243) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1243) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1243) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1243) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1243) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1243) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1243) CFA_SP SP+0
          CFI (cfiCond1243) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1244 Using cfiCommon0
          CFI (cfiCond1244) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1244) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_393
          CFI (cfiCond1244) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1244) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1244) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1244) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1244) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1244) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1244) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1244) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1244) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1244) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1244) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1244) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1244) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1244) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1244) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1244) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1244) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1244) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1244) CFA_SP SP+0
          CFI (cfiCond1244) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1245 Using cfiCommon0
          CFI (cfiCond1245) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1245) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_394
          CFI (cfiCond1245) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1245) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1245) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1245) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1245) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1245) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1245) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1245) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1245) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1245) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1245) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1245) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1245) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1245) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1245) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1245) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1245) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1245) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1245) CFA_SP SP+0
          CFI (cfiCond1245) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1246 Using cfiCommon0
          CFI (cfiCond1246) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_390
          CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1246) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1246) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1246) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1246) CFA_SP SP+0
          CFI (cfiCond1246) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1247 Using cfiCommon0
          CFI (cfiCond1247) Function ZDMatchSendState
          CFI (cfiCond1247) Conditional ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_391
          CFI (cfiCond1247) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1247) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1247) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1247) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1247) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1247) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1247) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1247) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1247) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1247) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1247) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1247) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1247) CFA_SP SP+0
          CFI (cfiCond1247) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1248 Using cfiCommon0
          CFI (cfiCond1248) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1248) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_428
          CFI (cfiCond1248) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1248) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1248) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1248) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1248) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1248) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1248) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1248) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1248) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1248) CFA_SP SP+0
          CFI (cfiCond1248) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1249 Using cfiCommon0
          CFI (cfiCond1249) Function ZDMatchSendState
          CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_429
          CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1249) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1249) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1249) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1249) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1249) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1249) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1249) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1249) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1249) CFA_SP SP+0
          CFI (cfiCond1249) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1250 Using cfiCommon0
          CFI (cfiCond1250) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_427
          CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1250) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1250) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1250) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1250) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1250) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1250) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1250) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1250) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1250) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1250) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1250) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1250) CFA_SP SP+0
          CFI (cfiCond1250) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1251 Using cfiCommon0
          CFI (cfiCond1251) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_448
          CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1251) CFA_SP SP+0
          CFI (cfiCond1251) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1252 Using cfiCommon0
          CFI (cfiCond1252) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1252) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_449
          CFI (cfiCond1252) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1252) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1252) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1252) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1252) CFA_SP SP+0
          CFI (cfiCond1252) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1253 Using cfiCommon0
          CFI (cfiCond1253) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1253) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_450
          CFI (cfiCond1253) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1253) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1253) CFA_SP SP+-5
          CFI Block cfiCond1254 Using cfiCommon0
          CFI (cfiCond1254) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1254) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_451
          CFI (cfiCond1254) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1254) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1254) CFA_SP SP+-5
          CFI Block cfiCond1255 Using cfiCommon0
          CFI (cfiCond1255) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_452
          CFI (cfiCond1255) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1255) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1255) CFA_SP SP+-5
          CFI Block cfiCond1256 Using cfiCommon0
          CFI (cfiCond1256) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_453
          CFI (cfiCond1256) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1256) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1256) CFA_SP SP+-5
          CFI Block cfiCond1257 Using cfiCommon0
          CFI (cfiCond1257) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_454
          CFI (cfiCond1257) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1257) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1257) CFA_SP SP+-5
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_455
          CFI (cfiCond1258) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1258) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1258) CFA_SP SP+-5
          CFI Block cfiCond1259 Using cfiCommon0
          CFI (cfiCond1259) Function ZDO_CopyMatchInfo
          CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_446
          CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1259) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1259) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1259) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1259) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1259) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1259) CFA_SP SP+0
          CFI (cfiCond1259) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1260 Using cfiCommon0
          CFI (cfiCond1260) Function ZDO_CopyMatchInfo
          CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_447
          CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1260) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1260) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1260) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1260) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1260) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1260) CFA_SP SP+0
          CFI (cfiCond1260) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1261 Using cfiCommon0
          CFI (cfiCond1261) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_456
          CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1261) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1261) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1261) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1261) CFA_SP SP+0
          CFI (cfiCond1261) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1262 Using cfiCommon0
          CFI (cfiCond1262) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1262) Conditional ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_457
          CFI (cfiCond1262) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1262) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1262) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1262) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1262) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1262) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1262) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1262) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1262) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1262) CFA_SP SP+0
          CFI (cfiCond1262) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1263 Using cfiCommon0
          CFI (cfiCond1263) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1263) Conditional ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_142
          CFI (cfiCond1263) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1263) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1263) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1263) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1263) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1263) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1263) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1263) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1263) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1263) CFA_SP SP+0
          CFI (cfiCond1263) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1264 Using cfiCommon0
          CFI (cfiCond1264) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1264) Conditional ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_143
          CFI (cfiCond1264) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1264) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1264) CFA_SP SP+-5
          CFI Block cfiCond1265 Using cfiCommon0
          CFI (cfiCond1265) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1265) Conditional ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_140
          CFI (cfiCond1265) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1265) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1265) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1265) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1265) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1265) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1265) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1265) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1265) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1265) CFA_SP SP+0
          CFI (cfiCond1265) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1266 Using cfiCommon0
          CFI (cfiCond1266) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1266) Conditional ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_141
          CFI (cfiCond1266) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1266) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1266) CFA_SP SP+-5
          CFI Block cfiCond1267 Using cfiCommon0
          CFI (cfiCond1267) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1267) Conditional ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_155
          CFI (cfiCond1267) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1267) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1267) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1267) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1267) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1267) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1267) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1267) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1267) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1267) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1267) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1267) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1267) CFA_SP SP+0
          CFI (cfiCond1267) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1268 Using cfiCommon0
          CFI (cfiCond1268) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1268) Conditional ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_156
          CFI (cfiCond1268) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1268) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1268) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1268) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1268) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1268) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1268) CFA_SP SP+0
          CFI (cfiCond1268) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_206
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1269) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1269) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1269) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1269) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1269) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1269) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1269) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1269) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1269) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+0
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_207
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+0
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1271 Using cfiCommon0
          CFI (cfiCond1271) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1271) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_522
          CFI (cfiCond1271) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1271) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1271) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1271) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1271) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1271) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1271) CFA_SP SP+0
          CFI (cfiCond1271) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1272 Using cfiCommon0
          CFI (cfiCond1272) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1272) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_523
          CFI (cfiCond1272) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1272) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1272) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1272) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1272) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1272) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1272) CFA_SP SP+0
          CFI (cfiCond1272) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function ZDO_ParseAddrRsp
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_524
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1273) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+0
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1274 Using cfiCommon0
          CFI (cfiCond1274) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1274) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_525
          CFI (cfiCond1274) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1274) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1274) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1274) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1274) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1274) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1274) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1274) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1274) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1274) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1274) CFA_SP SP+0
          CFI (cfiCond1274) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1275 Using cfiCommon0
          CFI (cfiCond1275) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1275) Conditional ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_521
          CFI (cfiCond1275) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1275) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1275) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1275) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1275) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1275) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1275) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1275) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1275) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1275) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1275) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1275) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1275) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1275) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1275) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1275) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1275) CFA_SP SP+0
          CFI (cfiCond1275) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1276 Using cfiCommon0
          CFI (cfiCond1276) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1276) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_650
          CFI (cfiCond1276) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1276) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1276) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1276) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1276) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1276) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1276) CFA_SP SP+-1
          CFI (cfiCond1276) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1277 Using cfiCommon0
          CFI (cfiCond1277) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1277) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_651
          CFI (cfiCond1277) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1277) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1277) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1277) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1277) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1277) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1277) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1277) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1277) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1277) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1277) CFA_SP SP+-1
          CFI (cfiCond1277) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1278 Using cfiCommon0
          CFI (cfiCond1278) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1278) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_639
          CFI (cfiCond1278) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1278) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1278) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1278) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1278) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1278) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1278) CFA_SP SP+0
          CFI (cfiCond1278) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1279 Using cfiCommon0
          CFI (cfiCond1279) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_640
          CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1279) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1279) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1279) CFA_SP SP+-1
          CFI (cfiCond1279) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1280 Using cfiCommon0
          CFI (cfiCond1280) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1280) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_641
          CFI (cfiCond1280) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1280) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1280) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1280) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1280) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1280) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1280) CFA_SP SP+-1
          CFI (cfiCond1280) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1281 Using cfiCommon0
          CFI (cfiCond1281) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1281) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_642
          CFI (cfiCond1281) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1281) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1281) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1281) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1281) CFA_SP SP+-1
          CFI (cfiCond1281) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1282 Using cfiCommon0
          CFI (cfiCond1282) Function ZDO_ParseAddrRsp
          CFI (cfiCond1282) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_643
          CFI (cfiCond1282) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1282) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1282) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1282) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1282) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1282) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1282) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1282) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1282) CFA_SP SP+-1
          CFI (cfiCond1282) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1283 Using cfiCommon0
          CFI (cfiCond1283) Function ZDO_ParseAddrRsp
          CFI (cfiCond1283) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_644
          CFI (cfiCond1283) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1283) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1283) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1283) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1283) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1283) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1283) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1283) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1283) CFA_SP SP+-1
          CFI (cfiCond1283) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1284 Using cfiCommon0
          CFI (cfiCond1284) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1284) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_645
          CFI (cfiCond1284) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1284) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1284) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1284) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1284) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1284) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1284) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1284) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1284) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1284) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1284) CFA_SP SP+-1
          CFI (cfiCond1284) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1285 Using cfiCommon0
          CFI (cfiCond1285) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_646
          CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1285) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1285) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1285) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1285) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1285) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1285) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1285) CFA_SP SP+-1
          CFI (cfiCond1285) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_647
          CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1286) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1286) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1286) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1286) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1286) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1286) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1286) CFA_SP SP+-1
          CFI (cfiCond1286) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_648
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-1
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1288 Using cfiCommon0
          CFI (cfiCond1288) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1288) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_649
          CFI (cfiCond1288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1288) CFA_SP SP+-1
          CFI (cfiCond1288) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1289 Using cfiCommon0
          CFI (cfiCond1289) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1289) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_638
          CFI (cfiCond1289) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1289) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1289) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1289) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1289) CFA_SP SP+0
          CFI (cfiCond1289) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1290 Using cfiCommon0
          CFI (cfiCond1290) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1290) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_621
          CFI (cfiCond1290) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1290) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1290) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1290) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1290) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1290) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1290) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1290) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1290) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1290) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1290) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1290) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1290) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1290) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1290) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1290) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1290) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1290) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1290) CFA_SP SP+-1
          CFI (cfiCond1290) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1291 Using cfiCommon0
          CFI (cfiCond1291) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1291) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_622
          CFI (cfiCond1291) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1291) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1291) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1291) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1291) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1291) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1291) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1291) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1291) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1291) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1291) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1291) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1291) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1291) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1291) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1291) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1291) CFA_SP SP+0
          CFI (cfiCond1291) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1292 Using cfiCommon0
          CFI (cfiCond1292) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1292) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_623
          CFI (cfiCond1292) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1292) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1292) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1292) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1292) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1292) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1292) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1292) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1292) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1292) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1292) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1292) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1292) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1292) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1292) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1292) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1292) CFA_SP SP+-1
          CFI (cfiCond1292) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1293 Using cfiCommon0
          CFI (cfiCond1293) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1293) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_624
          CFI (cfiCond1293) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1293) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1293) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1293) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1293) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1293) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1293) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1293) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1293) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1293) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1293) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1293) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1293) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1293) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1293) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1293) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1293) CFA_SP SP+-1
          CFI (cfiCond1293) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1294 Using cfiCommon0
          CFI (cfiCond1294) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1294) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_625
          CFI (cfiCond1294) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1294) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1294) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1294) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1294) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1294) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1294) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1294) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1294) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1294) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1294) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1294) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1294) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1294) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1294) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1294) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1294) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1294) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1294) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1294) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1294) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1294) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1294) CFA_SP SP+-1
          CFI (cfiCond1294) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1295 Using cfiCommon0
          CFI (cfiCond1295) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1295) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_626
          CFI (cfiCond1295) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1295) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1295) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1295) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1295) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1295) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1295) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1295) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1295) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1295) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1295) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1295) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1295) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1295) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1295) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1295) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1295) CFA_SP SP+0
          CFI (cfiCond1295) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_627
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1296) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1296) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1296) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1296) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1296) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1296) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1296) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1296) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1296) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-1
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_628
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1297) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+0
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1298 Using cfiCommon0
          CFI (cfiCond1298) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1298) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_629
          CFI (cfiCond1298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1298) CFA_SP SP+0
          CFI (cfiCond1298) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1299 Using cfiCommon0
          CFI (cfiCond1299) Function ZDMatchSendState
          CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_630
          CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1299) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1299) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1299) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1299) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1299) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1299) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1299) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1299) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1299) CFA_SP SP+-1
          CFI (cfiCond1299) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function ZDMatchSendState
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_631
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1300) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1300) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+0
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1301 Using cfiCommon0
          CFI (cfiCond1301) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_632
          CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1301) CFA_SP SP+0
          CFI (cfiCond1301) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1302 Using cfiCommon0
          CFI (cfiCond1302) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1302) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_633
          CFI (cfiCond1302) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1302) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1302) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1302) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1302) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1302) CFA_SP SP+-1
          CFI (cfiCond1302) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1303 Using cfiCommon0
          CFI (cfiCond1303) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1303) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_634
          CFI (cfiCond1303) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1303) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1303) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1303) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1303) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1303) CFA_SP SP+-1
          CFI (cfiCond1303) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_635
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-1
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1305 Using cfiCommon0
          CFI (cfiCond1305) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1305) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_636
          CFI (cfiCond1305) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1305) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1305) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1305) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1305) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1305) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1305) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1305) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1305) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1305) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1305) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1305) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1305) CFA_SP SP+0
          CFI (cfiCond1305) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1306 Using cfiCommon0
          CFI (cfiCond1306) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1306) Conditional ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_637
          CFI (cfiCond1306) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1306) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1306) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1306) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1306) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1306) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1306) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1306) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1306) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1306) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1306) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1306) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1306) CFA_SP SP+-1
          CFI (cfiCond1306) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1307 Using cfiCommon0
          CFI (cfiCond1307) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1307) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_684
          CFI (cfiCond1307) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1307) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1307) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1307) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1307) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1307) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1307) CFA_SP SP+0
          CFI (cfiCond1307) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1308 Using cfiCommon0
          CFI (cfiCond1308) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1308) Conditional ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_685
          CFI (cfiCond1308) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1308) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1308) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1308) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1308) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1308) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1308) CFA_SP SP+0
          CFI (cfiCond1308) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1309 Using cfiCommon0
          CFI (cfiCond1309) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1309) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_187
          CFI (cfiCond1309) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1309) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1309) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1309) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1309) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1309) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1309) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1309) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1309) CFA_SP SP+0
          CFI (cfiCond1309) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1310 Using cfiCommon0
          CFI (cfiCond1310) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1310) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_188
          CFI (cfiCond1310) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1310) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1310) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1310) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1310) CFA_SP SP+0
          CFI (cfiCond1310) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1311 Using cfiCommon0
          CFI (cfiCond1311) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1311) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_19
          CFI (cfiCond1311) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1311) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1311) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1311) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1311) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1311) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1311) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1311) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1311) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1311) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1311) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1311) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1311) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1311) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1311) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1311) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1311) CFA_SP SP+0
          CFI (cfiCond1311) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1312 Using cfiCommon0
          CFI (cfiCond1312) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1312) Conditional ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_20
          CFI (cfiCond1312) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1312) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1312) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1312) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1312) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1312) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1312) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1312) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1312) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1312) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1312) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1312) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1312) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1312) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1312) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1312) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1312) CFA_SP SP+0
          CFI (cfiCond1312) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1313 Using cfiCommon0
          CFI (cfiCond1313) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_15
          CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1313) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1313) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1313) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1313) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1313) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1313) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1313) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1313) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1313) CFA_SP SP+0
          CFI (cfiCond1313) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1314 Using cfiCommon0
          CFI (cfiCond1314) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_16
          CFI (cfiCond1314) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1314) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1314) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1314) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1314) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1314) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1314) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1314) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1314) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1314) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1314) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1314) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1314) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1314) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1314) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1314) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1314) CFA_SP SP+0
          CFI (cfiCond1314) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_282
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1315) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1315) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+0
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1316 Using cfiCommon0
          CFI (cfiCond1316) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1316) Conditional ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_283
          CFI (cfiCond1316) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1316) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1316) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1316) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1316) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1316) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1316) CFA_SP SP+0
          CFI (cfiCond1316) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1317 Using cfiCommon0
          CFI (cfiCond1317) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1317) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_182
          CFI (cfiCond1317) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1317) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1317) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1317) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1317) CFA_SP SP+0
          CFI (cfiCond1317) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function ZDO_ParseAddrRsp
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_183
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+0
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1319 Using cfiCommon0
          CFI (cfiCond1319) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1319) Conditional ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_184
          CFI (cfiCond1319) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1319) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1319) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1319) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1319) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1319) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1319) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1319) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1319) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1319) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1319) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1319) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1319) CFA_SP SP+0
          CFI (cfiCond1319) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1320 Using cfiCommon1
          CFI (cfiPicker1320) NoFunction
          CFI (cfiPicker1320) Picker
        LCALL   ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_675:
        RET
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiCond1244
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiCond1247
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiCond1251
          CFI EndBlock cfiCond1252
          CFI EndBlock cfiCond1253
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiCond1256
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiCond1259
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiCond1262
          CFI EndBlock cfiCond1263
          CFI EndBlock cfiCond1264
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiCond1266
          CFI EndBlock cfiCond1267
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiCond1271
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiCond1274
          CFI EndBlock cfiCond1275
          CFI EndBlock cfiCond1276
          CFI EndBlock cfiCond1277
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiCond1280
          CFI EndBlock cfiCond1281
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiCond1283
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiCond1288
          CFI EndBlock cfiCond1289
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiCond1291
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiCond1293
          CFI EndBlock cfiCond1294
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiCond1298
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiCond1301
          CFI EndBlock cfiCond1302
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiCond1305
          CFI EndBlock cfiCond1306
          CFI EndBlock cfiCond1307
          CFI EndBlock cfiCond1308
          CFI EndBlock cfiCond1309
          CFI EndBlock cfiCond1310
          CFI EndBlock cfiCond1311
          CFI EndBlock cfiCond1312
          CFI EndBlock cfiCond1313
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiCond1316
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiCond1319
          CFI EndBlock cfiPicker1320

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine190:
          CFI Block cfiCond1321 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_671, ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_19
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1322 Using cfiCommon0
          CFI (cfiCond1322) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_671, ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_20
          CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1322) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1322) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1322) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1322) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1322) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1322) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1322) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1322) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1322) CFA_SP SP+0
          CFI (cfiCond1322) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1323 Using cfiCommon0
          CFI (cfiCond1323) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1323) Conditional ??CrossCallReturnLabel_671, ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_15
          CFI (cfiCond1323) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1323) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1323) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1323) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1323) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1323) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1323) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1323) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1323) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1323) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1323) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1323) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1323) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1323) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1323) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1323) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1323) CFA_SP SP+0
          CFI (cfiCond1323) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1324 Using cfiCommon0
          CFI (cfiCond1324) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1324) Conditional ??CrossCallReturnLabel_671, ??CrossCallReturnLabel_258, ??CrossCallReturnLabel_16
          CFI (cfiCond1324) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1324) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1324) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1324) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1324) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1324) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1324) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1324) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1324) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1324) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1324) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1324) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1324) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1324) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1324) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1324) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1324) CFA_SP SP+0
          CFI (cfiCond1324) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1325 Using cfiCommon0
          CFI (cfiCond1325) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_122
          CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1325) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1325) CFA_SP SP+0
          CFI (cfiCond1325) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1326 Using cfiCommon0
          CFI (cfiCond1326) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_475, ??CrossCallReturnLabel_123
          CFI (cfiCond1326) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1326) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1326) CFA_SP SP+-5
          CFI Block cfiCond1327 Using cfiCommon0
          CFI (cfiCond1327) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1327) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_120
          CFI (cfiCond1327) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1327) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1327) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1327) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1327) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1327) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1327) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1327) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1327) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1327) CFA_SP SP+0
          CFI (cfiCond1327) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1328 Using cfiCommon0
          CFI (cfiCond1328) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1328) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_474, ??CrossCallReturnLabel_121
          CFI (cfiCond1328) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1328) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1328) CFA_SP SP+-5
          CFI Block cfiCond1329 Using cfiCommon0
          CFI (cfiCond1329) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_118
          CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1329) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1329) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1329) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1329) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1329) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1329) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1329) CFA_SP SP+0
          CFI (cfiCond1329) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1330 Using cfiCommon0
          CFI (cfiCond1330) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1330) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_473, ??CrossCallReturnLabel_119
          CFI (cfiCond1330) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1330) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1330) CFA_SP SP+-5
          CFI Block cfiCond1331 Using cfiCommon0
          CFI (cfiCond1331) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1331) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_116
          CFI (cfiCond1331) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1331) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1331) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1331) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1331) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1331) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1331) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1331) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1331) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1331) CFA_SP SP+0
          CFI (cfiCond1331) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1332 Using cfiCommon0
          CFI (cfiCond1332) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_472, ??CrossCallReturnLabel_117
          CFI (cfiCond1332) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1332) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1332) CFA_SP SP+-5
          CFI Block cfiCond1333 Using cfiCommon0
          CFI (cfiCond1333) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1333) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_160
          CFI (cfiCond1333) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1333) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1333) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1333) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1333) CFA_SP SP+0
          CFI (cfiCond1333) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1334 Using cfiCommon0
          CFI (cfiCond1334) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1334) Conditional ??CrossCallReturnLabel_673, ??CrossCallReturnLabel_471, ??CrossCallReturnLabel_159
          CFI (cfiCond1334) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1334) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1334) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1334) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1334) CFA_SP SP+0
          CFI (cfiCond1334) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1335 Using cfiCommon0
          CFI (cfiCond1335) Function ZDMatchSendState
          CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_670, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_132
          CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1335) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1335) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1335) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1335) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1335) CFA_SP SP+0
          CFI (cfiCond1335) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1336 Using cfiCommon0
          CFI (cfiCond1336) Function ZDMatchSendState
          CFI (cfiCond1336) Conditional ??CrossCallReturnLabel_670, ??CrossCallReturnLabel_241, ??CrossCallReturnLabel_133
          CFI (cfiCond1336) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1336) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1336) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1336) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1336) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1336) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1336) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1336) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1336) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1336) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1336) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1336) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1336) CFA_SP SP+0
          CFI (cfiCond1336) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1337 Using cfiCommon0
          CFI (cfiCond1337) Function ZDMatchSendState
          CFI (cfiCond1337) Conditional ??CrossCallReturnLabel_670, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_130
          CFI (cfiCond1337) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1337) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1337) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1337) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1337) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1337) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1337) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1337) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1337) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1337) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1337) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1337) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1337) CFA_SP SP+0
          CFI (cfiCond1337) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1338 Using cfiCommon0
          CFI (cfiCond1338) Function ZDMatchSendState
          CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_670, ??CrossCallReturnLabel_240, ??CrossCallReturnLabel_131
          CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1338) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1338) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1338) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1338) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1338) CFA_SP SP+0
          CFI (cfiCond1338) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1339 Using cfiCommon0
          CFI (cfiCond1339) Function ZDO_CopyMatchInfo
          CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_672, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_204
          CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1339) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1339) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1339) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1339) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1339) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1339) CFA_SP SP+0
          CFI (cfiCond1339) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1340 Using cfiCommon0
          CFI (cfiCond1340) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1340) Conditional ??CrossCallReturnLabel_672, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_205
          CFI (cfiCond1340) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1340) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1340) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1340) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1340) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1340) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1340) CFA_SP SP+0
          CFI (cfiCond1340) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1341 Using cfiCommon0
          CFI (cfiCond1341) Function ZDO_CopyMatchInfo
          CFI (cfiCond1341) Conditional ??CrossCallReturnLabel_672, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_202
          CFI (cfiCond1341) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1341) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1341) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1341) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1341) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1341) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1341) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1341) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1341) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1341) CFA_SP SP+0
          CFI (cfiCond1341) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1342 Using cfiCommon0
          CFI (cfiCond1342) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_672, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_203
          CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1342) CFA_SP SP+0
          CFI (cfiCond1342) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_282
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+0
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_667, ??CrossCallReturnLabel_283
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+0
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1345 Using cfiCommon0
          CFI (cfiCond1345) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1345) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_182
          CFI (cfiCond1345) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1345) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1345) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1345) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1345) CFA_SP SP+0
          CFI (cfiCond1345) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1346 Using cfiCommon0
          CFI (cfiCond1346) Function ZDO_ParseAddrRsp
          CFI (cfiCond1346) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_183
          CFI (cfiCond1346) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1346) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1346) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1346) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1346) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1346) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1346) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1346) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1346) CFA_SP SP+0
          CFI (cfiCond1346) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_668, ??CrossCallReturnLabel_184
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+0
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1348 Using cfiCommon0
          CFI (cfiCond1348) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_19
          CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1348) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1348) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1348) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1348) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1348) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1348) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1348) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1348) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1348) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1348) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1348) CFA_SP SP+0
          CFI (cfiCond1348) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1349 Using cfiCommon0
          CFI (cfiCond1349) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_666, ??CrossCallReturnLabel_20
          CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1349) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1349) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1349) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1349) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1349) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1349) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1349) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1349) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1349) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1349) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1349) CFA_SP SP+0
          CFI (cfiCond1349) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1350 Using cfiCommon0
          CFI (cfiCond1350) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_15
          CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1350) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1350) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1350) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1350) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1350) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1350) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1350) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1350) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1350) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1350) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1350) CFA_SP SP+0
          CFI (cfiCond1350) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1351 Using cfiCommon0
          CFI (cfiCond1351) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_665, ??CrossCallReturnLabel_16
          CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1351) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1351) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1351) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1351) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1351) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1351) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1351) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1351) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1351) CFA_SP SP+0
          CFI (cfiCond1351) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1352 Using cfiCommon0
          CFI (cfiCond1352) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_314
          CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1352) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1352) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1352) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1352) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1352) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1352) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1352) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1352) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1352) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1352) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1352) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1352) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1352) CFA_SP SP+0
          CFI (cfiCond1352) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_315
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1353) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1353) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1353) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1353) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+0
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1354 Using cfiCommon0
          CFI (cfiCond1354) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1354) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_313
          CFI (cfiCond1354) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1354) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1354) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1354) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1354) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1354) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1354) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1354) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1354) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1354) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1354) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1354) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1354) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1354) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1354) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1354) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1354) CFA_SP SP+0
          CFI (cfiCond1354) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1355 Using cfiCommon0
          CFI (cfiCond1355) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1355) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_311
          CFI (cfiCond1355) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1355) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1355) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1355) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1355) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1355) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1355) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1355) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1355) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1355) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1355) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1355) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1355) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1355) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1355) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1355) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1355) CFA_SP SP+0
          CFI (cfiCond1355) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1356 Using cfiCommon0
          CFI (cfiCond1356) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1356) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_312
          CFI (cfiCond1356) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1356) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1356) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1356) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1356) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1356) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1356) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1356) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1356) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1356) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1356) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1356) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1356) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1356) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1356) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1356) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1356) CFA_SP SP+0
          CFI (cfiCond1356) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1357 Using cfiCommon0
          CFI (cfiCond1357) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1357) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_310
          CFI (cfiCond1357) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1357) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1357) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1357) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1357) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1357) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1357) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1357) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1357) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1357) CFA_SP SP+0
          CFI (cfiCond1357) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_320
          CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1358) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1358) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1358) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1358) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1358) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1358) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1358) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1358) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1358) CFA_SP SP+0
          CFI (cfiCond1358) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_321
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+0
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1360 Using cfiCommon0
          CFI (cfiCond1360) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1360) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_322
          CFI (cfiCond1360) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1360) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1360) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1360) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1360) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1360) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1360) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1360) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1360) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1360) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1360) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1360) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1360) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1360) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1360) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1360) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1360) CFA_SP SP+0
          CFI (cfiCond1360) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1361 Using cfiCommon0
          CFI (cfiCond1361) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_660, ??CrossCallReturnLabel_319
          CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1361) CFA_SP SP+0
          CFI (cfiCond1361) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1362 Using cfiCommon0
          CFI (cfiCond1362) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1362) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_392
          CFI (cfiCond1362) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1362) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1362) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1362) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1362) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1362) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1362) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1362) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1362) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1362) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1362) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1362) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1362) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1362) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1362) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1362) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1362) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1362) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1362) CFA_SP SP+0
          CFI (cfiCond1362) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1363 Using cfiCommon0
          CFI (cfiCond1363) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1363) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_393
          CFI (cfiCond1363) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1363) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1363) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1363) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1363) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1363) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1363) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1363) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1363) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1363) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1363) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1363) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1363) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1363) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1363) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1363) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1363) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1363) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1363) CFA_SP SP+0
          CFI (cfiCond1363) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1364 Using cfiCommon0
          CFI (cfiCond1364) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_394
          CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1364) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1364) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1364) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1364) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1364) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1364) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1364) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1364) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1364) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1364) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1364) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1364) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1364) CFA_SP SP+0
          CFI (cfiCond1364) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1365 Using cfiCommon0
          CFI (cfiCond1365) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1365) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_390
          CFI (cfiCond1365) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1365) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1365) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1365) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1365) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1365) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1365) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1365) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1365) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1365) CFA_SP SP+0
          CFI (cfiCond1365) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1366 Using cfiCommon0
          CFI (cfiCond1366) Function ZDMatchSendState
          CFI (cfiCond1366) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_661, ??CrossCallReturnLabel_391
          CFI (cfiCond1366) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1366) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1366) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1366) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1366) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1366) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1366) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1366) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1366) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1366) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1366) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1366) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1366) CFA_SP SP+0
          CFI (cfiCond1366) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1367 Using cfiCommon0
          CFI (cfiCond1367) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1367) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_428
          CFI (cfiCond1367) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1367) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1367) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1367) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1367) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1367) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1367) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1367) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1367) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1367) CFA_SP SP+0
          CFI (cfiCond1367) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1368 Using cfiCommon0
          CFI (cfiCond1368) Function ZDMatchSendState
          CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_429
          CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1368) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1368) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1368) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1368) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1368) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1368) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1368) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1368) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1368) CFA_SP SP+0
          CFI (cfiCond1368) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_662, ??CrossCallReturnLabel_427
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1369) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+0
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1370 Using cfiCommon0
          CFI (cfiCond1370) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1370) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_448
          CFI (cfiCond1370) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1370) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1370) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1370) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1370) CFA_SP SP+0
          CFI (cfiCond1370) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1371 Using cfiCommon0
          CFI (cfiCond1371) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1371) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_449
          CFI (cfiCond1371) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1371) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1371) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1371) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1371) CFA_SP SP+0
          CFI (cfiCond1371) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1372 Using cfiCommon0
          CFI (cfiCond1372) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_450
          CFI (cfiCond1372) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1372) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1372) CFA_SP SP+-5
          CFI Block cfiCond1373 Using cfiCommon0
          CFI (cfiCond1373) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1373) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_451
          CFI (cfiCond1373) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1373) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1373) CFA_SP SP+-5
          CFI Block cfiCond1374 Using cfiCommon0
          CFI (cfiCond1374) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1374) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_452
          CFI (cfiCond1374) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1374) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1374) CFA_SP SP+-5
          CFI Block cfiCond1375 Using cfiCommon0
          CFI (cfiCond1375) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_453
          CFI (cfiCond1375) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1375) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1375) CFA_SP SP+-5
          CFI Block cfiCond1376 Using cfiCommon0
          CFI (cfiCond1376) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_454
          CFI (cfiCond1376) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1376) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1376) CFA_SP SP+-5
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_455
          CFI (cfiCond1377) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1377) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1377) CFA_SP SP+-5
          CFI Block cfiCond1378 Using cfiCommon0
          CFI (cfiCond1378) Function ZDO_CopyMatchInfo
          CFI (cfiCond1378) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_446
          CFI (cfiCond1378) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1378) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1378) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1378) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1378) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1378) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1378) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1378) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1378) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1378) CFA_SP SP+0
          CFI (cfiCond1378) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1379 Using cfiCommon0
          CFI (cfiCond1379) Function ZDO_CopyMatchInfo
          CFI (cfiCond1379) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_663, ??CrossCallReturnLabel_447
          CFI (cfiCond1379) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1379) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1379) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1379) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1379) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1379) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1379) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1379) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1379) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1379) CFA_SP SP+0
          CFI (cfiCond1379) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond1380 Using cfiCommon0
          CFI (cfiCond1380) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_456
          CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1380) CFA_SP SP+0
          CFI (cfiCond1380) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1381 Using cfiCommon0
          CFI (cfiCond1381) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1381) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_652, ??CrossCallReturnLabel_457
          CFI (cfiCond1381) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1381) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1381) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1381) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1381) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1381) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1381) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1381) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1381) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1381) CFA_SP SP+0
          CFI (cfiCond1381) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1382 Using cfiCommon0
          CFI (cfiCond1382) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1382) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_142
          CFI (cfiCond1382) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1382) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1382) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1382) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1382) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1382) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1382) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1382) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1382) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1382) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1382) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1382) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1382) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1382) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1382) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1382) CFA_SP SP+0
          CFI (cfiCond1382) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_654, ??CrossCallReturnLabel_143
          CFI (cfiCond1383) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1383) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1383) CFA_SP SP+-5
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_140
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1384) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1384) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_SP SP+0
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 27)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_653, ??CrossCallReturnLabel_141
          CFI (cfiCond1385) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1385) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1385) CFA_SP SP+-5
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_155
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1386) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_SP SP+0
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_655, ??CrossCallReturnLabel_156
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_SP SP+0
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1388 Using cfiCommon0
          CFI (cfiCond1388) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1388) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_206
          CFI (cfiCond1388) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1388) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1388) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1388) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1388) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1388) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1388) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1388) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1388) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1388) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1388) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1388) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1388) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1388) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1388) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1388) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1388) CFA_SP SP+0
          CFI (cfiCond1388) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1389 Using cfiCommon0
          CFI (cfiCond1389) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1389) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_207
          CFI (cfiCond1389) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1389) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1389) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1389) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1389) CFA_SP SP+0
          CFI (cfiCond1389) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_522
          CFI (cfiCond1390) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1390) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1390) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1390) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1390) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1390) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1390) CFA_SP SP+0
          CFI (cfiCond1390) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_523
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+0
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1392 Using cfiCommon0
          CFI (cfiCond1392) Function ZDO_ParseAddrRsp
          CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_524
          CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1392) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1392) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1392) CFA_SP SP+0
          CFI (cfiCond1392) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1393 Using cfiCommon0
          CFI (cfiCond1393) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1393) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_525
          CFI (cfiCond1393) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1393) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1393) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1393) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1393) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1393) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1393) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1393) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1393) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1393) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1393) CFA_SP SP+0
          CFI (cfiCond1393) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1394 Using cfiCommon0
          CFI (cfiCond1394) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1394) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_664, ??CrossCallReturnLabel_521
          CFI (cfiCond1394) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1394) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1394) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1394) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1394) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1394) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1394) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1394) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1394) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1394) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1394) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1394) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1394) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1394) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1394) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1394) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1394) CFA_SP SP+0
          CFI (cfiCond1394) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_650
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-1
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1396 Using cfiCommon0
          CFI (cfiCond1396) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_651
          CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1396) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1396) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1396) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1396) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1396) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1396) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1396) CFA_SP SP+-1
          CFI (cfiCond1396) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1397 Using cfiCommon0
          CFI (cfiCond1397) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1397) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_639
          CFI (cfiCond1397) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1397) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1397) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1397) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1397) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1397) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1397) CFA_SP SP+0
          CFI (cfiCond1397) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_640
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-1
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_641
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-1
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1400 Using cfiCommon0
          CFI (cfiCond1400) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_642
          CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1400) CFA_SP SP+-1
          CFI (cfiCond1400) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1401 Using cfiCommon0
          CFI (cfiCond1401) Function ZDO_ParseAddrRsp
          CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_643
          CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1401) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1401) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1401) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1401) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1401) CFA_SP SP+-1
          CFI (cfiCond1401) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function ZDO_ParseAddrRsp
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_644
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1402) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-1
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_645
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-1
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_646
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1404) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1404) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1404) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-1
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_647
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1405) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1405) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1405) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-1
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_648
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1406) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1406) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1406) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-1
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_649
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-1
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1408 Using cfiCommon0
          CFI (cfiCond1408) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1408) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_638
          CFI (cfiCond1408) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1408) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1408) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1408) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1408) CFA_SP SP+0
          CFI (cfiCond1408) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1409 Using cfiCommon0
          CFI (cfiCond1409) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1409) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_621
          CFI (cfiCond1409) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1409) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1409) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1409) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1409) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1409) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1409) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1409) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1409) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1409) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1409) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1409) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1409) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1409) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1409) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1409) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1409) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1409) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1409) CFA_SP SP+-1
          CFI (cfiCond1409) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_622
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+0
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1411 Using cfiCommon0
          CFI (cfiCond1411) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1411) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_623
          CFI (cfiCond1411) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1411) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1411) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1411) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1411) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1411) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1411) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1411) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1411) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1411) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1411) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1411) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1411) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1411) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1411) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1411) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1411) CFA_SP SP+-1
          CFI (cfiCond1411) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1412 Using cfiCommon0
          CFI (cfiCond1412) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1412) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_624
          CFI (cfiCond1412) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1412) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1412) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1412) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1412) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1412) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1412) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1412) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1412) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1412) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1412) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1412) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1412) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1412) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1412) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1412) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1412) CFA_SP SP+-1
          CFI (cfiCond1412) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1413 Using cfiCommon0
          CFI (cfiCond1413) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1413) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_625
          CFI (cfiCond1413) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1413) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1413) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1413) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1413) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1413) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1413) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1413) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1413) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1413) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1413) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1413) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1413) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1413) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1413) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1413) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1413) CFA_SP SP+-1
          CFI (cfiCond1413) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1414 Using cfiCommon0
          CFI (cfiCond1414) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1414) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_626
          CFI (cfiCond1414) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1414) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1414) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1414) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1414) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1414) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1414) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1414) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1414) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1414) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1414) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1414) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1414) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1414) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1414) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1414) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1414) CFA_SP SP+0
          CFI (cfiCond1414) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_627
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1415) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1415) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1415) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1415) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1415) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1415) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1415) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1415) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1415) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-1
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1416 Using cfiCommon0
          CFI (cfiCond1416) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_628
          CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1416) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1416) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1416) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1416) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1416) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1416) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1416) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1416) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1416) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1416) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1416) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1416) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1416) CFA_SP SP+0
          CFI (cfiCond1416) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1417 Using cfiCommon0
          CFI (cfiCond1417) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_629
          CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1417) CFA_SP SP+0
          CFI (cfiCond1417) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1418 Using cfiCommon0
          CFI (cfiCond1418) Function ZDMatchSendState
          CFI (cfiCond1418) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_630
          CFI (cfiCond1418) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1418) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1418) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1418) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1418) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1418) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1418) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1418) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1418) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1418) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1418) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1418) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1418) CFA_SP SP+-1
          CFI (cfiCond1418) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1419 Using cfiCommon0
          CFI (cfiCond1419) Function ZDMatchSendState
          CFI (cfiCond1419) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_631
          CFI (cfiCond1419) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1419) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1419) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1419) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1419) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1419) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1419) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1419) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1419) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1419) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1419) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1419) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1419) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1419) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1419) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1419) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1419) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1419) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1419) CFA_SP SP+0
          CFI (cfiCond1419) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1420 Using cfiCommon0
          CFI (cfiCond1420) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1420) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_632
          CFI (cfiCond1420) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1420) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1420) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1420) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1420) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1420) CFA_SP SP+0
          CFI (cfiCond1420) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1421 Using cfiCommon0
          CFI (cfiCond1421) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1421) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_633
          CFI (cfiCond1421) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1421) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1421) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1421) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1421) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1421) CFA_SP SP+-1
          CFI (cfiCond1421) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1422 Using cfiCommon0
          CFI (cfiCond1422) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_634
          CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1422) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1422) CFA_SP SP+-1
          CFI (cfiCond1422) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1423 Using cfiCommon0
          CFI (cfiCond1423) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1423) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_635
          CFI (cfiCond1423) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1423) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1423) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1423) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1423) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1423) CFA_SP SP+-1
          CFI (cfiCond1423) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1424 Using cfiCommon0
          CFI (cfiCond1424) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1424) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_636
          CFI (cfiCond1424) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1424) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1424) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1424) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1424) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1424) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1424) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1424) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1424) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1424) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1424) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1424) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1424) CFA_SP SP+0
          CFI (cfiCond1424) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_669, ??CrossCallReturnLabel_637
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1425) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1425) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1425) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1425) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1425) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-1
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1426 Using cfiCommon0
          CFI (cfiCond1426) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1426) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_684
          CFI (cfiCond1426) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1426) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1426) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1426) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1426) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1426) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1426) CFA_SP SP+0
          CFI (cfiCond1426) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1427 Using cfiCommon0
          CFI (cfiCond1427) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1427) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_656, ??CrossCallReturnLabel_685
          CFI (cfiCond1427) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1427) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1427) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1427) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1427) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1427) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1427) CFA_SP SP+0
          CFI (cfiCond1427) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1428 Using cfiCommon0
          CFI (cfiCond1428) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1428) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_187
          CFI (cfiCond1428) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1428) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1428) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1428) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1428) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1428) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1428) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1428) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1428) CFA_SP SP+0
          CFI (cfiCond1428) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1429 Using cfiCommon0
          CFI (cfiCond1429) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1429) Conditional ??CrossCallReturnLabel_675, ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_188
          CFI (cfiCond1429) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1429) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1429) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1429) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1429) CFA_SP SP+0
          CFI (cfiCond1429) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1430 Using cfiCommon0
          CFI (cfiCond1430) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1430) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI (cfiCond1430) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1430) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1430) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1430) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1430) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1430) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1430) CFA_SP SP+0
          CFI (cfiCond1430) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1431 Using cfiCommon0
          CFI (cfiCond1431) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1431) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1431) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1431) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1431) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1431) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1431) CFA_SP SP+0
          CFI (cfiCond1431) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1432 Using cfiCommon0
          CFI (cfiCond1432) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1432) CFA_SP SP+0
          CFI (cfiCond1432) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1433 Using cfiCommon0
          CFI (cfiCond1433) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1433) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1433) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1433) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1433) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1433) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1433) CFA_SP SP+0
          CFI (cfiCond1433) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1434 Using cfiCommon0
          CFI (cfiCond1434) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1434) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_611
          CFI (cfiCond1434) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1434) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1434) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1434) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1434) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1434) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1434) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1434) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1434) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1434) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1434) CFA_SP SP+0
          CFI (cfiCond1434) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1435 Using cfiCommon0
          CFI (cfiCond1435) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1435) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_612
          CFI (cfiCond1435) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1435) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1435) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1435) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1435) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1435) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1435) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1435) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1435) CFA_SP SP+0
          CFI (cfiCond1435) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1436 Using cfiCommon0
          CFI (cfiCond1436) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1436) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_613
          CFI (cfiCond1436) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1436) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1436) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1436) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1436) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1436) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1436) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1436) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1436) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1436) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1436) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1436) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1436) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1436) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1436) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1436) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1436) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1436) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1436) CFA_SP SP+0
          CFI (cfiCond1436) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1437 Using cfiCommon0
          CFI (cfiCond1437) Function ZDO_ParseAddrRsp
          CFI (cfiCond1437) Conditional ??CrossCallReturnLabel_674, ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_614
          CFI (cfiCond1437) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1437) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1437) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1437) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1437) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1437) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1437) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1437) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1437) CFA_SP SP+0
          CFI (cfiCond1437) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1438 Using cfiCommon1
          CFI (cfiPicker1438) NoFunction
          CFI (cfiPicker1438) Picker
        ADDC    A,#0x0
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiCond1323
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiCond1325
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiCond1327
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiCond1330
          CFI EndBlock cfiCond1331
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiCond1333
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiCond1336
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiCond1338
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiCond1340
          CFI EndBlock cfiCond1341
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiCond1345
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiCond1348
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiCond1350
          CFI EndBlock cfiCond1351
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiCond1354
          CFI EndBlock cfiCond1355
          CFI EndBlock cfiCond1356
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiCond1360
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiCond1362
          CFI EndBlock cfiCond1363
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiCond1365
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiCond1367
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiCond1370
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiCond1372
          CFI EndBlock cfiCond1373
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiCond1375
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiCond1378
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiCond1381
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiCond1388
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiCond1393
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiCond1396
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiCond1400
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiCond1408
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiCond1411
          CFI EndBlock cfiCond1412
          CFI EndBlock cfiCond1413
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiCond1416
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiCond1418
          CFI EndBlock cfiCond1419
          CFI EndBlock cfiCond1420
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiCond1422
          CFI EndBlock cfiCond1423
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiCond1426
          CFI EndBlock cfiCond1427
          CFI EndBlock cfiCond1428
          CFI EndBlock cfiCond1429
          CFI EndBlock cfiCond1430
          CFI EndBlock cfiCond1431
          CFI EndBlock cfiCond1432
          CFI EndBlock cfiCond1433
          CFI EndBlock cfiCond1434
          CFI EndBlock cfiCond1435
          CFI EndBlock cfiCond1436
          CFI EndBlock cfiCond1437
          CFI EndBlock cfiPicker1438

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond1439 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_531
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1440 Using cfiCommon0
          CFI (cfiCond1440) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1440) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1440) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1440) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1440) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1440) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1440) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1440) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1440) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1440) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1440) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1440) CFA_SP SP+0
          CFI (cfiCond1440) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1441 Using cfiCommon0
          CFI (cfiCond1441) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1441) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1441) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1441) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1441) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1441) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1441) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1441) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1441) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1441) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1441) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1441) CFA_SP SP+0
          CFI (cfiCond1441) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1442 Using cfiCommon0
          CFI (cfiCond1442) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1442) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond1442) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1442) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1442) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1442) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1442) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1442) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1442) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1442) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1442) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1442) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1442) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1442) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1442) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1442) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1442) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1442) CFA_SP SP+0
          CFI (cfiCond1442) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1443 Using cfiCommon0
          CFI (cfiCond1443) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1443) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1443) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1443) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1443) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1443) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1443) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1443) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1443) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1443) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1443) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1443) CFA_SP SP+0
          CFI (cfiCond1443) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1444 Using cfiCommon0
          CFI (cfiCond1444) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1444) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond1444) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1444) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1444) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1444) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1444) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1444) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1444) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1444) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1444) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1444) CFA_SP SP+0
          CFI (cfiCond1444) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1445 Using cfiCommon0
          CFI (cfiCond1445) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1445) Conditional ??CrossCallReturnLabel_537
          CFI (cfiCond1445) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1445) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1445) CFA_SP SP+-5
          CFI Block cfiCond1446 Using cfiCommon0
          CFI (cfiCond1446) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_538
          CFI (cfiCond1446) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1446) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1446) CFA_SP SP+-5
          CFI Block cfiCond1447 Using cfiCommon0
          CFI (cfiCond1447) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1447) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1447) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1447) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1447) CFA_SP SP+-5
          CFI Block cfiCond1448 Using cfiCommon0
          CFI (cfiCond1448) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1448) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond1448) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1448) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1448) CFA_SP SP+-5
          CFI Block cfiCond1449 Using cfiCommon0
          CFI (cfiCond1449) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1449) Conditional ??CrossCallReturnLabel_541
          CFI (cfiCond1449) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1449) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1449) CFA_SP SP+-5
          CFI Block cfiCond1450 Using cfiCommon0
          CFI (cfiCond1450) Function ZDMatchSendState
          CFI (cfiCond1450) Conditional ??CrossCallReturnLabel_542
          CFI (cfiCond1450) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1450) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1450) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1450) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1450) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1450) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1450) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1450) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1450) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1450) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1450) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1450) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1450) CFA_SP SP+0
          CFI (cfiCond1450) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1451 Using cfiCommon0
          CFI (cfiCond1451) Function ZDMatchSendState
          CFI (cfiCond1451) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond1451) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1451) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1451) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1451) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1451) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1451) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1451) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1451) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1451) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1451) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1451) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1451) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1451) CFA_SP SP+-1
          CFI (cfiCond1451) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1452 Using cfiCommon0
          CFI (cfiCond1452) Function ZDMatchSendState
          CFI (cfiCond1452) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond1452) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1452) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1452) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1452) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1452) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1452) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1452) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1452) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1452) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1452) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1452) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1452) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1452) CFA_SP SP+0
          CFI (cfiCond1452) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1453 Using cfiCommon1
          CFI (cfiPicker1453) NoFunction
          CFI (cfiPicker1453) Picker
        MOV     DPTR,#matchED
          CFI EndBlock cfiCond1439
          CFI EndBlock cfiCond1440
          CFI EndBlock cfiCond1441
          CFI EndBlock cfiCond1442
          CFI EndBlock cfiCond1443
          CFI EndBlock cfiCond1444
          CFI EndBlock cfiCond1445
          CFI EndBlock cfiCond1446
          CFI EndBlock cfiCond1447
          CFI EndBlock cfiCond1448
          CFI EndBlock cfiCond1449
          CFI EndBlock cfiCond1450
          CFI EndBlock cfiCond1451
          CFI EndBlock cfiCond1452
          CFI EndBlock cfiPicker1453
        REQUIRE ??Subroutine245_0
        ; // Fall through to label ??Subroutine245_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine245_0:
          CFI Block cfiCond1454 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_526
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1455 Using cfiCommon0
          CFI (cfiCond1455) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1455) CFA_SP SP+0
          CFI (cfiCond1455) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1456 Using cfiCommon0
          CFI (cfiCond1456) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1456) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond1456) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1456) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1456) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1456) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1456) CFA_SP SP+0
          CFI (cfiCond1456) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1457 Using cfiCommon0
          CFI (cfiCond1457) Function ZDMatchSendState
          CFI (cfiCond1457) Conditional ??CrossCallReturnLabel_529
          CFI (cfiCond1457) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1457) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1457) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1457) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1457) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1457) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1457) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1457) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1457) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1457) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1457) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1457) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1457) CFA_SP SP+0
          CFI (cfiCond1457) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1458 Using cfiCommon0
          CFI (cfiCond1458) Function ZDO_ParseAddrRsp
          CFI (cfiCond1458) Conditional ??CrossCallReturnLabel_530
          CFI (cfiCond1458) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1458) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1458) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1458) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1458) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1458) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1458) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1458) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1458) CFA_SP SP+0
          CFI (cfiCond1458) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1459 Using cfiCommon0
          CFI (cfiCond1459) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1459) Conditional ??CrossCallReturnLabel_531
          CFI (cfiCond1459) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1459) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1459) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1459) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1459) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1459) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1459) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1459) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1459) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1459) CFA_SP SP+0
          CFI (cfiCond1459) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1460 Using cfiCommon0
          CFI (cfiCond1460) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1460) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond1460) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1460) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1460) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1460) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1460) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1460) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1460) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1460) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1460) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1460) CFA_SP SP+0
          CFI (cfiCond1460) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1461 Using cfiCommon0
          CFI (cfiCond1461) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1461) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond1461) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1461) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1461) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1461) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1461) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1461) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1461) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1461) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1461) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1461) CFA_SP SP+0
          CFI (cfiCond1461) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1462 Using cfiCommon0
          CFI (cfiCond1462) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1462) Conditional ??CrossCallReturnLabel_534
          CFI (cfiCond1462) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1462) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1462) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1462) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1462) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1462) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1462) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1462) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1462) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1462) CFA_SP SP+0
          CFI (cfiCond1462) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1463 Using cfiCommon0
          CFI (cfiCond1463) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1463) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond1463) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1463) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1463) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1463) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1463) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1463) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1463) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1463) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1463) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1463) CFA_SP SP+0
          CFI (cfiCond1463) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1464 Using cfiCommon0
          CFI (cfiCond1464) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1464) Conditional ??CrossCallReturnLabel_536
          CFI (cfiCond1464) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1464) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1464) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1464) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1464) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1464) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1464) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1464) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1464) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1464) CFA_SP SP+0
          CFI (cfiCond1464) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1465 Using cfiCommon0
          CFI (cfiCond1465) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_537
          CFI (cfiCond1465) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1465) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1465) CFA_SP SP+-5
          CFI Block cfiCond1466 Using cfiCommon0
          CFI (cfiCond1466) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1466) Conditional ??CrossCallReturnLabel_538
          CFI (cfiCond1466) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1466) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1466) CFA_SP SP+-5
          CFI Block cfiCond1467 Using cfiCommon0
          CFI (cfiCond1467) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1467) Conditional ??CrossCallReturnLabel_539
          CFI (cfiCond1467) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1467) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1467) CFA_SP SP+-5
          CFI Block cfiCond1468 Using cfiCommon0
          CFI (cfiCond1468) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1468) Conditional ??CrossCallReturnLabel_540
          CFI (cfiCond1468) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1468) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1468) CFA_SP SP+-5
          CFI Block cfiCond1469 Using cfiCommon0
          CFI (cfiCond1469) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1469) Conditional ??CrossCallReturnLabel_541
          CFI (cfiCond1469) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1469) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1469) CFA_SP SP+-5
          CFI Block cfiCond1470 Using cfiCommon0
          CFI (cfiCond1470) Function ZDMatchSendState
          CFI (cfiCond1470) Conditional ??CrossCallReturnLabel_542
          CFI (cfiCond1470) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1470) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1470) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1470) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1470) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1470) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1470) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1470) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1470) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1470) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1470) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1470) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1470) CFA_SP SP+0
          CFI (cfiCond1470) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1471 Using cfiCommon0
          CFI (cfiCond1471) Function ZDMatchSendState
          CFI (cfiCond1471) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond1471) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1471) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1471) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1471) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1471) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1471) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1471) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1471) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1471) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1471) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1471) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1471) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1471) CFA_SP SP+-1
          CFI (cfiCond1471) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1472 Using cfiCommon0
          CFI (cfiCond1472) Function ZDMatchSendState
          CFI (cfiCond1472) Conditional ??CrossCallReturnLabel_544
          CFI (cfiCond1472) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1472) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1472) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1472) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1472) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1472) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1472) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1472) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1472) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1472) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1472) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1472) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1472) CFA_SP SP+0
          CFI (cfiCond1472) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker1473 Using cfiCommon1
          CFI (cfiPicker1473) NoFunction
          CFI (cfiPicker1473) Picker
        LCALL   ??Subroutine234_0 & 0xFFFF
??CrossCallReturnLabel_554:
        RET
          CFI EndBlock cfiCond1454
          CFI EndBlock cfiCond1455
          CFI EndBlock cfiCond1456
          CFI EndBlock cfiCond1457
          CFI EndBlock cfiCond1458
          CFI EndBlock cfiCond1459
          CFI EndBlock cfiCond1460
          CFI EndBlock cfiCond1461
          CFI EndBlock cfiCond1462
          CFI EndBlock cfiCond1463
          CFI EndBlock cfiCond1464
          CFI EndBlock cfiCond1465
          CFI EndBlock cfiCond1466
          CFI EndBlock cfiCond1467
          CFI EndBlock cfiCond1468
          CFI EndBlock cfiCond1469
          CFI EndBlock cfiCond1470
          CFI EndBlock cfiCond1471
          CFI EndBlock cfiCond1472
          CFI EndBlock cfiPicker1473

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond1474 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1475 Using cfiCommon0
          CFI (cfiCond1475) Function ZDO_ParseAddrRsp
          CFI (cfiCond1475) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond1475) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1475) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1475) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1475) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1475) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1475) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1475) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1475) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1475) CFA_SP SP+0
          CFI (cfiCond1475) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1476 Using cfiCommon1
          CFI (cfiPicker1476) NoFunction
          CFI (cfiPicker1476) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_690:
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond1474
          CFI EndBlock cfiCond1475
          CFI EndBlock cfiPicker1476
// 2593 
// 2594 /*********************************************************************
// 2595  * @fn          ZDO_ParseNodeDescRsp
// 2596  *
// 2597  * @brief       This function parses the Node_Desc_rsp message.
// 2598  *
// 2599  * @param       inMsg - incoming message
// 2600  * @param       pNDRsp - place to parse the message into
// 2601  *
// 2602  * @return      none
// 2603  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2604 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock1477 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 2605 {
        MOV     A,#-0xb
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 0
// 2606   uint8 *msg;
// 2607 
// 2608   msg = inMsg->asdu;
        LCALL   ?Subroutine16 & 0xFFFF
// 2609 
// 2610   pNDRsp->status = *msg++;
// 2611   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2612 
// 2613   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_10:
        JZ      $+5
        LJMP    ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 2614   {
// 2615     msg += 2;
        LCALL   ?Subroutine181 & 0xFFFF
// 2616     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
??CrossCallReturnLabel_261:
        MOV     A,R4
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R3,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     R6,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf8
        ORL     A,R6
        LCALL   ?Subroutine37 & 0xFFFF
// 2617 
// 2618     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_52:
        MOV     C,0xE0 /* A   */.3
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     C,0xE0 /* A   */.3
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.3,C
        LCALL   ?Subroutine37 & 0xFFFF
// 2619     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_53:
        MOV     C,0xE0 /* A   */.4
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     C,0xE0 /* A   */.4
        MOVX    A,@DPTR
        MOV     0xE0 /* A   */.4,C
        LCALL   ?Subroutine54 & 0xFFFF
// 2620 
// 2621     msg++;  // Reserved bits.
??CrossCallReturnLabel_89:
        INC     R0
        MOV     R1,DPH
// 2622     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV     A,R4
        ADD     A,#0x4
        INC     R2
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R3,A
        MOVX    A,@DPTR
        ANL     A,#0xf8
        MOV     ?V0 + 0,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0x7
        ORL     A,?V0 + 0
        MOV     ?V0 + 0,A
        LCALL   ?Subroutine37 & 0xFFFF
// 2623     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_54:
        ANL     A,#0x7
        MOV     ?V0 + 1,A
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOV     A,#-0x8
        ANL     A,?V0 + 0
        ORL     A,?V0 + 1
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine37 & 0xFFFF
// 2624     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_55:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine33 & 0xFFFF
// 2625     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_565:
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine26 & 0xFFFF
// 2626     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_31:
        LCALL   ?Subroutine26 & 0xFFFF
// 2627     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_32:
        INC     DPTR
        LCALL   ?Subroutine21 & 0xFFFF
// 2628     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_21:
        LCALL   ?Subroutine21 & 0xFFFF
// 2629     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_22:
        LCALL   ?Subroutine33 & 0xFFFF
// 2630     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_566:
        MOV     ?V0 + 0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        MOV     A,R4
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R5
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_632:
        MOV     A,?V0 + 0
        LCALL   ?Subroutine43 & 0xFFFF
// 2631     msg += 2;
// 2632     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_64:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        ADD     A,#0xd
        MOV     DPL,A
        MOV     A,R5
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_633:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ??Subroutine247_0 & 0xFFFF
// 2633     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
??CrossCallReturnLabel_567:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_559:
        MOV     A,R5
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_634:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine54 & 0xFFFF
// 2634     pNDRsp->nodeDesc.DescriptorCapability = *msg;
??CrossCallReturnLabel_90:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R4
        LCALL   ?Subroutine191 & 0xFFFF
// 2635   }
??CrossCallReturnLabel_270:
        MOV     A,R5
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_635:
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2636 }
??ZDO_ParseNodeDescRsp_0:
        LJMP    ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock1477

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1478 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_563
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1479 Using cfiCommon0
          CFI (cfiCond1479) Function ZDMatchSendState
          CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_564
          CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1479) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1479) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1479) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1479) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1479) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1479) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1479) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1479) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1479) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1479) CFA_SP SP+0
          CFI (cfiCond1479) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker1480 Using cfiCommon1
          CFI (cfiPicker1480) NoFunction
          CFI (cfiPicker1480) Picker
        MOV     A,?V0 + 0
          CFI EndBlock cfiCond1478
          CFI EndBlock cfiCond1479
          CFI EndBlock cfiPicker1480
        REQUIRE ??Subroutine246_0
        ; // Fall through to label ??Subroutine246_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine246_0:
          CFI Block cfiCond1481 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_560, ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1482 Using cfiCommon0
          CFI (cfiCond1482) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1482) Conditional ??CrossCallReturnLabel_560, ??CrossCallReturnLabel_107
          CFI (cfiCond1482) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1482) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1482) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1482) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1482) CFA_SP SP+0
          CFI (cfiCond1482) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1483 Using cfiCommon0
          CFI (cfiCond1483) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1483) Conditional ??CrossCallReturnLabel_562, ??CrossCallReturnLabel_208
          CFI (cfiCond1483) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1483) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1483) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1483) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1483) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1483) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1483) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1483) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1483) CFA_SP SP+0
          CFI (cfiCond1483) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1484 Using cfiCommon0
          CFI (cfiCond1484) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1484) Conditional ??CrossCallReturnLabel_562, ??CrossCallReturnLabel_209
          CFI (cfiCond1484) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1484) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1484) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1484) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1484) CFA_SP SP+0
          CFI (cfiCond1484) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1485 Using cfiCommon0
          CFI (cfiCond1485) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1485) Conditional ??CrossCallReturnLabel_562, ??CrossCallReturnLabel_210
          CFI (cfiCond1485) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1485) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1485) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1485) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1485) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1485) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1485) CFA_SP SP+0
          CFI (cfiCond1485) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1486 Using cfiCommon0
          CFI (cfiCond1486) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1486) Conditional ??CrossCallReturnLabel_562, ??CrossCallReturnLabel_211
          CFI (cfiCond1486) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1486) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1486) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1486) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1486) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1486) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1486) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1486) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1486) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1486) CFA_SP SP+0
          CFI (cfiCond1486) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1487 Using cfiCommon0
          CFI (cfiCond1487) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1487) Conditional ??CrossCallReturnLabel_561, ??CrossCallReturnLabel_392
          CFI (cfiCond1487) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1487) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1487) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1487) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1487) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1487) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1487) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1487) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1487) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1487) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1487) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1487) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1487) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1487) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1487) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1487) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1487) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1487) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1487) CFA_SP SP+0
          CFI (cfiCond1487) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1488 Using cfiCommon0
          CFI (cfiCond1488) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1488) Conditional ??CrossCallReturnLabel_561, ??CrossCallReturnLabel_393
          CFI (cfiCond1488) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1488) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1488) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1488) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1488) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1488) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1488) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1488) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1488) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1488) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1488) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1488) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1488) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1488) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1488) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1488) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1488) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1488) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1488) CFA_SP SP+0
          CFI (cfiCond1488) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1489 Using cfiCommon0
          CFI (cfiCond1489) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_561, ??CrossCallReturnLabel_394
          CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1489) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1489) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1489) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1489) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1489) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1489) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1489) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1489) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1489) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1489) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1489) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1489) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1489) CFA_SP SP+0
          CFI (cfiCond1489) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1490 Using cfiCommon0
          CFI (cfiCond1490) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1490) Conditional ??CrossCallReturnLabel_559
          CFI (cfiCond1490) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1490) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1490) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1490) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1490) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1490) CFA_SP SP+-1
          CFI (cfiCond1490) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1491 Using cfiCommon0
          CFI (cfiCond1491) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1491) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1491) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1491) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1491) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1491) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1491) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1491) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1491) CFA_SP SP+0
          CFI (cfiCond1491) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1492 Using cfiCommon0
          CFI (cfiCond1492) Function ZDMatchSendState
          CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_564
          CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1492) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1492) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1492) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1492) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1492) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1492) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1492) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1492) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1492) CFA_SP SP+0
          CFI (cfiCond1492) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiPicker1493 Using cfiCommon1
          CFI (cfiPicker1493) NoFunction
          CFI (cfiPicker1493) Picker
        ADD     A,#0xe
        MOV     DPL,A
        RET
          CFI EndBlock cfiCond1481
          CFI EndBlock cfiCond1482
          CFI EndBlock cfiCond1483
          CFI EndBlock cfiCond1484
          CFI EndBlock cfiCond1485
          CFI EndBlock cfiCond1486
          CFI EndBlock cfiCond1487
          CFI EndBlock cfiCond1488
          CFI EndBlock cfiCond1489
          CFI EndBlock cfiCond1490
          CFI EndBlock cfiCond1491
          CFI EndBlock cfiCond1492
          CFI EndBlock cfiPicker1493

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond1494 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1495 Using cfiCommon0
          CFI (cfiCond1495) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1495) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond1495) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1495) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1495) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1495) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1495) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1495) CFA_SP SP+0
          CFI (cfiCond1495) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1496 Using cfiCommon0
          CFI (cfiCond1496) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1496) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond1496) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1496) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1496) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1496) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1496) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1496) CFA_SP SP+0
          CFI (cfiCond1496) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1497 Using cfiCommon1
          CFI (cfiPicker1497) NoFunction
          CFI (cfiPicker1497) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_568:
        RET
          CFI EndBlock cfiCond1494
          CFI EndBlock cfiCond1495
          CFI EndBlock cfiCond1496
          CFI EndBlock cfiPicker1497

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1498 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_88
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1499 Using cfiCommon0
          CFI (cfiCond1499) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1499) Conditional ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_89
          CFI (cfiCond1499) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1499) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1499) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1499) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1499) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1499) CFA_SP SP+0
          CFI (cfiCond1499) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1500 Using cfiCommon0
          CFI (cfiCond1500) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1500) Conditional ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_90
          CFI (cfiCond1500) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1500) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1500) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1500) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1500) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1500) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1500) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1500) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1500) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1500) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1500) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1500) CFA_SP SP+0
          CFI (cfiCond1500) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1501 Using cfiCommon0
          CFI (cfiCond1501) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1501) Conditional ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_565
          CFI (cfiCond1501) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1501) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1501) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1501) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1501) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1501) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1501) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1501) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1501) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1501) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1501) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1501) CFA_SP SP+0
          CFI (cfiCond1501) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1502 Using cfiCommon0
          CFI (cfiCond1502) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1502) Conditional ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_566
          CFI (cfiCond1502) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1502) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1502) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1502) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1502) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1502) CFA_SP SP+0
          CFI (cfiCond1502) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1503 Using cfiCommon0
          CFI (cfiCond1503) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1503) Conditional ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_567
          CFI (cfiCond1503) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1503) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1503) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1503) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1503) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1503) CFA_SP SP+0
          CFI (cfiCond1503) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1504 Using cfiCommon0
          CFI (cfiCond1504) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1504) Conditional ??CrossCallReturnLabel_569, ??CrossCallReturnLabel_10
          CFI (cfiCond1504) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1504) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1504) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1504) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1504) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1504) CFA_SP SP+0
          CFI (cfiCond1504) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1505 Using cfiCommon0
          CFI (cfiCond1505) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1505) Conditional ??CrossCallReturnLabel_569, ??CrossCallReturnLabel_11
          CFI (cfiCond1505) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1505) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1505) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1505) CFA_SP SP+0
          CFI (cfiCond1505) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1506 Using cfiCommon1
          CFI (cfiPicker1506) NoFunction
          CFI (cfiPicker1506) Picker
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_572:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1498
          CFI EndBlock cfiCond1499
          CFI EndBlock cfiCond1500
          CFI EndBlock cfiCond1501
          CFI EndBlock cfiCond1502
          CFI EndBlock cfiCond1503
          CFI EndBlock cfiCond1504
          CFI EndBlock cfiCond1505
          CFI EndBlock cfiPicker1506

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1507 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1508 Using cfiCommon0
          CFI (cfiCond1508) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1508) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond1508) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1508) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1508) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1508) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1508) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1508) CFA_SP SP+0
          CFI (cfiCond1508) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1509 Using cfiCommon1
          CFI (cfiPicker1509) NoFunction
          CFI (cfiPicker1509) Picker
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_291:
        LCALL   ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_263:
        RET
          CFI EndBlock cfiCond1507
          CFI EndBlock cfiCond1508
          CFI EndBlock cfiPicker1509

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine181:
          CFI Block cfiCond1510 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1511 Using cfiCommon0
          CFI (cfiCond1511) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1511) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_9
          CFI (cfiCond1511) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1511) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1511) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1511) CFA_SP SP+0
          CFI (cfiCond1511) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1512 Using cfiCommon0
          CFI (cfiCond1512) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1512) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond1512) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1512) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1512) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1512) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1512) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1512) CFA_SP SP+0
          CFI (cfiCond1512) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1513 Using cfiCommon0
          CFI (cfiCond1513) Function ZDO_ParseAddrRsp
          CFI (cfiCond1513) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_65
          CFI (cfiCond1513) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1513) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1513) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1513) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1513) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1513) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1513) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1513) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1513) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1513) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1513) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1513) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1513) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1513) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1513) CFA_SP SP+0
          CFI (cfiCond1513) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1514 Using cfiCommon0
          CFI (cfiCond1514) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1514) Conditional ??CrossCallReturnLabel_263, ??CrossCallReturnLabel_64
          CFI (cfiCond1514) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1514) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1514) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1514) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1514) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1514) CFA_SP SP+0
          CFI (cfiCond1514) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1515 Using cfiCommon1
          CFI (cfiPicker1515) NoFunction
          CFI (cfiPicker1515) Picker
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
        RET
          CFI EndBlock cfiCond1510
          CFI EndBlock cfiCond1511
          CFI EndBlock cfiCond1512
          CFI EndBlock cfiCond1513
          CFI EndBlock cfiCond1514
          CFI EndBlock cfiPicker1515

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1516 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_565
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1517 Using cfiCommon0
          CFI (cfiCond1517) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1517) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1517) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1517) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1517) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1517) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1517) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1517) CFA_SP SP+0
          CFI (cfiCond1517) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1518 Using cfiCommon1
          CFI (cfiPicker1518) NoFunction
          CFI (cfiPicker1518) Picker
        INC     DPTR
          CFI EndBlock cfiCond1516
          CFI EndBlock cfiCond1517
          CFI EndBlock cfiPicker1518
        REQUIRE ??Subroutine247_0
        ; // Fall through to label ??Subroutine247_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine247_0:
          CFI Block cfiCond1519 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_567
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1520 Using cfiCommon0
          CFI (cfiCond1520) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1520) Conditional ??CrossCallReturnLabel_565
          CFI (cfiCond1520) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1520) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1520) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1520) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1520) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1520) CFA_SP SP+0
          CFI (cfiCond1520) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1521 Using cfiCommon0
          CFI (cfiCond1521) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1521) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1521) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1521) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1521) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1521) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1521) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1521) CFA_SP SP+0
          CFI (cfiCond1521) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1522 Using cfiCommon1
          CFI (cfiPicker1522) NoFunction
          CFI (cfiPicker1522) Picker
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_570:
        INC     R0
        MOV     R1,DPH
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1519
          CFI EndBlock cfiCond1520
          CFI EndBlock cfiCond1521
          CFI EndBlock cfiPicker1522

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond1523 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1524 Using cfiCommon0
          CFI (cfiCond1524) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1524) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond1524) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1524) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1524) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1524) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1524) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1524) CFA_SP SP+0
          CFI (cfiCond1524) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1525 Using cfiCommon1
          CFI (cfiPicker1525) NoFunction
          CFI (cfiPicker1525) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_220:
        RET
          CFI EndBlock cfiCond1523
          CFI EndBlock cfiCond1524
          CFI EndBlock cfiPicker1525

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond1526 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1527 Using cfiCommon0
          CFI (cfiCond1527) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1527) Conditional ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_32
          CFI (cfiCond1527) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1527) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1527) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1527) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1527) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1527) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1527) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1527) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1527) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1527) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1527) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1527) CFA_SP SP+0
          CFI (cfiCond1527) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1528 Using cfiCommon0
          CFI (cfiCond1528) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1528) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_21
          CFI (cfiCond1528) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1528) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1528) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1528) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1528) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1528) CFA_SP SP+0
          CFI (cfiCond1528) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1529 Using cfiCommon0
          CFI (cfiCond1529) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1529) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_22
          CFI (cfiCond1529) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1529) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1529) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1529) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1529) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1529) CFA_SP SP+0
          CFI (cfiCond1529) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1530 Using cfiCommon1
          CFI (cfiPicker1530) NoFunction
          CFI (cfiPicker1530) Picker
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_574:
        INC     DPTR
        INC     R0
        MOV     R1,DPH
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1526
          CFI EndBlock cfiCond1527
          CFI EndBlock cfiCond1528
          CFI EndBlock cfiCond1529
          CFI EndBlock cfiPicker1530

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine184:
          CFI Block cfiCond1531 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_571, ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1532 Using cfiCommon0
          CFI (cfiCond1532) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1532) Conditional ??CrossCallReturnLabel_571, ??CrossCallReturnLabel_463
          CFI (cfiCond1532) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1532) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1532) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1532) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1532) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1532) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1532) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1532) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1532) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1532) CFA_SP SP+0
          CFI (cfiCond1532) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1533 Using cfiCommon0
          CFI (cfiCond1533) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1533) Conditional ??CrossCallReturnLabel_571, ??CrossCallReturnLabel_464
          CFI (cfiCond1533) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1533) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1533) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1533) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1533) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1533) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1533) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1533) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1533) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1533) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1533) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1533) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1533) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1533) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1533) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1533) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1533) CFA_SP SP+0
          CFI (cfiCond1533) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1534 Using cfiCommon0
          CFI (cfiCond1534) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1534) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_88
          CFI (cfiCond1534) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1534) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1534) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1534) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1534) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1534) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1534) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1534) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1534) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1534) CFA_SP SP+0
          CFI (cfiCond1534) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1535 Using cfiCommon0
          CFI (cfiCond1535) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1535) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_89
          CFI (cfiCond1535) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1535) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1535) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1535) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1535) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1535) CFA_SP SP+0
          CFI (cfiCond1535) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1536 Using cfiCommon0
          CFI (cfiCond1536) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1536) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_568, ??CrossCallReturnLabel_90
          CFI (cfiCond1536) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1536) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1536) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1536) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1536) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1536) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1536) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1536) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1536) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1536) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1536) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1536) CFA_SP SP+0
          CFI (cfiCond1536) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1537 Using cfiCommon0
          CFI (cfiCond1537) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1537) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_565
          CFI (cfiCond1537) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1537) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1537) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1537) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1537) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1537) CFA_SP SP+0
          CFI (cfiCond1537) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1538 Using cfiCommon0
          CFI (cfiCond1538) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1538) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_566
          CFI (cfiCond1538) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1538) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1538) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1538) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1538) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1538) CFA_SP SP+0
          CFI (cfiCond1538) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1539 Using cfiCommon0
          CFI (cfiCond1539) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1539) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_570, ??CrossCallReturnLabel_567
          CFI (cfiCond1539) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1539) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1539) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1539) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1539) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1539) CFA_SP SP+0
          CFI (cfiCond1539) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1540 Using cfiCommon0
          CFI (cfiCond1540) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1540) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_569, ??CrossCallReturnLabel_10
          CFI (cfiCond1540) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1540) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1540) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1540) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1540) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1540) CFA_SP SP+0
          CFI (cfiCond1540) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1541 Using cfiCommon0
          CFI (cfiCond1541) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1541) Conditional ??CrossCallReturnLabel_572, ??CrossCallReturnLabel_569, ??CrossCallReturnLabel_11
          CFI (cfiCond1541) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1541) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1541) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1541) CFA_SP SP+0
          CFI (cfiCond1541) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1542 Using cfiCommon0
          CFI (cfiCond1542) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1542) Conditional ??CrossCallReturnLabel_574, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_31
          CFI (cfiCond1542) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1542) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1542) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1542) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1542) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1542) CFA_SP SP+0
          CFI (cfiCond1542) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1543 Using cfiCommon0
          CFI (cfiCond1543) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1543) Conditional ??CrossCallReturnLabel_574, ??CrossCallReturnLabel_220, ??CrossCallReturnLabel_32
          CFI (cfiCond1543) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1543) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1543) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1543) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1543) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1543) CFA_SP SP+0
          CFI (cfiCond1543) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1544 Using cfiCommon0
          CFI (cfiCond1544) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1544) Conditional ??CrossCallReturnLabel_574, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_21
          CFI (cfiCond1544) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1544) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1544) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1544) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1544) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1544) CFA_SP SP+0
          CFI (cfiCond1544) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1545 Using cfiCommon0
          CFI (cfiCond1545) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1545) Conditional ??CrossCallReturnLabel_574, ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_22
          CFI (cfiCond1545) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1545) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1545) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1545) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1545) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1545) CFA_SP SP+0
          CFI (cfiCond1545) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1546 Using cfiCommon0
          CFI (cfiCond1546) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1546) Conditional ??CrossCallReturnLabel_573, ??CrossCallReturnLabel_52
          CFI (cfiCond1546) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1546) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1546) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1546) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1546) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1546) CFA_SP SP+0
          CFI (cfiCond1546) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1547 Using cfiCommon0
          CFI (cfiCond1547) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1547) Conditional ??CrossCallReturnLabel_573, ??CrossCallReturnLabel_53
          CFI (cfiCond1547) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1547) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1547) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1547) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1547) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1547) CFA_SP SP+0
          CFI (cfiCond1547) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1548 Using cfiCommon0
          CFI (cfiCond1548) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1548) Conditional ??CrossCallReturnLabel_573, ??CrossCallReturnLabel_54
          CFI (cfiCond1548) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1548) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1548) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1548) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1548) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1548) CFA_SP SP+0
          CFI (cfiCond1548) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1549 Using cfiCommon0
          CFI (cfiCond1549) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1549) Conditional ??CrossCallReturnLabel_573, ??CrossCallReturnLabel_55
          CFI (cfiCond1549) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1549) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1549) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1549) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1549) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1549) CFA_SP SP+0
          CFI (cfiCond1549) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1550 Using cfiCommon0
          CFI (cfiCond1550) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1550) Conditional ??CrossCallReturnLabel_573, ??CrossCallReturnLabel_56
          CFI (cfiCond1550) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1550) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1550) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1550) CFA_SP SP+0
          CFI (cfiCond1550) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1551 Using cfiCommon1
          CFI (cfiPicker1551) NoFunction
          CFI (cfiPicker1551) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond1531
          CFI EndBlock cfiCond1532
          CFI EndBlock cfiCond1533
          CFI EndBlock cfiCond1534
          CFI EndBlock cfiCond1535
          CFI EndBlock cfiCond1536
          CFI EndBlock cfiCond1537
          CFI EndBlock cfiCond1538
          CFI EndBlock cfiCond1539
          CFI EndBlock cfiCond1540
          CFI EndBlock cfiCond1541
          CFI EndBlock cfiCond1542
          CFI EndBlock cfiCond1543
          CFI EndBlock cfiCond1544
          CFI EndBlock cfiCond1545
          CFI EndBlock cfiCond1546
          CFI EndBlock cfiCond1547
          CFI EndBlock cfiCond1548
          CFI EndBlock cfiCond1549
          CFI EndBlock cfiCond1550
          CFI EndBlock cfiPicker1551

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond1552 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1553 Using cfiCommon0
          CFI (cfiCond1553) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1553) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond1553) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1553) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1553) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1553) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1553) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1553) CFA_SP SP+0
          CFI (cfiCond1553) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1554 Using cfiCommon1
          CFI (cfiPicker1554) NoFunction
          CFI (cfiPicker1554) Picker
        LCALL   ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_221:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1552
          CFI EndBlock cfiCond1553
          CFI EndBlock cfiPicker1554
// 2637 
// 2638 /*********************************************************************
// 2639  * @fn          ZDO_ParesPowerDescRsp
// 2640  *
// 2641  * @brief       This function parses the Power_Desc_rsp message.
// 2642  *
// 2643  * @param       inMsg  - incoming message
// 2644  * @param       pNPRsp - place to parse the message into
// 2645  *
// 2646  * @return      none
// 2647  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2648 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock1555 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 2649 {
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 2650   uint8 *msg;
// 2651 
// 2652   msg = inMsg->asdu;
        MOV     A,R2
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_579:
        MOV     A,R3
        LCALL   ?Subroutine98 & 0xFFFF
// 2653   pNPRsp->status = *msg++;
??CrossCallReturnLabel_159:
        LCALL   ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_681:
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_235:
        MOV     R2,DPL
        MOV     R3,DPH
// 2654   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_616:
        MOV     R1,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine210_0 & 0xFFFF
// 2655 
// 2656   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_328:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        JNZ     ??CrossCallReturnLabel_343
// 2657   {
// 2658     msg += 2;
        MOV     A,R2
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
// 2659     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV     A,R4
        ADD     A,#0x3
        MOV     A,R5
        ADDC    A,#0x0
        INC     R4
        INC     R4
        INC     R4
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0 + 0,A
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R6
        ORL     A,?V0 + 0
        MOV     R6,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine44 & 0xFFFF
// 2660     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_66:
        INC     DPTR
        INC     R2
        MOV     R3,DPH
        MOV     A,R6
        ANL     A,#0xf0
        ORL     A,R0
        MOV     R0,A
        MOV     A,R7
        LCALL   ?Subroutine40 & 0xFFFF
// 2661     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_342:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        ANL     A,#0xf
        MOV     R7,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        MOV     ?V0 + 0,A
        MOV     A,#0xc
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        MOV     A,R7
        ORL     A,?V0 + 1
        MOV     R7,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOV     A,R6
        LCALL   ?Subroutine44 & 0xFFFF
// 2662     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 2663   }
??CrossCallReturnLabel_67:
        MOV     A,R7
        ANL     A,#0xf0
        MOV     R7,A
        MOV     A,R0
        MOV     R1,A
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        ORL     A,R1
        LCALL   ?Subroutine40 & 0xFFFF
// 2664 }
??CrossCallReturnLabel_343:
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock1555

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond1556 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1557 Using cfiCommon0
          CFI (cfiCond1557) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1557) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond1557) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1557) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1557) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1557) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1557) CFA_SP SP+0
          CFI (cfiCond1557) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1558 Using cfiCommon1
          CFI (cfiPicker1558) NoFunction
          CFI (cfiPicker1558) Picker
        LCALL   ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_471:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond1556
          CFI EndBlock cfiCond1557
          CFI EndBlock cfiPicker1558

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond1559 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_66
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1560 Using cfiCommon0
          CFI (cfiCond1560) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1560) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond1560) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1560) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1560) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1560) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1560) CFA_SP SP+0
          CFI (cfiCond1560) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1561 Using cfiCommon1
          CFI (cfiPicker1561) NoFunction
          CFI (cfiPicker1561) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R7
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     R0,A
        RET
          CFI EndBlock cfiCond1559
          CFI EndBlock cfiCond1560
          CFI EndBlock cfiPicker1561
// 2665 
// 2666 /*********************************************************************
// 2667  * @fn          ZDO_ParseSimpleDescRsp
// 2668  *
// 2669  * @brief       This function parse the Simple_Desc_rsp message.
// 2670  *
// 2671  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 2672  *         in the SimpleDescriptionFormat_t structure are allocated
// 2673  *         and the calling function needs to free [osal_msg_free()]
// 2674  *         these buffers.
// 2675  *
// 2676  * @param       inMsg  - incoming message
// 2677  * @param       pSimpleDescRsp - place to parse the message into
// 2678  *
// 2679  * @return      none
// 2680  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2681 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1562 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 2682 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2683   uint8 *msg;
// 2684 
// 2685   msg = inMsg->asdu;
        LCALL   ?Subroutine16 & 0xFFFF
// 2686   pSimpleDescRsp->status = *msg++;
// 2687   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 2688   msg += sizeof ( uint16 );
// 2689   msg++; // Skip past the length field.
// 2690 
// 2691   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_11:
        JNZ     ??ZDO_ParseSimpleDescRsp_0
// 2692   {
// 2693     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV     A,R4
        ADD     A,#0x3
        MOV     R4,A
        MOV     A,R5
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,R0
        ADD     A,#0x3
        MOV     R2,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??ZDO_ParseSimpleDescBuf?relay
// 2694   }
// 2695 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock1562

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1563 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1564 Using cfiCommon0
          CFI (cfiCond1564) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1564) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond1564) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1564) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1564) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1564) CFA_SP SP+0
          CFI (cfiCond1564) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1565 Using cfiCommon1
          CFI (cfiPicker1565) NoFunction
          CFI (cfiPicker1565) Picker
        LCALL   ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_264:
        LCALL   ??Subroutine194_0 & 0xFFFF
??CrossCallReturnLabel_279:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_569:
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_617:
        MOV     R3,A
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        LCALL   ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_290:
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1563
          CFI EndBlock cfiCond1564
          CFI EndBlock cfiPicker1565
// 2696 
// 2697 /*********************************************************************
// 2698  * @fn          ZDO_ParseEPListRsp
// 2699  *
// 2700  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 2701  *
// 2702  * @param       inMsg  - incoming message
// 2703  *
// 2704  * @return      none
// 2705  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2706 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1566 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 2707 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2708   ZDO_ActiveEndpointRsp_t *pRsp;
// 2709   uint8 *msg;
// 2710   uint8 Status;
// 2711   uint8 cnt;
// 2712 
// 2713   msg = inMsg->asdu;
        MOV     A,R2
        LCALL   ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_580:
        MOV     A,R3
        ADDC    A,#0x0
        LCALL   ?Subroutine103 & 0xFFFF
// 2714   Status = *msg++;
??CrossCallReturnLabel_277:
        MOV     DPL,?V0 + 0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        INC     DPTR
        MOV     ?V0 + 0,DPL
        MOV     ?V0 + 1,DPH
// 2715   cnt = msg[2];
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
// 2716 
// 2717   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        ; Setup parameters for call to function osal_mem_alloc
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 2718   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseEPListRsp_0
// 2719   {
// 2720     pRsp->status = Status;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 5
        MOVX    @DPTR,A
// 2721     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     R2,A
        LCALL   ?Subroutine28 & 0xFFFF
// 2722     msg += sizeof( uint16 );
// 2723     pRsp->cnt = cnt;
// 2724     msg++; // pass cnt
// 2725     osal_memcpy( pRsp->epList, msg, cnt );
??CrossCallReturnLabel_588:
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V0 + 0,R1
        MOV     ?V0 + 1,R2
        MOV     ?V0 + 2,R0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 2726   }
// 2727 
// 2728   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock1566
// 2729 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond1567 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_575
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1568 Using cfiCommon0
          CFI (cfiCond1568) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1568) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1568) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1568) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1568) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1568) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1568) CFA_SP SP+0
          CFI (cfiCond1568) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1569 Using cfiCommon1
          CFI (cfiPicker1569) NoFunction
          CFI (cfiPicker1569) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
          CFI EndBlock cfiCond1567
          CFI EndBlock cfiCond1568
          CFI EndBlock cfiPicker1569
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        REQUIRE ??Subroutine248_0
        ; // Fall through to label ??Subroutine248_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine248_0:
          CFI Block cfiCond1570 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_581
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1571 Using cfiCommon0
          CFI (cfiCond1571) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1571) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1571) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1571) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1571) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1571) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1571) CFA_SP SP+0
          CFI (cfiCond1571) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1572 Using cfiCommon0
          CFI (cfiCond1572) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1572) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1572) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1572) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1572) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1572) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1572) CFA_SP SP+0
          CFI (cfiCond1572) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1573 Using cfiCommon1
          CFI (cfiPicker1573) NoFunction
          CFI (cfiPicker1573) Picker
        MOV     A,R6
          CFI EndBlock cfiCond1570
          CFI EndBlock cfiCond1571
          CFI EndBlock cfiCond1572
          CFI EndBlock cfiPicker1573
        REQUIRE ??Subroutine249_0
        ; // Fall through to label ??Subroutine249_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine249_0:
          CFI Block cfiCond1574 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_577
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1575 Using cfiCommon0
          CFI (cfiCond1575) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1575) Conditional ??CrossCallReturnLabel_578
          CFI (cfiCond1575) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1575) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1575) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1575) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1575) CFA_SP SP+0
          CFI (cfiCond1575) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1576 Using cfiCommon0
          CFI (cfiCond1576) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1576) Conditional ??CrossCallReturnLabel_579
          CFI (cfiCond1576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1576) CFA_SP SP+0
          CFI (cfiCond1576) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1577 Using cfiCommon0
          CFI (cfiCond1577) Function ZDO_ParseEPListRsp
          CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1577) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1577) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1577) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1577) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1577) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1577) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1577) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1577) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1577) CFA_SP SP+0
          CFI (cfiCond1577) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1578 Using cfiCommon0
          CFI (cfiCond1578) Function ZDO_ParseAddrRsp
          CFI (cfiCond1578) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1578) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1578) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1578) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1578) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1578) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1578) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1578) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1578) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1578) CFA_SP SP+0
          CFI (cfiCond1578) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1579 Using cfiCommon0
          CFI (cfiCond1579) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1579) Conditional ??CrossCallReturnLabel_575
          CFI (cfiCond1579) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1579) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1579) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1579) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1579) CFA_SP SP+0
          CFI (cfiCond1579) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1580 Using cfiCommon0
          CFI (cfiCond1580) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1580) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1580) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1580) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1580) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1580) CFA_SP SP+0
          CFI (cfiCond1580) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiPicker1581 Using cfiCommon1
          CFI (cfiPicker1581) NoFunction
          CFI (cfiPicker1581) Picker
        LCALL   ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_587:
        RET
          CFI EndBlock cfiCond1574
          CFI EndBlock cfiCond1575
          CFI EndBlock cfiCond1576
          CFI EndBlock cfiCond1577
          CFI EndBlock cfiCond1578
          CFI EndBlock cfiCond1579
          CFI EndBlock cfiCond1580
          CFI EndBlock cfiPicker1581

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond1582 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_588
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1583 Using cfiCommon0
          CFI (cfiCond1583) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1583) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1583) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1583) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1583) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1583) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1583) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1583) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1583) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1583) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1583) CFA_SP SP+0
          CFI (cfiCond1583) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1584 Using cfiCommon1
          CFI (cfiPicker1584) NoFunction
          CFI (cfiPicker1584) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond1582
          CFI EndBlock cfiCond1583
          CFI EndBlock cfiPicker1584
        REQUIRE ??Subroutine250_0
        ; // Fall through to label ??Subroutine250_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine250_0:
          CFI Block cfiCond1585 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_590
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1586 Using cfiCommon0
          CFI (cfiCond1586) Function ZDO_ParseEPListRsp
          CFI (cfiCond1586) Conditional ??CrossCallReturnLabel_588
          CFI (cfiCond1586) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1586) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1586) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1586) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1586) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1586) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1586) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1586) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1586) CFA_SP SP+0
          CFI (cfiCond1586) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1587 Using cfiCommon0
          CFI (cfiCond1587) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1587) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1587) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1587) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1587) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1587) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1587) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1587) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1587) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1587) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1587) CFA_SP SP+0
          CFI (cfiCond1587) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1588 Using cfiCommon1
          CFI (cfiPicker1588) NoFunction
          CFI (cfiPicker1588) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_592:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1585
          CFI EndBlock cfiCond1586
          CFI EndBlock cfiCond1587
          CFI EndBlock cfiPicker1588

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1589 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_594
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1590 Using cfiCommon0
          CFI (cfiCond1590) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1590) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_74
          CFI (cfiCond1590) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1590) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1590) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1590) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1590) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1590) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1590) CFA_SP SP+0
          CFI (cfiCond1590) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1591 Using cfiCommon0
          CFI (cfiCond1591) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1591) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_75
          CFI (cfiCond1591) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1591) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1591) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1591) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1591) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1591) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1591) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1591) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1591) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1591) CFA_SP SP+0
          CFI (cfiCond1591) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1592 Using cfiCommon0
          CFI (cfiCond1592) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1592) Conditional ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_76
          CFI (cfiCond1592) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1592) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1592) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1592) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1592) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1592) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1592) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1592) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1592) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1592) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1592) CFA_SP SP+0
          CFI (cfiCond1592) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1593 Using cfiCommon0
          CFI (cfiCond1593) Function ZDO_ParseEPListRsp
          CFI (cfiCond1593) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_588
          CFI (cfiCond1593) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1593) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1593) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1593) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1593) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1593) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1593) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1593) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1593) CFA_SP SP+0
          CFI (cfiCond1593) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1594 Using cfiCommon0
          CFI (cfiCond1594) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1594) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_589
          CFI (cfiCond1594) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1594) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1594) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1594) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1594) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1594) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1594) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1594) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1594) CFA_SP SP+0
          CFI (cfiCond1594) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1595 Using cfiCommon0
          CFI (cfiCond1595) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1595) Conditional ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_590
          CFI (cfiCond1595) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1595) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1595) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1595) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1595) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1595) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1595) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1595) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1595) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1595) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1595) CFA_SP SP+0
          CFI (cfiCond1595) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1596 Using cfiCommon0
          CFI (cfiCond1596) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1596) Conditional ??CrossCallReturnLabel_593
          CFI (cfiCond1596) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1596) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1596) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1596) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1596) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1596) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1596) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1596) CFA_SP SP+0
          CFI (cfiCond1596) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1597 Using cfiCommon0
          CFI (cfiCond1597) Function ZDO_ParseAddrRsp
          CFI (cfiCond1597) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_84
          CFI (cfiCond1597) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1597) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1597) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1597) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1597) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1597) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1597) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1597) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1597) CFA_SP SP+0
          CFI (cfiCond1597) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1598 Using cfiCommon0
          CFI (cfiCond1598) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1598) Conditional ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_85
          CFI (cfiCond1598) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1598) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1598) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1598) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1598) CFA_SP SP+0
          CFI (cfiCond1598) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1599 Using cfiCommon1
          CFI (cfiPicker1599) NoFunction
          CFI (cfiPicker1599) Picker
        LCALL   ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_596:
        RET
          CFI EndBlock cfiCond1589
          CFI EndBlock cfiCond1590
          CFI EndBlock cfiCond1591
          CFI EndBlock cfiCond1592
          CFI EndBlock cfiCond1593
          CFI EndBlock cfiCond1594
          CFI EndBlock cfiCond1595
          CFI EndBlock cfiCond1596
          CFI EndBlock cfiCond1597
          CFI EndBlock cfiCond1598
          CFI EndBlock cfiPicker1599

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine185:
          CFI Block cfiCond1600 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_594
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1601 Using cfiCommon0
          CFI (cfiCond1601) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1601) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_74
          CFI (cfiCond1601) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1601) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1601) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1601) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1601) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1601) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1601) CFA_SP SP+0
          CFI (cfiCond1601) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1602 Using cfiCommon0
          CFI (cfiCond1602) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1602) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_75
          CFI (cfiCond1602) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1602) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1602) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1602) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1602) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1602) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1602) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1602) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1602) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1602) CFA_SP SP+0
          CFI (cfiCond1602) CFA_XSP16 add(XSP16, 25)
          CFI Block cfiCond1603 Using cfiCommon0
          CFI (cfiCond1603) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1603) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_591, ??CrossCallReturnLabel_76
          CFI (cfiCond1603) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1603) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1603) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1603) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1603) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1603) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1603) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1603) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1603) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1603) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1603) CFA_SP SP+0
          CFI (cfiCond1603) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1604 Using cfiCommon0
          CFI (cfiCond1604) Function ZDO_ParseEPListRsp
          CFI (cfiCond1604) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_588
          CFI (cfiCond1604) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1604) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1604) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1604) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1604) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1604) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1604) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1604) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1604) CFA_SP SP+0
          CFI (cfiCond1604) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1605 Using cfiCommon0
          CFI (cfiCond1605) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1605) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_589
          CFI (cfiCond1605) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1605) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1605) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1605) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1605) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1605) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1605) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1605) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1605) CFA_SP SP+0
          CFI (cfiCond1605) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1606 Using cfiCommon0
          CFI (cfiCond1606) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1606) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_592, ??CrossCallReturnLabel_590
          CFI (cfiCond1606) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1606) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1606) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1606) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1606) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1606) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1606) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1606) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1606) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1606) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1606) CFA_SP SP+0
          CFI (cfiCond1606) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1607 Using cfiCommon0
          CFI (cfiCond1607) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1607) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_593
          CFI (cfiCond1607) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1607) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1607) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1607) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1607) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1607) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1607) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1607) CFA_SP SP+0
          CFI (cfiCond1607) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1608 Using cfiCommon0
          CFI (cfiCond1608) Function ZDO_ParseAddrRsp
          CFI (cfiCond1608) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_84
          CFI (cfiCond1608) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1608) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1608) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1608) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1608) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1608) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1608) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1608) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1608) CFA_SP SP+0
          CFI (cfiCond1608) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1609 Using cfiCommon0
          CFI (cfiCond1609) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1609) Conditional ??CrossCallReturnLabel_596, ??CrossCallReturnLabel_595, ??CrossCallReturnLabel_85
          CFI (cfiCond1609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1609) CFA_SP SP+0
          CFI (cfiCond1609) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1610 Using cfiCommon0
          CFI (cfiCond1610) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1610) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_42
          CFI (cfiCond1610) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1610) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1610) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1610) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1610) CFA_SP SP+0
          CFI (cfiCond1610) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1611 Using cfiCommon0
          CFI (cfiCond1611) Function ZDO_ParseAddrRsp
          CFI (cfiCond1611) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_43
          CFI (cfiCond1611) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1611) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1611) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1611) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1611) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1611) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1611) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1611) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1611) CFA_SP SP+0
          CFI (cfiCond1611) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1612 Using cfiCommon0
          CFI (cfiCond1612) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_44
          CFI (cfiCond1612) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1612) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1612) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1612) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1612) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1612) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1612) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1612) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1612) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1612) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1612) CFA_SP SP+0
          CFI (cfiCond1612) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1613 Using cfiCommon0
          CFI (cfiCond1613) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1613) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_45
          CFI (cfiCond1613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1613) CFA_SP SP+0
          CFI (cfiCond1613) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1614 Using cfiCommon0
          CFI (cfiCond1614) Function ZDO_ParseAddrRsp
          CFI (cfiCond1614) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_39
          CFI (cfiCond1614) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1614) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1614) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1614) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1614) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1614) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1614) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1614) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1614) CFA_SP SP+0
          CFI (cfiCond1614) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1615 Using cfiCommon0
          CFI (cfiCond1615) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_40
          CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1615) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1615) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1615) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1615) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1615) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1615) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1615) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1615) CFA_SP SP+0
          CFI (cfiCond1615) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1616 Using cfiCommon0
          CFI (cfiCond1616) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1616) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_41
          CFI (cfiCond1616) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1616) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1616) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1616) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1616) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1616) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1616) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1616) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1616) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1616) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1616) CFA_SP SP+0
          CFI (cfiCond1616) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1617 Using cfiCommon0
          CFI (cfiCond1617) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1617) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_12
          CFI (cfiCond1617) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1617) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1617) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1617) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1617) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1617) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1617) CFA_SP SP+0
          CFI (cfiCond1617) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1618 Using cfiCommon0
          CFI (cfiCond1618) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1618) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_13
          CFI (cfiCond1618) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1618) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1618) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1618) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1618) CFA_SP SP+0
          CFI (cfiCond1618) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1619 Using cfiCommon0
          CFI (cfiCond1619) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1619) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_14
          CFI (cfiCond1619) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1619) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1619) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1619) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1619) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1619) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1619) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1619) CFA_SP SP+0
          CFI (cfiCond1619) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1620 Using cfiCommon0
          CFI (cfiCond1620) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1620) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_77
          CFI (cfiCond1620) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1620) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1620) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1620) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1620) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1620) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1620) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1620) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1620) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1620) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1620) CFA_SP SP+0
          CFI (cfiCond1620) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1621 Using cfiCommon0
          CFI (cfiCond1621) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_597, ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_78
          CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1621) CFA_SP SP+0
          CFI (cfiCond1621) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1622 Using cfiCommon1
          CFI (cfiPicker1622) NoFunction
          CFI (cfiPicker1622) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        RET
          CFI EndBlock cfiCond1600
          CFI EndBlock cfiCond1601
          CFI EndBlock cfiCond1602
          CFI EndBlock cfiCond1603
          CFI EndBlock cfiCond1604
          CFI EndBlock cfiCond1605
          CFI EndBlock cfiCond1606
          CFI EndBlock cfiCond1607
          CFI EndBlock cfiCond1608
          CFI EndBlock cfiCond1609
          CFI EndBlock cfiCond1610
          CFI EndBlock cfiCond1611
          CFI EndBlock cfiCond1612
          CFI EndBlock cfiCond1613
          CFI EndBlock cfiCond1614
          CFI EndBlock cfiCond1615
          CFI EndBlock cfiCond1616
          CFI EndBlock cfiCond1617
          CFI EndBlock cfiCond1618
          CFI EndBlock cfiCond1619
          CFI EndBlock cfiCond1620
          CFI EndBlock cfiCond1621
          CFI EndBlock cfiPicker1622
// 2730 
// 2731 /*********************************************************************
// 2732  * @fn          ZDO_ParseServerDiscRsp
// 2733  *
// 2734  * @brief       Parse the Server_Discovery_rsp message.
// 2735  *
// 2736  * @param       inMsg - incoming message.
// 2737  * @param       pRsp - place to put the parsed information.
// 2738  *
// 2739  * @return      none
// 2740  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2741 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1623 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 2742 {
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 2743   pRsp->status = inMsg->asdu[0];
        MOV     A,R2
        ADD     A,#0x13
        MOV     R0,A
        MOV     A,R3
        LCALL   ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_255:
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R2
        LCALL   ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_682:
        LCALL   ?Subroutine37 & 0xFFFF
// 2744   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_56:
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        LCALL   ??Subroutine264_0 & 0xFFFF
??CrossCallReturnLabel_695:
        INC     DPTR
        LCALL   ??Subroutine210_0 & 0xFFFF
// 2745 }
??CrossCallReturnLabel_329:
        LJMP    ?Subroutine8 & 0xFFFF
          CFI EndBlock cfiBlock1623

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond1624 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1625 Using cfiCommon0
          CFI (cfiCond1625) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1625) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond1625) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1625) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1625) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1625) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1625) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1625) CFA_SP SP+0
          CFI (cfiCond1625) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1626 Using cfiCommon0
          CFI (cfiCond1626) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1626) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond1626) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1626) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1626) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1626) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1626) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1626) CFA_SP SP+0
          CFI (cfiCond1626) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1627 Using cfiCommon0
          CFI (cfiCond1627) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1627) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond1627) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1627) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1627) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1627) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1627) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1627) CFA_SP SP+0
          CFI (cfiCond1627) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1628 Using cfiCommon0
          CFI (cfiCond1628) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1628) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond1628) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1628) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1628) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1628) CFA_SP SP+0
          CFI (cfiCond1628) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1629 Using cfiCommon1
          CFI (cfiPicker1629) NoFunction
          CFI (cfiPicker1629) Picker
        LCALL   ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_573:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1624
          CFI EndBlock cfiCond1625
          CFI EndBlock cfiCond1626
          CFI EndBlock cfiCond1627
          CFI EndBlock cfiCond1628
          CFI EndBlock cfiPicker1629
// 2746 
// 2747 /*********************************************************************
// 2748  * @fn          ZDO_ParseMgmtLqiRsp
// 2749  *
// 2750  * @brief       This function parses the incoming Management
// 2751  *              LQI response
// 2752  *
// 2753  * @param       inMsg - incoming message
// 2754  *
// 2755  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2756  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2757  *          by the calling function [osal_mem_free()].
// 2758  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2759 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1630 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 2760 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2761   ZDO_MgmtLqiRsp_t *pRsp;
// 2762   uint8 status;
// 2763   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 2764   uint8 neighborLqiCount = 0;
        MOV     ?V0 + 4,#0x0
// 2765   uint8 neighborLqiEntries = 0;
        MOV     ?V0 + 6,#0x0
// 2766   uint8 *msg;
// 2767 
// 2768   msg = inMsg->asdu;
        LCALL   ?Subroutine66 & 0xFFFF
// 2769 
// 2770   status = *msg++;
// 2771   if ( status == ZSuccess )
??CrossCallReturnLabel_110:
        JNZ     ??CrossCallReturnLabel_126
// 2772   {
// 2773     neighborLqiEntries = *msg++;
        LCALL   ?Subroutine75 & 0xFFFF
// 2774     startIndex = *msg++;
// 2775     neighborLqiCount = *msg++;
// 2776   }
// 2777 
// 2778   // Allocate a buffer big enough to handle the list.
// 2779   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 2780             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( neighborLqiItem_t )) );
??CrossCallReturnLabel_126:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        MOV     B,#0xe
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
        MOV     R6,?V0 + 0
        MOV     R7,?V0 + 1
// 2781   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseMgmtLqiRsp_0
// 2782   {
// 2783     uint8 x;
// 2784     neighborLqiItem_t *pList = pRsp->list;
        MOV     A,R6
        ADD     A,#0x4
        MOV     ?V0 + 0,A
        MOV     A,R7
        LCALL   ??Subroutine251_0 & 0xFFFF
// 2785     pRsp->status = status;
??CrossCallReturnLabel_600:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
// 2786     pRsp->neighborLqiEntries = neighborLqiEntries;
        INC     DPTR
        MOV     A,?V0 + 6
        LCALL   ?Subroutine48 & 0xFFFF
// 2787     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_76:
        MOV     A,?V0 + 5
        LCALL   ??Subroutine250_0 & 0xFFFF
// 2788     pRsp->neighborLqiCount = neighborLqiCount;
// 2789 
// 2790     for ( x = 0; x < neighborLqiCount; x++ )
??CrossCallReturnLabel_590:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmtLqiRsp_1
// 2791     {
// 2792       osal_cpyExtAddr(pList->extPANId, msg);   //Copy extended PAN ID
??ZDO_ParseMgmtLqiRsp_2:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_215:
        LCALL   ??sAddrExtCpy?relay
// 2793       msg += Z_EXTADDR_LEN;
// 2794 
// 2795       msg += Z_EXTADDR_LEN;  // Throwing away IEEE.
        MOV     A,?V0 + 2
        ADD     A,#0x10
        LCALL   ?Subroutine177 & 0xFFFF
// 2796       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_679:
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_147:
        LCALL   ??Subroutine210_0 & 0xFFFF
// 2797       msg += 2 + 1 + 1 + 1;      // Skip DeviceType, RxOnIdle, Rlationship, PermitJoining and Depth
??CrossCallReturnLabel_330:
        MOV     A,?V0 + 2
        ADD     A,#0x5
        LCALL   ??Subroutine259_0 & 0xFFFF
// 2798       pList->rxLqi = *msg++;
??CrossCallReturnLabel_678:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xd
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_645:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine14 & 0xFFFF
// 2799       pList->txQuality = 0;  // This is not specified OTA by ZigBee 1.1.
??CrossCallReturnLabel_4:
        MOV     A,?V0 + 0
        ADD     A,#0xc
        LCALL   ?Subroutine134 & 0xFFFF
// 2800       pList++;
??CrossCallReturnLabel_525:
        MOV     A,?V0 + 0
        ADD     A,#0xe
        LCALL   ?Subroutine132 & 0xFFFF
// 2801     }
??CrossCallReturnLabel_603:
        INC     ?V0 + 5
??ZDO_ParseMgmtLqiRsp_1:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseMgmtLqiRsp_2
// 2802   }
// 2803 
// 2804   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_0:
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
          CFI EndBlock cfiBlock1630
        REQUIRE ?Subroutine10
        ; // Fall through to label ?Subroutine10
// 2805 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiBlock1631 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x8
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1631

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond1632 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1633 Using cfiCommon0
          CFI (cfiCond1633) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1633) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond1633) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1633) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1633) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1633) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1633) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1633) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1633) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1633) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1633) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1633) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1633) CFA_SP SP+0
          CFI (cfiCond1633) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1634 Using cfiCommon1
          CFI (cfiPicker1634) NoFunction
          CFI (cfiPicker1634) Picker
        LCALL   ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_243:
        RET
          CFI EndBlock cfiCond1632
          CFI EndBlock cfiCond1633
          CFI EndBlock cfiPicker1634

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond1635 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1636 Using cfiCommon0
          CFI (cfiCond1636) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1636) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_147
          CFI (cfiCond1636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1636) CFA_SP SP+0
          CFI (cfiCond1636) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1637 Using cfiCommon0
          CFI (cfiCond1637) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1637) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_114
          CFI (cfiCond1637) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1637) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1637) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1637) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1637) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1637) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1637) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1637) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1637) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1637) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1637) CFA_SP SP+0
          CFI (cfiCond1637) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1638 Using cfiCommon0
          CFI (cfiCond1638) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1638) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_115
          CFI (cfiCond1638) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1638) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1638) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1638) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1638) CFA_SP SP+0
          CFI (cfiCond1638) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1639 Using cfiCommon1
          CFI (cfiPicker1639) NoFunction
          CFI (cfiPicker1639) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_288:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
          CFI EndBlock cfiCond1635
          CFI EndBlock cfiCond1636
          CFI EndBlock cfiCond1637
          CFI EndBlock cfiCond1638
          CFI EndBlock cfiPicker1639
// 2806 
// 2807 /*********************************************************************
// 2808  * @fn          ZDO_ParseMgmNwkDiscRsp
// 2809  *
// 2810  * @brief       This function parses the incoming Management
// 2811  *              Network Discover response.
// 2812  *
// 2813  * @param       inMsg - incoming message
// 2814  *
// 2815  * @return      pointer to parsed response.  This structure was
// 2816  *          allocated using osal_mem_alloc, so it must be freed
// 2817  *          by the calling function [osal_mem_free()].
// 2818  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2819 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1640 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 2820 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x10
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 2821   ZDO_MgmNwkDiscRsp_t *pRsp;
// 2822   uint8 status;
// 2823   uint8 networkCount = 0;
        MOV     ?V0 + 6,#0x0
// 2824   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 2825   uint8 networkListCount = 0;
        MOV     ?V0 + 4,#0x0
// 2826   uint8 *msg;
// 2827 
// 2828   msg = inMsg->asdu;
        LCALL   ?Subroutine63 & 0xFFFF
// 2829   status = *msg++;
??CrossCallReturnLabel_611:
        MOV     ?V0 + 7,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2830 
// 2831   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmNwkDiscRsp_0
// 2832   {
// 2833     networkCount = *msg++;
        LCALL   ?Subroutine165 & 0xFFFF
// 2834     startIndex = *msg++;
// 2835     networkListCount = *msg++;
// 2836   }
??CrossCallReturnLabel_244:
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 2837 
// 2838   // Allocate a buffer big enough to handle the list.
// 2839   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 2840                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V0 + 0,?V0 + 4
        MOV     ?V0 + 1,#0x0
        MOV     A,#0x4
        MOV     R0,#?V0 + 0
        LCALL   ?S_SHL
        LCALL   ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_216:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
// 2841   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 3
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 2842   {
// 2843     uint8 x;
// 2844     mgmtNwkDiscItem_t *pList;
// 2845 
// 2846     pRsp->status = status;
        LCALL   ?Subroutine19 & 0xFFFF
// 2847     pRsp->networkCount = networkCount;
// 2848     pRsp->startIndex = startIndex;
// 2849     pRsp->networkListCount = networkListCount;
// 2850     pList = pRsp->list;
??CrossCallReturnLabel_17:
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0 + 0,A
        MOV     A,R3
        LCALL   ??Subroutine251_0 & 0xFFFF
// 2851 
// 2852     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_601:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmNwkDiscRsp_2
// 2853     {
// 2854       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LCALL   ??sAddrExtCpy?relay
// 2855       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_114:
        INC     DPTR
        LCALL   ??Subroutine210_0 & 0xFFFF
// 2856       msg += Z_EXTADDR_LEN;
??CrossCallReturnLabel_331:
        MOV     A,R6
        ADD     A,#0x8
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
// 2857 
// 2858       pList->logicalChannel = *msg++;
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_607:
        LCALL   ?Subroutine49 & 0xFFFF
// 2859       pList->stackProfile = (*msg) & 0x0F;
??CrossCallReturnLabel_77:
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xb
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_646:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine53 & 0xFFFF
// 2860       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_86:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xc
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_647:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine31 & 0xFFFF
// 2861       pList->beaconOrder = (*msg) & 0x0F;
??CrossCallReturnLabel_40:
        ANL     A,#0xf
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xd
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_648:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine53 & 0xFFFF
// 2862       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_87:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_651:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine31 & 0xFFFF
// 2863       pList->permitJoining = *msg++;
??CrossCallReturnLabel_41:
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,?V0 + 0
        ADD     A,#0xf
        LCALL   ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_649:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine32 & 0xFFFF
// 2864       pList++;
??CrossCallReturnLabel_44:
        MOV     A,?V0 + 0
        ADD     A,#0x10
        LCALL   ?Subroutine132 & 0xFFFF
// 2865     }
??CrossCallReturnLabel_604:
        INC     ?V0 + 5
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseMgmNwkDiscRsp_3
// 2866   }
// 2867 
// 2868   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        MOV     R2,?V0 + 2
        MOV     R3,?V0 + 3
        LJMP    ?Subroutine10 & 0xFFFF
          CFI EndBlock cfiBlock1640
// 2869 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond1641 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_215
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1642 Using cfiCommon0
          CFI (cfiCond1642) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1642) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond1642) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1642) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1642) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1642) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1642) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1642) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1642) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1642) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1642) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1642) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1642) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1642) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1642) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1642) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1642) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1642) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1642) CFA_SP SP+0
          CFI (cfiCond1642) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1643 Using cfiCommon1
          CFI (cfiPicker1643) NoFunction
          CFI (cfiPicker1643) Picker
        MOV     A,?V0 + 0
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1641
          CFI EndBlock cfiCond1642
          CFI EndBlock cfiPicker1643

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond1644 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
          CFI Conditional ??CrossCallReturnLabel_602
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1645 Using cfiCommon0
          CFI (cfiCond1645) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1645) Conditional ??CrossCallReturnLabel_603
          CFI (cfiCond1645) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1645) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1645) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1645) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1645) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1645) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1645) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1645) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1645) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1645) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1645) CFA_SP SP+0
          CFI (cfiCond1645) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1646 Using cfiCommon0
          CFI (cfiCond1646) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1646) Conditional ??CrossCallReturnLabel_604
          CFI (cfiCond1646) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1646) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1646) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1646) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1646) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1646) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1646) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1646) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1646) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1646) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1646) CFA_SP SP+0
          CFI (cfiCond1646) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1647 Using cfiCommon0
          CFI (cfiCond1647) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1647) Conditional ??CrossCallReturnLabel_605
          CFI (cfiCond1647) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1647) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1647) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1647) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1647) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1647) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1647) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1647) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1647) CFA_SP SP+0
          CFI (cfiCond1647) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1648 Using cfiCommon1
          CFI (cfiPicker1648) NoFunction
          CFI (cfiPicker1648) Picker
        MOV     ?V0 + 0,A
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond1644
          CFI EndBlock cfiCond1645
          CFI EndBlock cfiCond1646
          CFI EndBlock cfiCond1647
          CFI EndBlock cfiPicker1648
        REQUIRE ??Subroutine251_0
        ; // Fall through to label ??Subroutine251_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine251_0:
          CFI Block cfiCond1649 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_599
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1650 Using cfiCommon0
          CFI (cfiCond1650) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1650) Conditional ??CrossCallReturnLabel_600
          CFI (cfiCond1650) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1650) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1650) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1650) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1650) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1650) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1650) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1650) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1650) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1650) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1650) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1650) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1650) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1650) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1650) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1650) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1650) CFA_SP SP+0
          CFI (cfiCond1650) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1651 Using cfiCommon0
          CFI (cfiCond1651) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1651) Conditional ??CrossCallReturnLabel_601
          CFI (cfiCond1651) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1651) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1651) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1651) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1651) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1651) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1651) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1651) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1651) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1651) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1651) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1651) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1651) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1651) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1651) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1651) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1651) CFA_SP SP+0
          CFI (cfiCond1651) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1652 Using cfiCommon0
          CFI (cfiCond1652) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1652) Conditional ??CrossCallReturnLabel_602
          CFI (cfiCond1652) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1652) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1652) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1652) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1652) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1652) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1652) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1652) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1652) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1652) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1652) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1652) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1652) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1652) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1652) CFA_SP SP+0
          CFI (cfiCond1652) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1653 Using cfiCommon0
          CFI (cfiCond1653) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1653) Conditional ??CrossCallReturnLabel_603
          CFI (cfiCond1653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1653) CFA_SP SP+0
          CFI (cfiCond1653) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1654 Using cfiCommon0
          CFI (cfiCond1654) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1654) Conditional ??CrossCallReturnLabel_604
          CFI (cfiCond1654) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1654) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1654) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1654) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1654) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1654) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1654) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1654) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1654) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1654) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1654) CFA_SP SP+0
          CFI (cfiCond1654) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1655 Using cfiCommon0
          CFI (cfiCond1655) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1655) Conditional ??CrossCallReturnLabel_605
          CFI (cfiCond1655) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1655) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1655) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1655) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1655) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1655) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1655) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1655) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1655) CFA_SP SP+0
          CFI (cfiCond1655) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1656 Using cfiCommon1
          CFI (cfiPicker1656) NoFunction
          CFI (cfiPicker1656) Picker
        ADDC    A,#0x0
        MOV     ?V0 + 1,A
        RET
          CFI EndBlock cfiCond1649
          CFI EndBlock cfiCond1650
          CFI EndBlock cfiCond1651
          CFI EndBlock cfiCond1652
          CFI EndBlock cfiCond1653
          CFI EndBlock cfiCond1654
          CFI EndBlock cfiCond1655
          CFI EndBlock cfiPicker1656

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond1657 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_607
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1658 Using cfiCommon0
          CFI (cfiCond1658) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1658) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1658) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1658) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1658) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1658) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1658) CFA_SP SP+0
          CFI (cfiCond1658) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1659 Using cfiCommon1
          CFI (cfiPicker1659) NoFunction
          CFI (cfiPicker1659) Picker
        MOV     DPL,R6
        MOV     DPH,R7
          CFI EndBlock cfiCond1657
          CFI EndBlock cfiCond1658
          CFI EndBlock cfiPicker1659
        REQUIRE ??Subroutine252_0
        ; // Fall through to label ??Subroutine252_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine252_0:
          CFI Block cfiCond1660 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_606
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1661 Using cfiCommon0
          CFI (cfiCond1661) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1661) Conditional ??CrossCallReturnLabel_607
          CFI (cfiCond1661) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1661) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1661) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1661) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1661) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1661) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1661) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1661) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1661) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1661) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1661) CFA_SP SP+0
          CFI (cfiCond1661) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1662 Using cfiCommon0
          CFI (cfiCond1662) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1662) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1662) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1662) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1662) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1662) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1662) CFA_SP SP+0
          CFI (cfiCond1662) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1663 Using cfiCommon1
          CFI (cfiPicker1663) NoFunction
          CFI (cfiPicker1663) Picker
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_610:
        RET
          CFI EndBlock cfiCond1660
          CFI EndBlock cfiCond1661
          CFI EndBlock cfiCond1662
          CFI EndBlock cfiPicker1663

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond1664 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_607
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1665 Using cfiCommon0
          CFI (cfiCond1665) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1665) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_608
          CFI (cfiCond1665) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1665) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1665) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1665) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1665) CFA_SP SP+0
          CFI (cfiCond1665) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1666 Using cfiCommon0
          CFI (cfiCond1666) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1666) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_606
          CFI (cfiCond1666) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1666) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1666) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1666) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1666) CFA_SP SP+0
          CFI (cfiCond1666) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1667 Using cfiCommon0
          CFI (cfiCond1667) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1667) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_138
          CFI (cfiCond1667) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1667) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1667) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1667) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1667) CFA_SP SP+0
          CFI (cfiCond1667) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1668 Using cfiCommon0
          CFI (cfiCond1668) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1668) Conditional ??CrossCallReturnLabel_609, ??CrossCallReturnLabel_139
          CFI (cfiCond1668) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1668) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1668) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1668) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1668) CFA_SP SP+0
          CFI (cfiCond1668) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1669 Using cfiCommon1
          CFI (cfiPicker1669) NoFunction
          CFI (cfiPicker1669) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1664
          CFI EndBlock cfiCond1665
          CFI EndBlock cfiCond1666
          CFI EndBlock cfiCond1667
          CFI EndBlock cfiCond1668
          CFI EndBlock cfiPicker1669

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond1670 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1671 Using cfiCommon0
          CFI (cfiCond1671) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1671) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond1671) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1671) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1671) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1671) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1671) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1671) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1671) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1671) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1671) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1671) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1671) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1671) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1671) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1671) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1671) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1671) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1671) CFA_SP SP+0
          CFI (cfiCond1671) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1672 Using cfiCommon1
          CFI (cfiPicker1672) NoFunction
          CFI (cfiPicker1672) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf
        RET
          CFI EndBlock cfiCond1670
          CFI EndBlock cfiCond1671
          CFI EndBlock cfiPicker1672

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1673 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1674 Using cfiCommon0
          CFI (cfiCond1674) Function ZDO_ParseAddrRsp
          CFI (cfiCond1674) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond1674) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1674) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1674) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1674) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1674) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1674) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1674) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1674) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1674) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1674) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1674) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1674) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1674) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1674) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1674) CFA_SP SP+0
          CFI (cfiCond1674) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1675 Using cfiCommon0
          CFI (cfiCond1675) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1675) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond1675) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1675) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1675) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1675) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1675) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1675) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1675) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1675) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1675) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1675) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1675) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1675) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1675) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1675) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1675) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1675) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1675) CFA_SP SP+0
          CFI (cfiCond1675) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1676 Using cfiCommon0
          CFI (cfiCond1676) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1676) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond1676) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1676) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1676) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1676) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1676) CFA_SP SP+0
          CFI (cfiCond1676) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1677 Using cfiCommon1
          CFI (cfiPicker1677) NoFunction
          CFI (cfiPicker1677) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_228:
        RET
          CFI EndBlock cfiCond1673
          CFI EndBlock cfiCond1674
          CFI EndBlock cfiCond1675
          CFI EndBlock cfiCond1676
          CFI EndBlock cfiPicker1677

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond1678 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1679 Using cfiCommon0
          CFI (cfiCond1679) Function ZDO_ParseAddrRsp
          CFI (cfiCond1679) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_43
          CFI (cfiCond1679) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1679) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1679) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1679) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1679) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1679) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1679) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1679) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1679) CFA_SP SP+0
          CFI (cfiCond1679) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1680 Using cfiCommon0
          CFI (cfiCond1680) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1680) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_44
          CFI (cfiCond1680) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1680) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1680) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1680) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1680) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1680) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1680) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1680) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1680) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1680) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1680) CFA_SP SP+0
          CFI (cfiCond1680) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1681 Using cfiCommon0
          CFI (cfiCond1681) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1681) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_45
          CFI (cfiCond1681) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1681) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1681) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1681) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1681) CFA_SP SP+0
          CFI (cfiCond1681) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1682 Using cfiCommon0
          CFI (cfiCond1682) Function ZDO_ParseAddrRsp
          CFI (cfiCond1682) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_39
          CFI (cfiCond1682) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1682) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1682) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1682) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1682) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1682) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1682) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1682) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1682) CFA_SP SP+0
          CFI (cfiCond1682) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1683 Using cfiCommon0
          CFI (cfiCond1683) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1683) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_40
          CFI (cfiCond1683) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1683) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1683) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1683) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1683) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1683) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1683) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1683) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1683) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1683) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1683) CFA_SP SP+0
          CFI (cfiCond1683) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1684 Using cfiCommon0
          CFI (cfiCond1684) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1684) Conditional ??CrossCallReturnLabel_227, ??CrossCallReturnLabel_41
          CFI (cfiCond1684) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1684) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1684) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1684) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1684) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1684) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1684) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1684) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1684) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1684) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1684) CFA_SP SP+0
          CFI (cfiCond1684) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1685 Using cfiCommon1
          CFI (cfiPicker1685) NoFunction
          CFI (cfiPicker1685) Picker
        LCALL   ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_598:
        INC     R6
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond1678
          CFI EndBlock cfiCond1679
          CFI EndBlock cfiCond1680
          CFI EndBlock cfiCond1681
          CFI EndBlock cfiCond1682
          CFI EndBlock cfiCond1683
          CFI EndBlock cfiCond1684
          CFI EndBlock cfiPicker1685

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond1686 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1687 Using cfiCommon0
          CFI (cfiCond1687) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1687) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond1687) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1687) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1687) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1687) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1687) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1687) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1687) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1687) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1687) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1687) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1687) CFA_SP SP+0
          CFI (cfiCond1687) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1688 Using cfiCommon0
          CFI (cfiCond1688) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1688) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond1688) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1688) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1688) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1688) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1688) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1688) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1688) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1688) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1688) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1688) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1688) CFA_SP SP+0
          CFI (cfiCond1688) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1689 Using cfiCommon1
          CFI (cfiPicker1689) NoFunction
          CFI (cfiPicker1689) Picker
        LCALL   ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_227:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1686
          CFI EndBlock cfiCond1687
          CFI EndBlock cfiCond1688
          CFI EndBlock cfiPicker1689
// 2870 
// 2871 /*********************************************************************
// 2872  * @fn          ZDO_ParseMgmtRtgRsp
// 2873  *
// 2874  * @brief       This function parses the incoming Management
// 2875  *              Routing response.
// 2876  *
// 2877  * @param       inMsg - incoming message
// 2878  *
// 2879  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2880  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2881  *          by the calling function [osal_mem_free()].
// 2882  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2883 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1690 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 2884 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2885   ZDO_MgmtRtgRsp_t *pRsp;
// 2886   uint8 status;
// 2887   uint8 rtgCount = 0;
        MOV     ?V0 + 2,#0x0
// 2888   uint8 startIndex = 0;
        MOV     ?V0 + 1,#0x0
// 2889   uint8 rtgListCount = 0;
        MOV     ?V0 + 0,#0x0
// 2890   uint8 *msg;
// 2891 
// 2892   msg = inMsg->asdu;
        LCALL   ?Subroutine63 & 0xFFFF
// 2893 
// 2894   status = *msg++;
??CrossCallReturnLabel_612:
        MOV     ?V0 + 3,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 2895   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtRtgRsp_0
// 2896   {
// 2897     rtgCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 2,A
        INC     DPTR
// 2898     startIndex = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 1,A
        INC     DPTR
// 2899     rtgListCount = *msg++;
        MOVX    A,@DPTR
        MOV     ?V0 + 0,A
        INC     DPTR
        INC     R6
        INC     R6
        INC     R6
        MOV     R7,DPH
// 2900   }
// 2901 
// 2902   // Allocate a buffer big enough to handle the list
// 2903   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 2904           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 0
        MOV     B,#0x7
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL   ??osal_mem_alloc?relay
// 2905   if ( pRsp )
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_ParseMgmtRtgRsp_1
// 2906   {
// 2907     uint8 x;
// 2908     rtgItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R0,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R1,A
// 2909     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 3
        MOVX    @DPTR,A
// 2910     pRsp->rtgCount = rtgCount;
        INC     DPTR
        MOV     A,?V0 + 2
        LCALL   ?Subroutine51 & 0xFFFF
// 2911     pRsp->startIndex = startIndex;
??CrossCallReturnLabel_82:
        MOV     A,?V0 + 1
        LCALL   ?Subroutine51 & 0xFFFF
// 2912     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_83:
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
// 2913 
// 2914     for ( x = 0; x < rtgListCount; x++ )
        MOV     ?V0 + 1,#0x0
        SJMP    ??ZDO_ParseMgmtRtgRsp_2
// 2915     {
// 2916       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_173:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine262_0 & 0xFFFF
// 2917       msg += 2;
// 2918       pList->status = *msg++;
??CrossCallReturnLabel_689:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine49 & 0xFFFF
// 2919       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_78:
        LCALL   ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_174:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine263_0 & 0xFFFF
// 2920       msg += 2;
// 2921       pList++;
??CrossCallReturnLabel_692:
        MOV     A,R0
        ADD     A,#0x7
        MOV     R0,A
        MOV     A,R1
        ADDC    A,#0x0
        MOV     R1,A
// 2922     }
        INC     ?V0 + 1
??ZDO_ParseMgmtRtgRsp_2:
        MOV     A,?V0 + 1
        CLR     C
        SUBB    A,?V0 + 0
        JC      ??ZDO_ParseMgmtRtgRsp_3
// 2923   }
// 2924 
// 2925   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP    ??Subroutine198_0 & 0xFFFF
          CFI EndBlock cfiBlock1690
// 2926 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1691 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_212
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1692 Using cfiCommon0
          CFI (cfiCond1692) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1692) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond1692) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1692) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1692) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1692) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1692) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1692) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1692) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1692) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1692) CFA_SP SP+0
          CFI (cfiCond1692) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1693 Using cfiCommon0
          CFI (cfiCond1693) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1693) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond1693) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1693) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1693) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1693) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1693) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1693) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1693) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1693) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1693) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1693) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1693) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1693) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1693) CFA_SP SP+0
          CFI (cfiCond1693) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1694 Using cfiCommon1
          CFI (cfiPicker1694) NoFunction
          CFI (cfiPicker1694) Picker
        MUL     AB
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,B
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1691
          CFI EndBlock cfiCond1692
          CFI EndBlock cfiCond1693
          CFI EndBlock cfiPicker1694

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond1695 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1696 Using cfiCommon0
          CFI (cfiCond1696) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1696) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond1696) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1696) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1696) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1696) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1696) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1696) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1696) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1696) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1696) CFA_SP SP+0
          CFI (cfiCond1696) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1697 Using cfiCommon1
          CFI (cfiPicker1697) NoFunction
          CFI (cfiPicker1697) Picker
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     A,?V0 + 2
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond1695
          CFI EndBlock cfiCond1696
          CFI EndBlock cfiPicker1697

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1698 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_611
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1699 Using cfiCommon0
          CFI (cfiCond1699) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1699) Conditional ??CrossCallReturnLabel_612
          CFI (cfiCond1699) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1699) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1699) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1699) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1699) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1699) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1699) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1699) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1699) CFA_SP SP+0
          CFI (cfiCond1699) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1700 Using cfiCommon0
          CFI (cfiCond1700) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1700) Conditional ??CrossCallReturnLabel_613
          CFI (cfiCond1700) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1700) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1700) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1700) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1700) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1700) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1700) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1700) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1700) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1700) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1700) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1700) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1700) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1700) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1700) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1700) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1700) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1700) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1700) CFA_SP SP+0
          CFI (cfiCond1700) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1701 Using cfiCommon1
          CFI (cfiPicker1701) NoFunction
          CFI (cfiPicker1701) Picker
        LCALL   ?Subroutine183 & 0xFFFF
          CFI EndBlock cfiCond1698
          CFI EndBlock cfiCond1699
          CFI EndBlock cfiCond1700
          CFI EndBlock cfiPicker1701
??CrossCallReturnLabel_265:
        REQUIRE ??Subroutine253_0
        ; // Fall through to label ??Subroutine253_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine253_0:
          CFI Block cfiCond1702 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_614
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1703 Using cfiCommon0
          CFI (cfiCond1703) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1703) Conditional ??CrossCallReturnLabel_611
          CFI (cfiCond1703) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1703) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1703) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1703) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1703) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1703) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1703) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1703) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1703) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1703) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1703) CFA_SP SP+0
          CFI (cfiCond1703) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1704 Using cfiCommon0
          CFI (cfiCond1704) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1704) Conditional ??CrossCallReturnLabel_612
          CFI (cfiCond1704) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1704) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1704) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1704) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1704) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1704) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1704) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1704) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1704) CFA_SP SP+0
          CFI (cfiCond1704) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1705 Using cfiCommon0
          CFI (cfiCond1705) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1705) Conditional ??CrossCallReturnLabel_613
          CFI (cfiCond1705) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1705) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1705) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1705) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1705) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1705) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1705) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1705) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1705) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1705) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1705) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1705) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1705) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1705) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1705) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1705) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1705) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1705) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1705) CFA_SP SP+0
          CFI (cfiCond1705) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1706 Using cfiCommon1
          CFI (cfiPicker1706) NoFunction
          CFI (cfiPicker1706) Picker
        LCALL   ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_620:
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1702
          CFI EndBlock cfiCond1703
          CFI EndBlock cfiCond1704
          CFI EndBlock cfiCond1705
          CFI EndBlock cfiPicker1706

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine183:
          CFI Block cfiCond1707 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_320
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1708 Using cfiCommon0
          CFI (cfiCond1708) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1708) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_321
          CFI (cfiCond1708) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1708) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1708) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1708) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1708) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1708) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1708) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1708) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1708) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1708) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1708) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1708) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1708) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1708) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1708) CFA_SP SP+0
          CFI (cfiCond1708) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond1709 Using cfiCommon0
          CFI (cfiCond1709) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1709) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_322
          CFI (cfiCond1709) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1709) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1709) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1709) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1709) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1709) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1709) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1709) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1709) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1709) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1709) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1709) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1709) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1709) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1709) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1709) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1709) CFA_SP SP+0
          CFI (cfiCond1709) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1710 Using cfiCommon0
          CFI (cfiCond1710) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1710) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_10
          CFI (cfiCond1710) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1710) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1710) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1710) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1710) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1710) CFA_SP SP+0
          CFI (cfiCond1710) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1711 Using cfiCommon0
          CFI (cfiCond1711) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1711) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_11
          CFI (cfiCond1711) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1711) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1711) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1711) CFA_SP SP+0
          CFI (cfiCond1711) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1712 Using cfiCommon0
          CFI (cfiCond1712) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1712) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_611
          CFI (cfiCond1712) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1712) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1712) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1712) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1712) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1712) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1712) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1712) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1712) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1712) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1712) CFA_SP SP+0
          CFI (cfiCond1712) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1713 Using cfiCommon0
          CFI (cfiCond1713) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1713) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_612
          CFI (cfiCond1713) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1713) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1713) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1713) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1713) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1713) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1713) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1713) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1713) CFA_SP SP+0
          CFI (cfiCond1713) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1714 Using cfiCommon0
          CFI (cfiCond1714) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1714) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_613
          CFI (cfiCond1714) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1714) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1714) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1714) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1714) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1714) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1714) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1714) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1714) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1714) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1714) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1714) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1714) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1714) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1714) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1714) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1714) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1714) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1714) CFA_SP SP+0
          CFI (cfiCond1714) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1715 Using cfiCommon0
          CFI (cfiCond1715) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1715) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_187
          CFI (cfiCond1715) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1715) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1715) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1715) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1715) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1715) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1715) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1715) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1715) CFA_SP SP+0
          CFI (cfiCond1715) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1716 Using cfiCommon0
          CFI (cfiCond1716) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1716) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_188
          CFI (cfiCond1716) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1716) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1716) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1716) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1716) CFA_SP SP+0
          CFI (cfiCond1716) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1717 Using cfiCommon1
          CFI (cfiPicker1717) NoFunction
          CFI (cfiPicker1717) Picker
        LCALL   ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_586:
        MOV     A,R3
        RET
          CFI EndBlock cfiCond1707
          CFI EndBlock cfiCond1708
          CFI EndBlock cfiCond1709
          CFI EndBlock cfiCond1710
          CFI EndBlock cfiCond1711
          CFI EndBlock cfiCond1712
          CFI EndBlock cfiCond1713
          CFI EndBlock cfiCond1714
          CFI EndBlock cfiCond1715
          CFI EndBlock cfiCond1716
          CFI EndBlock cfiPicker1717

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond1718 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1719 Using cfiCommon0
          CFI (cfiCond1719) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1719) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1719) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1719) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1719) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1719) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1719) CFA_SP SP+0
          CFI (cfiCond1719) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1720 Using cfiCommon0
          CFI (cfiCond1720) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1720) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1720) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1720) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1720) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1720) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1720) CFA_SP SP+0
          CFI (cfiCond1720) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1721 Using cfiCommon0
          CFI (cfiCond1721) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1721) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1721) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1721) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1721) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1721) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1721) CFA_SP SP+0
          CFI (cfiCond1721) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1722 Using cfiCommon1
          CFI (cfiPicker1722) NoFunction
          CFI (cfiPicker1722) Picker
        LCALL   ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_584:
        MOV     A,R3
          CFI EndBlock cfiCond1718
          CFI EndBlock cfiCond1719
          CFI EndBlock cfiCond1720
          CFI EndBlock cfiCond1721
          CFI EndBlock cfiPicker1722
        REQUIRE ??Subroutine254_0
        ; // Fall through to label ??Subroutine254_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine254_0:
          CFI Block cfiCond1723 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_611
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1724 Using cfiCommon0
          CFI (cfiCond1724) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1724) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_612
          CFI (cfiCond1724) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1724) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1724) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1724) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1724) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1724) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1724) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1724) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1724) CFA_SP SP+0
          CFI (cfiCond1724) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1725 Using cfiCommon0
          CFI (cfiCond1725) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1725) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_613
          CFI (cfiCond1725) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1725) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1725) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1725) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1725) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1725) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1725) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1725) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1725) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1725) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1725) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1725) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1725) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1725) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1725) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1725) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1725) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1725) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1725) CFA_SP SP+0
          CFI (cfiCond1725) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1726 Using cfiCommon0
          CFI (cfiCond1726) Function ZDO_ParseAddrRsp
          CFI (cfiCond1726) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_614
          CFI (cfiCond1726) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1726) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1726) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1726) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1726) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1726) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1726) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1726) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1726) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1726) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1726) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1726) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1726) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1726) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1726) CFA_SP SP+0
          CFI (cfiCond1726) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1727 Using cfiCommon0
          CFI (cfiCond1727) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1727) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI (cfiCond1727) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1727) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1727) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1727) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1727) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1727) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1727) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1727) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1727) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1727) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1727) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1727) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1727) CFA_SP SP+0
          CFI (cfiCond1727) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1728 Using cfiCommon0
          CFI (cfiCond1728) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1728) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1728) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1728) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1728) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1728) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1728) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1728) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1728) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1728) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1728) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1728) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1728) CFA_SP SP+0
          CFI (cfiCond1728) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1729 Using cfiCommon0
          CFI (cfiCond1729) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1729) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1729) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1729) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1729) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1729) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1729) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1729) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1729) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1729) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1729) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1729) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1729) CFA_SP SP+0
          CFI (cfiCond1729) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1730 Using cfiCommon0
          CFI (cfiCond1730) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1730) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1730) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1730) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1730) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1730) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1730) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1730) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1730) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1730) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1730) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1730) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1730) CFA_SP SP+0
          CFI (cfiCond1730) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1731 Using cfiCommon1
          CFI (cfiPicker1731) NoFunction
          CFI (cfiPicker1731) Picker
        LCALL   ?Subroutine190 & 0xFFFF
          CFI EndBlock cfiCond1723
          CFI EndBlock cfiCond1724
          CFI EndBlock cfiCond1725
          CFI EndBlock cfiCond1726
          CFI EndBlock cfiCond1727
          CFI EndBlock cfiCond1728
          CFI EndBlock cfiCond1729
          CFI EndBlock cfiCond1730
          CFI EndBlock cfiPicker1731
??CrossCallReturnLabel_674:
        REQUIRE ??Subroutine255_0
        ; // Fall through to label ??Subroutine255_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine255_0:
          CFI Block cfiCond1732 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_615
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1733 Using cfiCommon0
          CFI (cfiCond1733) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1733) Conditional ??CrossCallReturnLabel_616
          CFI (cfiCond1733) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1733) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1733) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1733) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1733) CFA_SP SP+0
          CFI (cfiCond1733) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1734 Using cfiCommon0
          CFI (cfiCond1734) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1734) Conditional ??CrossCallReturnLabel_617, ??CrossCallReturnLabel_10
          CFI (cfiCond1734) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1734) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1734) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1734) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1734) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1734) CFA_SP SP+0
          CFI (cfiCond1734) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1735 Using cfiCommon0
          CFI (cfiCond1735) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1735) Conditional ??CrossCallReturnLabel_617, ??CrossCallReturnLabel_11
          CFI (cfiCond1735) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1735) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1735) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1735) CFA_SP SP+0
          CFI (cfiCond1735) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1736 Using cfiCommon0
          CFI (cfiCond1736) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1736) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_611
          CFI (cfiCond1736) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1736) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1736) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1736) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1736) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1736) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1736) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1736) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1736) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1736) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1736) CFA_SP SP+0
          CFI (cfiCond1736) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1737 Using cfiCommon0
          CFI (cfiCond1737) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1737) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_612
          CFI (cfiCond1737) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1737) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1737) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1737) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1737) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1737) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1737) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1737) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1737) CFA_SP SP+0
          CFI (cfiCond1737) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1738 Using cfiCommon0
          CFI (cfiCond1738) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1738) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_613
          CFI (cfiCond1738) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1738) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1738) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1738) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1738) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1738) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1738) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1738) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1738) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1738) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1738) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1738) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1738) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1738) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1738) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1738) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1738) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1738) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1738) CFA_SP SP+0
          CFI (cfiCond1738) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1739 Using cfiCommon0
          CFI (cfiCond1739) Function ZDO_ParseAddrRsp
          CFI (cfiCond1739) Conditional ??CrossCallReturnLabel_620, ??CrossCallReturnLabel_614
          CFI (cfiCond1739) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1739) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1739) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1739) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1739) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1739) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1739) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1739) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1739) CFA_SP SP+0
          CFI (cfiCond1739) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1740 Using cfiCommon0
          CFI (cfiCond1740) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1740) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_185
          CFI (cfiCond1740) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1740) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1740) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1740) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1740) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1740) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1740) CFA_SP SP+0
          CFI (cfiCond1740) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1741 Using cfiCommon0
          CFI (cfiCond1741) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1741) Conditional ??CrossCallReturnLabel_619, ??CrossCallReturnLabel_186
          CFI (cfiCond1741) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1741) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1741) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1741) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1741) CFA_SP SP+0
          CFI (cfiCond1741) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1742 Using cfiCommon0
          CFI (cfiCond1742) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1742) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_153
          CFI (cfiCond1742) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1742) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1742) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1742) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1742) CFA_SP SP+0
          CFI (cfiCond1742) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1743 Using cfiCommon0
          CFI (cfiCond1743) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1743) Conditional ??CrossCallReturnLabel_618, ??CrossCallReturnLabel_154
          CFI (cfiCond1743) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1743) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1743) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1743) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1743) CFA_SP SP+0
          CFI (cfiCond1743) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1744 Using cfiCommon1
          CFI (cfiPicker1744) NoFunction
          CFI (cfiPicker1744) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1732
          CFI EndBlock cfiCond1733
          CFI EndBlock cfiCond1734
          CFI EndBlock cfiCond1735
          CFI EndBlock cfiCond1736
          CFI EndBlock cfiCond1737
          CFI EndBlock cfiCond1738
          CFI EndBlock cfiCond1739
          CFI EndBlock cfiCond1740
          CFI EndBlock cfiCond1741
          CFI EndBlock cfiCond1742
          CFI EndBlock cfiCond1743
          CFI EndBlock cfiPicker1744

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond1745 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1746 Using cfiCommon0
          CFI (cfiCond1746) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1746) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond1746) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1746) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1746) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1746) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1746) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1746) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1746) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1746) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1746) CFA_SP SP+0
          CFI (cfiCond1746) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1747 Using cfiCommon0
          CFI (cfiCond1747) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1747) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond1747) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1747) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1747) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1747) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1747) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1747) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1747) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1747) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1747) CFA_SP SP+0
          CFI (cfiCond1747) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1748 Using cfiCommon1
          CFI (cfiPicker1748) NoFunction
          CFI (cfiPicker1748) Picker
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_233:
        INC     DPTR
        RET
          CFI EndBlock cfiCond1745
          CFI EndBlock cfiCond1746
          CFI EndBlock cfiCond1747
          CFI EndBlock cfiPicker1748

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond1749 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_235
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1750 Using cfiCommon0
          CFI (cfiCond1750) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1750) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_81
          CFI (cfiCond1750) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1750) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1750) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1750) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1750) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1750) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1750) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1750) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1750) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1750) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1750) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1750) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1750) CFA_SP SP+0
          CFI (cfiCond1750) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1751 Using cfiCommon0
          CFI (cfiCond1751) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1751) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_82
          CFI (cfiCond1751) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1751) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1751) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1751) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1751) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1751) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1751) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1751) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1751) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1751) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1751) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1751) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1751) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1751) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1751) CFA_SP SP+0
          CFI (cfiCond1751) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1752 Using cfiCommon0
          CFI (cfiCond1752) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1752) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_83
          CFI (cfiCond1752) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1752) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1752) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1752) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1752) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1752) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1752) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1752) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1752) CFA_SP SP+0
          CFI (cfiCond1752) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1753 Using cfiCommon0
          CFI (cfiCond1753) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1753) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_17
          CFI (cfiCond1753) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1753) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1753) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1753) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1753) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1753) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1753) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1753) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1753) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1753) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1753) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1753) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1753) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1753) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1753) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1753) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1753) CFA_SP SP+0
          CFI (cfiCond1753) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1754 Using cfiCommon0
          CFI (cfiCond1754) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1754) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_18
          CFI (cfiCond1754) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1754) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1754) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1754) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1754) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1754) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1754) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1754) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1754) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1754) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1754) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1754) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1754) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1754) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1754) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1754) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1754) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1754) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1754) CFA_SP SP+0
          CFI (cfiCond1754) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1755 Using cfiCommon1
          CFI (cfiPicker1755) NoFunction
          CFI (cfiPicker1755) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        RET
          CFI EndBlock cfiCond1749
          CFI EndBlock cfiCond1750
          CFI EndBlock cfiCond1751
          CFI EndBlock cfiCond1752
          CFI EndBlock cfiCond1753
          CFI EndBlock cfiCond1754
          CFI EndBlock cfiPicker1755

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond1756 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1757 Using cfiCommon0
          CFI (cfiCond1757) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1757) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond1757) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1757) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1757) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1757) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1757) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1757) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1757) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1757) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1757) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1757) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1757) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1757) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1757) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1757) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1757) CFA_SP SP+0
          CFI (cfiCond1757) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1758 Using cfiCommon1
          CFI (cfiPicker1758) NoFunction
          CFI (cfiPicker1758) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_223:
        RET
          CFI EndBlock cfiCond1756
          CFI EndBlock cfiCond1757
          CFI EndBlock cfiPicker1758

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond1759 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_12
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1760 Using cfiCommon0
          CFI (cfiCond1760) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1760) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_13
          CFI (cfiCond1760) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1760) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1760) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1760) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1760) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1760) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1760) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1760) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1760) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1760) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1760) CFA_SP SP+0
          CFI (cfiCond1760) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1761 Using cfiCommon0
          CFI (cfiCond1761) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1761) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_14
          CFI (cfiCond1761) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1761) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1761) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1761) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1761) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1761) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1761) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1761) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1761) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1761) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1761) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1761) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1761) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1761) CFA_SP SP+0
          CFI (cfiCond1761) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1762 Using cfiCommon0
          CFI (cfiCond1762) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1762) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_77
          CFI (cfiCond1762) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1762) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1762) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1762) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1762) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1762) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1762) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1762) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1762) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1762) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1762) CFA_SP SP+0
          CFI (cfiCond1762) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1763 Using cfiCommon0
          CFI (cfiCond1763) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1763) Conditional ??CrossCallReturnLabel_223, ??CrossCallReturnLabel_78
          CFI (cfiCond1763) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1763) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1763) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1763) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1763) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1763) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1763) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1763) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1763) CFA_SP SP+0
          CFI (cfiCond1763) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1764 Using cfiCommon1
          CFI (cfiPicker1764) NoFunction
          CFI (cfiPicker1764) Picker
        LCALL   ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_597:
        MOV     R6,DPL
        MOV     R7,DPH
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1759
          CFI EndBlock cfiCond1760
          CFI EndBlock cfiCond1761
          CFI EndBlock cfiCond1762
          CFI EndBlock cfiCond1763
          CFI EndBlock cfiPicker1764
// 2927 
// 2928 /*********************************************************************
// 2929  * @fn          ZDO_ParseMgmtBindRsp
// 2930  *
// 2931  * @brief       This function parses the incoming Management
// 2932  *              Binding response.
// 2933  *
// 2934  * @param       inMsg - pointer to message to parse
// 2935  *
// 2936  * @return      a pointer to parsed response structure (NULL if not allocated).
// 2937  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 2938  *          by the calling function [osal_mem_free()].
// 2939  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2940 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1765 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 2941 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
// 2942   ZDO_MgmtBindRsp_t *pRsp;
// 2943   uint8 status;
// 2944   uint8 bindingCount = 0;
        MOV     ?V0 + 6,#0x0
// 2945   uint8 startIndex = 0;
        MOV     ?V0 + 5,#0x0
// 2946   uint8 bindingListCount = 0;
        MOV     ?V0 + 4,#0x0
// 2947   uint8 *msg;
// 2948 
// 2949   msg = inMsg->asdu;
        LCALL   ?Subroutine66 & 0xFFFF
// 2950 
// 2951   status = *msg++;
// 2952   if ( status == ZSuccess )
??CrossCallReturnLabel_111:
        JNZ     ??CrossCallReturnLabel_127
// 2953   {
// 2954     bindingCount = *msg++;
        LCALL   ?Subroutine75 & 0xFFFF
// 2955     startIndex = *msg++;
// 2956     bindingListCount = *msg++;
// 2957   }
// 2958 
// 2959   // Allocate a buffer big enough to handle the list
// 2960   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 2961           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??CrossCallReturnLabel_127:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        MOV     B,#0x15
        LCALL   ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_214:
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 0,R2
        MOV     ?V0 + 1,R3
// 2962   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 1
        JNZ     $+5
        LJMP    ??ZDO_ParseMgmtBindRsp_0 & 0xFFFF
// 2963   {
// 2964     uint8 x;
// 2965     apsBindingItem_t *pList = pRsp->list;
        MOV     A,R2
        ADD     A,#0x4
        MOV     R6,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R7,A
// 2966     pRsp->status = status;
        LCALL   ?Subroutine19 & 0xFFFF
// 2967     pRsp->bindingCount = bindingCount;
// 2968     pRsp->startIndex = startIndex;
// 2969     pRsp->bindingListCount = bindingListCount;
// 2970 
// 2971     for ( x = 0; x < bindingListCount; x++ )
??CrossCallReturnLabel_18:
        MOV     ?V0 + 5,#0x0
        SJMP    ??ZDO_ParseMgmtBindRsp_1
// 2972     {
// 2973       osal_cpyExtAddr( pList->srcAddr, msg );
// 2974       msg += Z_EXTADDR_LEN;
// 2975       pList->srcEP = *msg++;
// 2976 
// 2977       // Get the Cluster ID
// 2978 
// 2979       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 2980       msg += 2;
// 2981       pList->dstAddr.addrMode = *msg++;
// 2982       if ( pList->dstAddr.addrMode == Addr64Bit )
// 2983       {
// 2984         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 2985         msg += Z_EXTADDR_LEN;
// 2986         pList->dstEP = *msg++;
// 2987       }
// 2988       else
// 2989       {
// 2990         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_2:
        LCALL   ?Subroutine91 & 0xFFFF
// 2991         msg += 2;
// 2992       }
??CrossCallReturnLabel_152:
        MOV     A,R6
        ADD     A,#0xb
        MOV     DPL,A
        MOV     A,R7
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_636:
        MOV     A,R0
        LCALL   ?Subroutine35 & 0xFFFF
// 2993 
// 2994       pList++;
??CrossCallReturnLabel_48:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        INC     ?V0 + 5
??ZDO_ParseMgmtBindRsp_1:
        MOV     A,?V0 + 5
        CLR     C
        SUBB    A,?V0 + 4
        JNC     ??ZDO_ParseMgmtBindRsp_0
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
        LCALL   ?Subroutine123 & 0xFFFF
??CrossCallReturnLabel_676:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_5:
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_286:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_49:
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        LCALL   ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV     A,R0
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_6:
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDO_ParseMgmtBindRsp_2
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V0 + 2
        MOV     R5,?V0 + 3
        LCALL   ?Subroutine142 & 0xFFFF
??CrossCallReturnLabel_219:
        LCALL   ??sAddrExtCpy?relay
        LCALL   ?Subroutine123 & 0xFFFF
// 2995     }
// 2996   }
??CrossCallReturnLabel_677:
        PUSH    A
          CFI CFA_SP SP+-1
        LCALL   ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL   ??Subroutine258_0 & 0xFFFF
??CrossCallReturnLabel_637:
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_7:
        SJMP    ??CrossCallReturnLabel_48
// 2997 
// 2998   return ( pRsp );
??ZDO_ParseMgmtBindRsp_0:
        MOV     R2,?V0 + 0
        MOV     R3,?V0 + 1
        LJMP    ?Subroutine9 & 0xFFFF
          CFI EndBlock cfiBlock1765
// 2999 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine186:
          CFI Block cfiCond1766 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_150
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1767 Using cfiCommon0
          CFI (cfiCond1767) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1767) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_151
          CFI (cfiCond1767) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1767) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1767) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1767) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1767) CFA_SP SP+0
          CFI (cfiCond1767) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1768 Using cfiCommon0
          CFI (cfiCond1768) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1768) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_152
          CFI (cfiCond1768) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1768) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1768) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1768) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1768) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1768) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1768) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1768) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1768) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1768) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1768) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1768) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1768) CFA_SP SP+0
          CFI (cfiCond1768) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1769 Using cfiCommon0
          CFI (cfiCond1769) Function ZDO_ParseAddrRsp
          CFI (cfiCond1769) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_146
          CFI (cfiCond1769) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1769) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1769) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1769) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1769) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1769) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1769) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1769) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1769) CFA_SP SP+0
          CFI (cfiCond1769) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1770 Using cfiCommon0
          CFI (cfiCond1770) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1770) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_147
          CFI (cfiCond1770) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1770) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1770) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1770) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1770) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1770) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1770) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1770) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1770) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1770) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1770) CFA_SP SP+0
          CFI (cfiCond1770) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1771 Using cfiCommon0
          CFI (cfiCond1771) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1771) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_114
          CFI (cfiCond1771) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1771) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1771) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1771) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1771) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1771) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1771) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1771) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1771) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1771) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1771) CFA_SP SP+0
          CFI (cfiCond1771) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1772 Using cfiCommon0
          CFI (cfiCond1772) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1772) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_115
          CFI (cfiCond1772) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1772) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1772) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1772) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1772) CFA_SP SP+0
          CFI (cfiCond1772) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1773 Using cfiCommon0
          CFI (cfiCond1773) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1773) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond1773) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1773) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1773) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1773) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1773) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1773) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1773) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1773) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1773) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1773) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1773) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1773) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1773) CFA_SP SP+0
          CFI (cfiCond1773) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1774 Using cfiCommon0
          CFI (cfiCond1774) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1774) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_282
          CFI (cfiCond1774) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1774) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1774) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1774) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1774) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1774) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1774) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1774) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1774) CFA_SP SP+0
          CFI (cfiCond1774) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1775 Using cfiCommon0
          CFI (cfiCond1775) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1775) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_283
          CFI (cfiCond1775) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1775) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1775) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1775) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1775) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1775) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1775) CFA_SP SP+0
          CFI (cfiCond1775) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1776 Using cfiCommon0
          CFI (cfiCond1776) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1776) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281
          CFI (cfiCond1776) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1776) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1776) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1776) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1776) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1776) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1776) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1776) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1776) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1776) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1776) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1776) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1776) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1776) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1776) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1776) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1776) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1776) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1776) CFA_SP SP+0
          CFI (cfiCond1776) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1777 Using cfiCommon0
          CFI (cfiCond1777) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1777) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_175
          CFI (cfiCond1777) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1777) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1777) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1777) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1777) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1777) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1777) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1777) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1777) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1777) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1777) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1777) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1777) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1777) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1777) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1777) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1777) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1777) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1777) CFA_SP SP+0
          CFI (cfiCond1777) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1778 Using cfiCommon0
          CFI (cfiCond1778) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1778) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_176
          CFI (cfiCond1778) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1778) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1778) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1778) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1778) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1778) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1778) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1778) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1778) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1778) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1778) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1778) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1778) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1778) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1778) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1778) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1778) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1778) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1778) CFA_SP SP+0
          CFI (cfiCond1778) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1779 Using cfiCommon1
          CFI (cfiPicker1779) NoFunction
          CFI (cfiPicker1779) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        RET
          CFI EndBlock cfiCond1766
          CFI EndBlock cfiCond1767
          CFI EndBlock cfiCond1768
          CFI EndBlock cfiCond1769
          CFI EndBlock cfiCond1770
          CFI EndBlock cfiCond1771
          CFI EndBlock cfiCond1772
          CFI EndBlock cfiCond1773
          CFI EndBlock cfiCond1774
          CFI EndBlock cfiCond1775
          CFI EndBlock cfiCond1776
          CFI EndBlock cfiCond1777
          CFI EndBlock cfiCond1778
          CFI EndBlock cfiPicker1779

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond1780 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1781 Using cfiCommon0
          CFI (cfiCond1781) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1781) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond1781) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1781) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1781) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1781) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1781) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1781) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1781) CFA_SP SP+0
          CFI (cfiCond1781) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1782 Using cfiCommon0
          CFI (cfiCond1782) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1782) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond1782) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1782) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1782) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1782) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1782) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1782) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1782) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1782) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1782) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1782) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1782) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1782) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1782) CFA_SP SP+0
          CFI (cfiCond1782) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1783 Using cfiCommon1
          CFI (cfiPicker1783) NoFunction
          CFI (cfiPicker1783) Picker
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1780
          CFI EndBlock cfiCond1781
          CFI EndBlock cfiCond1782
          CFI EndBlock cfiPicker1783

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond1784 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_650
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-1
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1785 Using cfiCommon0
          CFI (cfiCond1785) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1785) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1785) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1785) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1785) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1785) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1785) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1785) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1785) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1785) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1785) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1785) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1785) CFA_SP SP+-1
          CFI (cfiCond1785) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1786 Using cfiCommon1
          CFI (cfiPicker1786) NoFunction
          CFI (cfiPicker1786) Picker
        MOV     A,?V0 + 0
        ADD     A,#0xe
          CFI EndBlock cfiCond1784
          CFI EndBlock cfiCond1785
          CFI EndBlock cfiPicker1786
        REQUIRE ??Subroutine256_0
        ; // Fall through to label ??Subroutine256_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine256_0:
          CFI Block cfiCond1787 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_639
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1788 Using cfiCommon0
          CFI (cfiCond1788) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1788) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1788) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1788) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1788) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1788) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1788) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1788) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1788) CFA_SP SP+-1
          CFI (cfiCond1788) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1789 Using cfiCommon0
          CFI (cfiCond1789) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1789) Conditional ??CrossCallReturnLabel_641
          CFI (cfiCond1789) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1789) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1789) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1789) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1789) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1789) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1789) CFA_SP SP+-1
          CFI (cfiCond1789) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1790 Using cfiCommon0
          CFI (cfiCond1790) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1790) Conditional ??CrossCallReturnLabel_642
          CFI (cfiCond1790) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1790) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1790) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1790) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1790) CFA_SP SP+-1
          CFI (cfiCond1790) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1791 Using cfiCommon0
          CFI (cfiCond1791) Function ZDO_ParseAddrRsp
          CFI (cfiCond1791) Conditional ??CrossCallReturnLabel_643
          CFI (cfiCond1791) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1791) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1791) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1791) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1791) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1791) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1791) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1791) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1791) CFA_SP SP+-1
          CFI (cfiCond1791) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1792 Using cfiCommon0
          CFI (cfiCond1792) Function ZDO_ParseAddrRsp
          CFI (cfiCond1792) Conditional ??CrossCallReturnLabel_644
          CFI (cfiCond1792) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1792) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1792) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1792) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1792) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1792) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1792) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1792) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1792) CFA_SP SP+-1
          CFI (cfiCond1792) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1793 Using cfiCommon0
          CFI (cfiCond1793) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1793) Conditional ??CrossCallReturnLabel_645
          CFI (cfiCond1793) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1793) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1793) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1793) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1793) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1793) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1793) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1793) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1793) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1793) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1793) CFA_SP SP+-1
          CFI (cfiCond1793) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1794 Using cfiCommon0
          CFI (cfiCond1794) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1794) Conditional ??CrossCallReturnLabel_646
          CFI (cfiCond1794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1794) CFA_SP SP+-1
          CFI (cfiCond1794) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1795 Using cfiCommon0
          CFI (cfiCond1795) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1795) Conditional ??CrossCallReturnLabel_647
          CFI (cfiCond1795) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1795) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1795) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1795) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1795) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1795) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1795) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1795) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1795) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1795) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1795) CFA_SP SP+-1
          CFI (cfiCond1795) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1796 Using cfiCommon0
          CFI (cfiCond1796) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1796) Conditional ??CrossCallReturnLabel_648
          CFI (cfiCond1796) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1796) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1796) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1796) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1796) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1796) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1796) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1796) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1796) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1796) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1796) CFA_SP SP+-1
          CFI (cfiCond1796) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1797 Using cfiCommon0
          CFI (cfiCond1797) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1797) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1797) CFA_SP SP+-1
          CFI (cfiCond1797) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1798 Using cfiCommon0
          CFI (cfiCond1798) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1798) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1798) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1798) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1798) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1798) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1798) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1798) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1798) CFA_SP SP+-1
          CFI (cfiCond1798) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1799 Using cfiCommon0
          CFI (cfiCond1799) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1799) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1799) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1799) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1799) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1799) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1799) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1799) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1799) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1799) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1799) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1799) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1799) CFA_SP SP+-1
          CFI (cfiCond1799) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1800 Using cfiCommon1
          CFI (cfiPicker1800) NoFunction
          CFI (cfiPicker1800) Picker
        MOV     DPL,A
          CFI EndBlock cfiCond1787
          CFI EndBlock cfiCond1788
          CFI EndBlock cfiCond1789
          CFI EndBlock cfiCond1790
          CFI EndBlock cfiCond1791
          CFI EndBlock cfiCond1792
          CFI EndBlock cfiCond1793
          CFI EndBlock cfiCond1794
          CFI EndBlock cfiCond1795
          CFI EndBlock cfiCond1796
          CFI EndBlock cfiCond1797
          CFI EndBlock cfiCond1798
          CFI EndBlock cfiCond1799
          CFI EndBlock cfiPicker1800
        REQUIRE ??Subroutine257_0
        ; // Fall through to label ??Subroutine257_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine257_0:
          CFI Block cfiCond1801 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_638
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1802 Using cfiCommon0
          CFI (cfiCond1802) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1802) Conditional ??CrossCallReturnLabel_639
          CFI (cfiCond1802) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1802) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1802) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1802) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1802) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1802) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1802) CFA_SP SP+0
          CFI (cfiCond1802) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1803 Using cfiCommon0
          CFI (cfiCond1803) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1803) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1803) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1803) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1803) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1803) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1803) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1803) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1803) CFA_SP SP+-1
          CFI (cfiCond1803) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1804 Using cfiCommon0
          CFI (cfiCond1804) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1804) Conditional ??CrossCallReturnLabel_641
          CFI (cfiCond1804) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1804) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1804) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1804) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1804) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1804) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1804) CFA_SP SP+-1
          CFI (cfiCond1804) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1805 Using cfiCommon0
          CFI (cfiCond1805) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1805) Conditional ??CrossCallReturnLabel_642
          CFI (cfiCond1805) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1805) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1805) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1805) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1805) CFA_SP SP+-1
          CFI (cfiCond1805) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1806 Using cfiCommon0
          CFI (cfiCond1806) Function ZDO_ParseAddrRsp
          CFI (cfiCond1806) Conditional ??CrossCallReturnLabel_643
          CFI (cfiCond1806) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1806) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1806) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1806) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1806) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1806) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1806) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1806) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1806) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1806) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1806) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1806) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1806) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1806) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1806) CFA_SP SP+-1
          CFI (cfiCond1806) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1807 Using cfiCommon0
          CFI (cfiCond1807) Function ZDO_ParseAddrRsp
          CFI (cfiCond1807) Conditional ??CrossCallReturnLabel_644
          CFI (cfiCond1807) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1807) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1807) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1807) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1807) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1807) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1807) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1807) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1807) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1807) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1807) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1807) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1807) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1807) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1807) CFA_SP SP+-1
          CFI (cfiCond1807) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1808 Using cfiCommon0
          CFI (cfiCond1808) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1808) Conditional ??CrossCallReturnLabel_645
          CFI (cfiCond1808) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1808) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1808) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1808) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1808) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1808) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1808) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1808) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1808) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1808) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1808) CFA_SP SP+-1
          CFI (cfiCond1808) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1809 Using cfiCommon0
          CFI (cfiCond1809) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1809) Conditional ??CrossCallReturnLabel_646
          CFI (cfiCond1809) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1809) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1809) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1809) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1809) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1809) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1809) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1809) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1809) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1809) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1809) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1809) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1809) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1809) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1809) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1809) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1809) CFA_SP SP+-1
          CFI (cfiCond1809) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1810 Using cfiCommon0
          CFI (cfiCond1810) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1810) Conditional ??CrossCallReturnLabel_647
          CFI (cfiCond1810) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1810) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1810) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1810) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1810) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1810) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1810) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1810) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1810) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1810) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1810) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1810) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1810) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1810) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1810) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1810) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1810) CFA_SP SP+-1
          CFI (cfiCond1810) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1811 Using cfiCommon0
          CFI (cfiCond1811) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1811) Conditional ??CrossCallReturnLabel_648
          CFI (cfiCond1811) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1811) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1811) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1811) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1811) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1811) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1811) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1811) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1811) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1811) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1811) CFA_SP SP+-1
          CFI (cfiCond1811) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1812 Using cfiCommon0
          CFI (cfiCond1812) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1812) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1812) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1812) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1812) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1812) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1812) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1812) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1812) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1812) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1812) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1812) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1812) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1812) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1812) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1812) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1812) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1812) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1812) CFA_SP SP+-1
          CFI (cfiCond1812) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1813 Using cfiCommon0
          CFI (cfiCond1813) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1813) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1813) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1813) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1813) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1813) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1813) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1813) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1813) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1813) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1813) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1813) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1813) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1813) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1813) CFA_SP SP+-1
          CFI (cfiCond1813) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1814 Using cfiCommon0
          CFI (cfiCond1814) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1814) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1814) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1814) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1814) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1814) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1814) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1814) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1814) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1814) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1814) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1814) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1814) CFA_SP SP+-1
          CFI (cfiCond1814) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1815 Using cfiCommon1
          CFI (cfiPicker1815) NoFunction
          CFI (cfiPicker1815) Picker
        MOV     A,?V0 + 1
          CFI EndBlock cfiCond1801
          CFI EndBlock cfiCond1802
          CFI EndBlock cfiCond1803
          CFI EndBlock cfiCond1804
          CFI EndBlock cfiCond1805
          CFI EndBlock cfiCond1806
          CFI EndBlock cfiCond1807
          CFI EndBlock cfiCond1808
          CFI EndBlock cfiCond1809
          CFI EndBlock cfiCond1810
          CFI EndBlock cfiCond1811
          CFI EndBlock cfiCond1812
          CFI EndBlock cfiCond1813
          CFI EndBlock cfiCond1814
          CFI EndBlock cfiPicker1815
        REQUIRE ??Subroutine258_0
        ; // Fall through to label ??Subroutine258_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine258_0:
          CFI Block cfiCond1816 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_621
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-1
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1817 Using cfiCommon0
          CFI (cfiCond1817) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1817) Conditional ??CrossCallReturnLabel_622
          CFI (cfiCond1817) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1817) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1817) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1817) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1817) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1817) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1817) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1817) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1817) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1817) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1817) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1817) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1817) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1817) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1817) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1817) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1817) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1817) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1817) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1817) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1817) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1817) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1817) CFA_SP SP+0
          CFI (cfiCond1817) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1818 Using cfiCommon0
          CFI (cfiCond1818) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1818) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1818) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1818) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1818) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1818) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1818) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1818) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1818) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1818) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1818) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1818) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1818) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1818) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1818) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1818) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1818) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1818) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1818) CFA_SP SP+-1
          CFI (cfiCond1818) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1819 Using cfiCommon0
          CFI (cfiCond1819) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1819) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1819) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1819) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1819) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1819) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1819) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1819) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1819) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1819) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1819) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1819) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1819) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1819) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1819) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1819) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1819) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1819) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1819) CFA_SP SP+-1
          CFI (cfiCond1819) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1820 Using cfiCommon0
          CFI (cfiCond1820) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1820) Conditional ??CrossCallReturnLabel_625
          CFI (cfiCond1820) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1820) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1820) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1820) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1820) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1820) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1820) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1820) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1820) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1820) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1820) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1820) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1820) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1820) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1820) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1820) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1820) CFA_SP SP+-1
          CFI (cfiCond1820) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1821 Using cfiCommon0
          CFI (cfiCond1821) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1821) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1821) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1821) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1821) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1821) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1821) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1821) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1821) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1821) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1821) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1821) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1821) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1821) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1821) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1821) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1821) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1821) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1821) CFA_SP SP+0
          CFI (cfiCond1821) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1822 Using cfiCommon0
          CFI (cfiCond1822) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1822) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1822) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1822) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1822) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1822) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1822) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1822) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1822) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1822) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1822) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1822) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1822) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1822) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1822) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1822) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1822) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1822) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1822) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1822) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1822) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1822) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1822) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1822) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1822) CFA_SP SP+-1
          CFI (cfiCond1822) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1823 Using cfiCommon0
          CFI (cfiCond1823) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1823) Conditional ??CrossCallReturnLabel_628
          CFI (cfiCond1823) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1823) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1823) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1823) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1823) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1823) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1823) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1823) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1823) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1823) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1823) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1823) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1823) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1823) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1823) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1823) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1823) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1823) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1823) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1823) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1823) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1823) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1823) CFA_SP SP+0
          CFI (cfiCond1823) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1824 Using cfiCommon0
          CFI (cfiCond1824) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1824) Conditional ??CrossCallReturnLabel_629
          CFI (cfiCond1824) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1824) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1824) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1824) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1824) CFA_SP SP+0
          CFI (cfiCond1824) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond1825 Using cfiCommon0
          CFI (cfiCond1825) Function ZDMatchSendState
          CFI (cfiCond1825) Conditional ??CrossCallReturnLabel_630
          CFI (cfiCond1825) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1825) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1825) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1825) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1825) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1825) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1825) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1825) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1825) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1825) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1825) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1825) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1825) CFA_SP SP+-1
          CFI (cfiCond1825) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1826 Using cfiCommon0
          CFI (cfiCond1826) Function ZDMatchSendState
          CFI (cfiCond1826) Conditional ??CrossCallReturnLabel_631
          CFI (cfiCond1826) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1826) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1826) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1826) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1826) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1826) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1826) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1826) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1826) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1826) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1826) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1826) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1826) CFA_SP SP+0
          CFI (cfiCond1826) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1827 Using cfiCommon0
          CFI (cfiCond1827) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1827) Conditional ??CrossCallReturnLabel_632
          CFI (cfiCond1827) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1827) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1827) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1827) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1827) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1827) CFA_SP SP+0
          CFI (cfiCond1827) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1828 Using cfiCommon0
          CFI (cfiCond1828) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1828) Conditional ??CrossCallReturnLabel_633
          CFI (cfiCond1828) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1828) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1828) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1828) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1828) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1828) CFA_SP SP+-1
          CFI (cfiCond1828) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1829 Using cfiCommon0
          CFI (cfiCond1829) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1829) Conditional ??CrossCallReturnLabel_634
          CFI (cfiCond1829) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1829) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1829) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1829) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1829) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1829) CFA_SP SP+-1
          CFI (cfiCond1829) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1830 Using cfiCommon0
          CFI (cfiCond1830) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1830) Conditional ??CrossCallReturnLabel_635
          CFI (cfiCond1830) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1830) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1830) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1830) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1830) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1830) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1830) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1830) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1830) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1830) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1830) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1830) CFA_SP SP+-1
          CFI (cfiCond1830) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1831 Using cfiCommon0
          CFI (cfiCond1831) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1831) Conditional ??CrossCallReturnLabel_636
          CFI (cfiCond1831) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1831) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1831) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1831) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1831) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1831) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1831) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1831) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1831) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1831) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1831) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1831) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1831) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1831) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1831) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1831) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1831) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1831) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1831) CFA_SP SP+0
          CFI (cfiCond1831) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1832 Using cfiCommon0
          CFI (cfiCond1832) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1832) Conditional ??CrossCallReturnLabel_637
          CFI (cfiCond1832) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1832) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1832) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1832) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1832) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1832) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1832) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1832) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1832) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1832) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1832) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1832) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1832) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1832) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1832) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1832) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1832) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1832) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1832) CFA_SP SP+-1
          CFI (cfiCond1832) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1833 Using cfiCommon0
          CFI (cfiCond1833) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1833) Conditional ??CrossCallReturnLabel_638
          CFI (cfiCond1833) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1833) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1833) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1833) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1833) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1833) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1833) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1833) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1833) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1833) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1833) CFA_SP SP+0
          CFI (cfiCond1833) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1834 Using cfiCommon0
          CFI (cfiCond1834) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1834) Conditional ??CrossCallReturnLabel_639
          CFI (cfiCond1834) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1834) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1834) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1834) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1834) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1834) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1834) CFA_SP SP+0
          CFI (cfiCond1834) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1835 Using cfiCommon0
          CFI (cfiCond1835) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1835) Conditional ??CrossCallReturnLabel_640
          CFI (cfiCond1835) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1835) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1835) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1835) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1835) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1835) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1835) CFA_SP SP+-1
          CFI (cfiCond1835) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1836 Using cfiCommon0
          CFI (cfiCond1836) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1836) Conditional ??CrossCallReturnLabel_641
          CFI (cfiCond1836) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1836) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1836) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1836) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1836) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1836) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1836) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1836) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1836) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1836) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1836) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1836) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1836) CFA_SP SP+-1
          CFI (cfiCond1836) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1837 Using cfiCommon0
          CFI (cfiCond1837) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1837) Conditional ??CrossCallReturnLabel_642
          CFI (cfiCond1837) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1837) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1837) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1837) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1837) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1837) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1837) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1837) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1837) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1837) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1837) CFA_SP SP+-1
          CFI (cfiCond1837) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1838 Using cfiCommon0
          CFI (cfiCond1838) Function ZDO_ParseAddrRsp
          CFI (cfiCond1838) Conditional ??CrossCallReturnLabel_643
          CFI (cfiCond1838) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1838) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1838) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1838) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1838) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1838) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1838) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1838) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1838) CFA_SP SP+-1
          CFI (cfiCond1838) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1839 Using cfiCommon0
          CFI (cfiCond1839) Function ZDO_ParseAddrRsp
          CFI (cfiCond1839) Conditional ??CrossCallReturnLabel_644
          CFI (cfiCond1839) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1839) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1839) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1839) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1839) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1839) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1839) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1839) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1839) CFA_SP SP+-1
          CFI (cfiCond1839) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1840 Using cfiCommon0
          CFI (cfiCond1840) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1840) Conditional ??CrossCallReturnLabel_645
          CFI (cfiCond1840) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1840) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1840) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1840) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1840) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1840) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1840) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1840) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1840) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1840) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1840) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1840) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1840) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1840) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1840) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1840) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1840) CFA_SP SP+-1
          CFI (cfiCond1840) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1841 Using cfiCommon0
          CFI (cfiCond1841) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1841) Conditional ??CrossCallReturnLabel_646
          CFI (cfiCond1841) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1841) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1841) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1841) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1841) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1841) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1841) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1841) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1841) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1841) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1841) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1841) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1841) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1841) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1841) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1841) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1841) CFA_SP SP+-1
          CFI (cfiCond1841) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1842 Using cfiCommon0
          CFI (cfiCond1842) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1842) Conditional ??CrossCallReturnLabel_647
          CFI (cfiCond1842) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1842) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1842) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1842) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1842) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1842) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1842) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1842) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1842) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1842) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1842) CFA_SP SP+-1
          CFI (cfiCond1842) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1843 Using cfiCommon0
          CFI (cfiCond1843) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1843) Conditional ??CrossCallReturnLabel_648
          CFI (cfiCond1843) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1843) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1843) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1843) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1843) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1843) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1843) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1843) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1843) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1843) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1843) CFA_SP SP+-1
          CFI (cfiCond1843) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1844 Using cfiCommon0
          CFI (cfiCond1844) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1844) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1844) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1844) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1844) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1844) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1844) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1844) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1844) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1844) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1844) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1844) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1844) CFA_SP SP+-1
          CFI (cfiCond1844) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1845 Using cfiCommon0
          CFI (cfiCond1845) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1845) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1845) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1845) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1845) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1845) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1845) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1845) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1845) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1845) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1845) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1845) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1845) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1845) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1845) CFA_SP SP+-1
          CFI (cfiCond1845) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1846 Using cfiCommon0
          CFI (cfiCond1846) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1846) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1846) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1846) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1846) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1846) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1846) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1846) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1846) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1846) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1846) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1846) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1846) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1846) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1846) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1846) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1846) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1846) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1846) CFA_SP SP+-1
          CFI (cfiCond1846) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1847 Using cfiCommon1
          CFI (cfiPicker1847) NoFunction
          CFI (cfiPicker1847) Picker
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_669:
        RET
          CFI EndBlock cfiCond1816
          CFI EndBlock cfiCond1817
          CFI EndBlock cfiCond1818
          CFI EndBlock cfiCond1819
          CFI EndBlock cfiCond1820
          CFI EndBlock cfiCond1821
          CFI EndBlock cfiCond1822
          CFI EndBlock cfiCond1823
          CFI EndBlock cfiCond1824
          CFI EndBlock cfiCond1825
          CFI EndBlock cfiCond1826
          CFI EndBlock cfiCond1827
          CFI EndBlock cfiCond1828
          CFI EndBlock cfiCond1829
          CFI EndBlock cfiCond1830
          CFI EndBlock cfiCond1831
          CFI EndBlock cfiCond1832
          CFI EndBlock cfiCond1833
          CFI EndBlock cfiCond1834
          CFI EndBlock cfiCond1835
          CFI EndBlock cfiCond1836
          CFI EndBlock cfiCond1837
          CFI EndBlock cfiCond1838
          CFI EndBlock cfiCond1839
          CFI EndBlock cfiCond1840
          CFI EndBlock cfiCond1841
          CFI EndBlock cfiCond1842
          CFI EndBlock cfiCond1843
          CFI EndBlock cfiCond1844
          CFI EndBlock cfiCond1845
          CFI EndBlock cfiCond1846
          CFI EndBlock cfiPicker1847

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond1848 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_676
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1849 Using cfiCommon0
          CFI (cfiCond1849) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1849) Conditional ??CrossCallReturnLabel_677
          CFI (cfiCond1849) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1849) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1849) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1849) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1849) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1849) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1849) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1849) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1849) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1849) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1849) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1849) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1849) CFA_SP SP+0
          CFI (cfiCond1849) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1850 Using cfiCommon1
          CFI (cfiPicker1850) NoFunction
          CFI (cfiPicker1850) Picker
        MOV     A,?V0 + 2
        ADD     A,#0x8
          CFI EndBlock cfiCond1848
          CFI EndBlock cfiCond1849
          CFI EndBlock cfiPicker1850
        REQUIRE ??Subroutine259_0
        ; // Fall through to label ??Subroutine259_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine259_0:
          CFI Block cfiCond1851 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_678
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1852 Using cfiCommon0
          CFI (cfiCond1852) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1852) Conditional ??CrossCallReturnLabel_676
          CFI (cfiCond1852) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1852) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1852) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1852) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1852) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1852) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1852) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1852) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1852) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1852) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1852) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1852) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1852) CFA_SP SP+0
          CFI (cfiCond1852) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1853 Using cfiCommon0
          CFI (cfiCond1853) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1853) Conditional ??CrossCallReturnLabel_677
          CFI (cfiCond1853) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1853) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1853) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1853) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1853) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1853) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1853) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1853) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1853) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1853) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1853) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1853) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1853) CFA_SP SP+0
          CFI (cfiCond1853) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1854 Using cfiCommon1
          CFI (cfiPicker1854) NoFunction
          CFI (cfiPicker1854) Picker
        LCALL   ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_680:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1851
          CFI EndBlock cfiCond1852
          CFI EndBlock cfiCond1853
          CFI EndBlock cfiPicker1854

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine177:
          CFI Block cfiCond1855 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_679
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1856 Using cfiCommon0
          CFI (cfiCond1856) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1856) Conditional ??CrossCallReturnLabel_680, ??CrossCallReturnLabel_676
          CFI (cfiCond1856) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1856) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1856) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1856) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1856) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1856) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1856) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1856) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1856) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1856) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1856) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1856) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1856) CFA_SP SP+0
          CFI (cfiCond1856) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1857 Using cfiCommon0
          CFI (cfiCond1857) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1857) Conditional ??CrossCallReturnLabel_680, ??CrossCallReturnLabel_677
          CFI (cfiCond1857) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1857) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1857) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1857) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1857) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1857) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1857) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1857) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1857) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1857) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1857) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1857) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1857) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1857) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1857) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1857) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1857) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1857) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1857) CFA_SP SP+0
          CFI (cfiCond1857) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1858 Using cfiCommon0
          CFI (cfiCond1858) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1858) Conditional ??CrossCallReturnLabel_680, ??CrossCallReturnLabel_678
          CFI (cfiCond1858) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1858) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1858) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1858) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1858) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1858) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1858) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1858) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1858) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1858) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1858) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1858) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1858) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1858) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1858) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1858) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1858) CFA_SP SP+0
          CFI (cfiCond1858) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1859 Using cfiCommon1
          CFI (cfiPicker1859) NoFunction
          CFI (cfiPicker1859) Picker
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond1855
          CFI EndBlock cfiCond1856
          CFI EndBlock cfiCond1857
          CFI EndBlock cfiCond1858
          CFI EndBlock cfiPicker1859

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond1860 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1861 Using cfiCommon0
          CFI (cfiCond1861) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1861) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond1861) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1861) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1861) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1861) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1861) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1861) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1861) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1861) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1861) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1861) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1861) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1861) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1861) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1861) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1861) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1861) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1861) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1861) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1861) CFA_SP SP+0
          CFI (cfiCond1861) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1862 Using cfiCommon1
          CFI (cfiPicker1862) NoFunction
          CFI (cfiPicker1862) Picker
        LCALL   ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond1860
          CFI EndBlock cfiCond1861
          CFI EndBlock cfiPicker1862

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond1863 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_244
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1864 Using cfiCommon0
          CFI (cfiCond1864) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1864) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_126
          CFI (cfiCond1864) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1864) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1864) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1864) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1864) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1864) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1864) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1864) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1864) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1864) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1864) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1864) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1864) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1864) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1864) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1864) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1864) CFA_SP SP+0
          CFI (cfiCond1864) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1865 Using cfiCommon0
          CFI (cfiCond1865) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1865) Conditional ??CrossCallReturnLabel_245, ??CrossCallReturnLabel_127
          CFI (cfiCond1865) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1865) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1865) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1865) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1865) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1865) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1865) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1865) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1865) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1865) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1865) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1865) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1865) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1865) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1865) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1865) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1865) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1865) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1865) CFA_SP SP+0
          CFI (cfiCond1865) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1866 Using cfiCommon1
          CFI (cfiPicker1866) NoFunction
          CFI (cfiPicker1866) Picker
        MOVX    A,@DPTR
        MOV     ?V0 + 6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 5,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        RET
          CFI EndBlock cfiCond1863
          CFI EndBlock cfiCond1864
          CFI EndBlock cfiCond1865
          CFI EndBlock cfiPicker1866

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond1867 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1868 Using cfiCommon0
          CFI (cfiCond1868) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1868) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond1868) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1868) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1868) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1868) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1868) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1868) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1868) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1868) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1868) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1868) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1868) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1868) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1868) CFA_SP SP+0
          CFI (cfiCond1868) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1869 Using cfiCommon1
          CFI (cfiPicker1869) NoFunction
          CFI (cfiPicker1869) Picker
        LCALL   ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_508:
        MOV     ?V0 + 2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPL,?V0 + 2
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V0 + 7,A
        INC     DPTR
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond1867
          CFI EndBlock cfiCond1868
          CFI EndBlock cfiPicker1869

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond1870 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1871 Using cfiCommon0
          CFI (cfiCond1871) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1871) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond1871) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1871) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1871) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1871) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1871) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1871) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1871) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1871) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1871) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1871) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1871) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1871) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1871) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1871) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1871) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1871) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1871) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1871) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1871) CFA_SP SP+0
          CFI (cfiCond1871) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1872 Using cfiCommon1
          CFI (cfiPicker1872) NoFunction
          CFI (cfiPicker1872) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        MOV     A,?V0 + 2
        ADD     A,#0x2
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 3
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        RET
          CFI EndBlock cfiCond1870
          CFI EndBlock cfiCond1871
          CFI EndBlock cfiPicker1872

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond1873 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1874 Using cfiCommon0
          CFI (cfiCond1874) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1874) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond1874) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1874) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1874) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1874) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1874) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1874) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1874) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1874) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1874) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1874) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1874) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1874) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1874) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1874) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1874) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1874) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1874) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1874) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1874) CFA_SP SP+0
          CFI (cfiCond1874) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1875 Using cfiCommon1
          CFI (cfiPicker1875) NoFunction
          CFI (cfiPicker1875) Picker
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 7
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 6
        LCALL   ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_234:
        INC     DPTR
        MOV     A,?V0 + 5
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_231:
        MOV     A,?V0 + 4
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond1873
          CFI EndBlock cfiCond1874
          CFI EndBlock cfiPicker1875

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond1876 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1877 Using cfiCommon0
          CFI (cfiCond1877) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1877) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond1877) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1877) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1877) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1877) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1877) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1877) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1877) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1877) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1877) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1877) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1877) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1877) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1877) CFA_SP SP+0
          CFI (cfiCond1877) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1878 Using cfiCommon0
          CFI (cfiCond1878) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1878) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond1878) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1878) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1878) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1878) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1878) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1878) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1878) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1878) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1878) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1878) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1878) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1878) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1878) CFA_SP SP+0
          CFI (cfiCond1878) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1879 Using cfiCommon0
          CFI (cfiCond1879) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1879) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond1879) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1879) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1879) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1879) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1879) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1879) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1879) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1879) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1879) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1879) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1879) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1879) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1879) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1879) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1879) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1879) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1879) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1879) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1879) CFA_SP SP+0
          CFI (cfiCond1879) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1880 Using cfiCommon1
          CFI (cfiPicker1880) NoFunction
          CFI (cfiPicker1880) Picker
        LCALL   ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_230:
        MOV     ?V0 + 2,DPL
        MOV     ?V0 + 3,DPH
        RET
          CFI EndBlock cfiCond1876
          CFI EndBlock cfiCond1877
          CFI EndBlock cfiCond1878
          CFI EndBlock cfiCond1879
          CFI EndBlock cfiPicker1880

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond1881 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1882 Using cfiCommon0
          CFI (cfiCond1882) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1882) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_29
          CFI (cfiCond1882) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1882) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1882) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1882) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1882) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1882) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1882) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1882) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1882) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1882) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1882) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1882) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1882) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1882) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1882) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1882) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1882) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1882) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1882) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1882) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1882) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1882) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1882) CFA_SP SP+0
          CFI (cfiCond1882) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1883 Using cfiCommon0
          CFI (cfiCond1883) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1883) Conditional ??CrossCallReturnLabel_229, ??CrossCallReturnLabel_30
          CFI (cfiCond1883) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1883) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1883) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1883) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1883) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1883) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1883) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1883) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1883) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1883) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1883) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1883) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1883) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1883) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1883) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1883) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1883) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1883) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1883) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1883) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1883) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1883) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1883) CFA_SP SP+0
          CFI (cfiCond1883) CFA_XSP16 add(XSP16, 59)
          CFI Block cfiCond1884 Using cfiCommon0
          CFI (cfiCond1884) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1884) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_4
          CFI (cfiCond1884) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1884) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1884) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1884) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1884) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1884) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1884) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1884) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1884) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1884) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1884) CFA_SP SP+0
          CFI (cfiCond1884) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1885 Using cfiCommon0
          CFI (cfiCond1885) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1885) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_5
          CFI (cfiCond1885) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1885) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1885) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1885) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1885) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1885) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1885) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1885) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1885) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1885) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1885) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1885) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1885) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1885) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1885) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1885) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1885) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1885) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1885) CFA_SP SP+0
          CFI (cfiCond1885) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1886 Using cfiCommon0
          CFI (cfiCond1886) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1886) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_6
          CFI (cfiCond1886) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1886) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1886) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1886) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1886) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1886) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1886) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1886) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1886) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1886) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1886) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1886) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1886) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1886) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1886) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1886) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1886) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1886) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1886) CFA_SP SP+0
          CFI (cfiCond1886) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1887 Using cfiCommon0
          CFI (cfiCond1887) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1887) Conditional ??CrossCallReturnLabel_230, ??CrossCallReturnLabel_7
          CFI (cfiCond1887) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1887) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1887) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1887) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1887) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1887) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1887) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1887) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1887) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1887) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1887) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1887) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1887) CFA_SP SP+0
          CFI (cfiCond1887) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker1888 Using cfiCommon1
          CFI (cfiPicker1888) NoFunction
          CFI (cfiPicker1888) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        INC     DPTR
        RET
          CFI EndBlock cfiCond1881
          CFI EndBlock cfiCond1882
          CFI EndBlock cfiCond1883
          CFI EndBlock cfiCond1884
          CFI EndBlock cfiCond1885
          CFI EndBlock cfiCond1886
          CFI EndBlock cfiCond1887
          CFI EndBlock cfiPicker1888
// 3000 
// 3001 /*********************************************************************
// 3002  * @fn          ZDO_ParseUserDescRsp
// 3003  *
// 3004  * @brief       This function parses the incoming User
// 3005  *              Descriptor Response.
// 3006  *
// 3007  * @param       inMsg - incoming response message
// 3008  *
// 3009  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3010  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3011  *          by the calling function [osal_mem_free()].
// 3012  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3013 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1889 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3014 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3015   ZDO_UserDescRsp_t *pRsp;
// 3016   uint8 *msg;
// 3017   uint8 descLen = 0;
        MOV     ?V0 + 4,#0x0
// 3018 
// 3019   msg = inMsg->asdu;
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_187:
        LCALL   ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_357:
        MOV     ?V0 + 0,R0
        MOV     ?V0 + 1,R1
// 3020 
// 3021   if ( msg[0] == ZSuccess )
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        JNZ     ??ZDO_ParseUserDescRsp_0
// 3022   {
// 3023     descLen = msg[3];
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
// 3024   }
// 3025 
// 3026   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V0 + 2,?V0 + 4
        MOV     A,?V0 + 2
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 2,R2
        MOV     ?V0 + 3,R3
        MOV     R6,?V0 + 2
        MOV     R7,?V0 + 3
// 3027   if ( pRsp )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_ParseUserDescRsp_1
// 3028   {
// 3029     pRsp->status = msg[0];
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine55 & 0xFFFF
// 3030     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_92:
        MOVX    A,@DPTR
        MOV     R2,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        LCALL   ?Subroutine28 & 0xFFFF
// 3031     pRsp->length = descLen;
// 3032     if ( descLen )
??CrossCallReturnLabel_589:
        JZ      ??ZDO_ParseUserDescRsp_1
// 3033     {
// 3034       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V0 + 0
        ADD     A,#0x4
        LCALL   ?Subroutine132 & 0xFFFF
// 3035     }
// 3036   }
??CrossCallReturnLabel_605:
        MOV     ?V0 + 2,R0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R4,?V0 + 4
        MOV     R5,#0x0
        MOV     A,R6
        ADD     A,#0x4
        MOV     R2,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 3037 
// 3038   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        LJMP    ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock1889
// 3039 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond1890 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1891 Using cfiCommon0
          CFI (cfiCond1891) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1891) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond1891) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1891) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1891) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1891) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1891) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1891) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1891) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1891) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1891) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1891) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1891) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1891) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1891) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1891) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1891) CFA_SP SP+0
          CFI (cfiCond1891) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1892 Using cfiCommon1
          CFI (cfiPicker1892) NoFunction
          CFI (cfiPicker1892) Picker
        MOVX    @DPTR,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        RET
          CFI EndBlock cfiCond1890
          CFI EndBlock cfiCond1891
          CFI EndBlock cfiPicker1892
// 3040 
// 3041 /*********************************************************************
// 3042  * @fn          ZDO_ParseSimpleDescBuf
// 3043  *
// 3044  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3045  *
// 3046  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3047  * @param       desc - SimpleDescriptionFormat_t *
// 3048  *
// 3049  *              This routine allocates storage for the cluster IDs because
// 3050  *              they are 16-bit and need to be aligned to be properly processed.
// 3051  *              This routine returns non-zero if an allocation fails.
// 3052  *
// 3053  *              NOTE: This means that the caller or user of the input structure
// 3054  *                    is responsible for freeing the memory
// 3055  *
// 3056  * @return      0: success
// 3057  *              1: failure due to malloc failure.
// 3058  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3059 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1893 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3060 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xd
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
        ; Saved register size: 13
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3061   uint8 num, i;
// 3062 
// 3063   desc->EndPoint = *buf++;
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine260_0 & 0xFFFF
??CrossCallReturnLabel_683:
        LCALL   ?Subroutine17 & 0xFFFF
// 3064   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_14:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine261_0 & 0xFFFF
// 3065   buf += 2;
// 3066   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_688:
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_696:
        LCALL   ?Subroutine13 & 0xFFFF
// 3067   buf += 2;
// 3068   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_687:
        SWAP    A
        ANL     A,#0xf
// 3069 
// 3070   desc->Reserved = 0;
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine151 & 0xFFFF
// 3071   buf++;
// 3072 
// 3073   // move in input cluster list (if any). allocate aligned memory.
// 3074   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_593:
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        INC     R6
        INC     R6
        MOV     R7,DPH
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3075   if ( num )
        JZ      ??ZDO_ParseSimpleDescBuf_0
// 3076   {
// 3077     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        MOV     A,R4
        ADD     A,#0x7
        MOV     R0,A
        MOV     A,R5
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_196:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_2:
        JZ      ??ZDO_ParseSimpleDescBuf_1
// 3078     {
// 3079       // malloc failed. we're done.
// 3080       return 1;
// 3081     }
// 3082     for (i=0; i<num; ++i)
        MOV     R2,#0x0
        SJMP    ??CrossCallReturnLabel_59
// 3083     {
// 3084       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_2:
        LCALL   ?Subroutine65 & 0xFFFF
// 3085       buf += 2;
// 3086     }
??CrossCallReturnLabel_108:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_59:
        MOV     A,R2
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseSimpleDescBuf_2
// 3087   }
// 3088 
// 3089   // move in output cluster list (if any). allocate aligned memory.
// 3090   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_0:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     ?V0 + 4,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3091   if (num)
        JZ      ??ZDO_ParseSimpleDescBuf_3
// 3092   {
// 3093     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        MOV     A,?V0 + 0
        ADD     A,#0xa
        MOV     R0,A
        MOV     A,?V0 + 1
        LCALL   ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_197:
        LCALL   ??osal_mem_alloc?relay
        LCALL   ?Subroutine12 & 0xFFFF
??CrossCallReturnLabel_3:
        JNZ     ??ZDO_ParseSimpleDescBuf_4
// 3094     {
// 3095       // malloc failed. free input cluster list memory if there is any
// 3096       if ( desc->pAppInClusterList != NULL )
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_445:
        JZ      ??ZDO_ParseSimpleDescBuf_1
// 3097       {
// 3098         osal_mem_free(desc->pAppInClusterList);
        MOV     A,?V0 + 0
        ADD     A,#0x7
        MOV     ?V0 + 2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     ?V0 + 3,A
        ; Setup parameters for call to function osal_mem_free
        MOV     DPL,?V0 + 2
        LCALL   ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_416:
        LCALL   ??osal_mem_free?relay
// 3099 
// 3100         desc->pAppInClusterList = NULL;
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 3101       }
// 3102       return 1;
??ZDO_ParseSimpleDescBuf_1:
        MOV     R1,#0x1
        SJMP    ??ZDO_ParseSimpleDescBuf_5
// 3103     }
// 3104     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_4:
        MOV     R2,#0x0
        SJMP    ??CrossCallReturnLabel_60
// 3105     {
// 3106       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_6:
        LCALL   ?Subroutine65 & 0xFFFF
// 3107       buf += 2;
// 3108     }
??CrossCallReturnLabel_109:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_60:
        MOV     A,R2
        CLR     C
        SUBB    A,?V0 + 4
        JC      ??ZDO_ParseSimpleDescBuf_6
// 3109   }
// 3110   return 0;
??ZDO_ParseSimpleDescBuf_3:
        MOV     R1,#0x0
??ZDO_ParseSimpleDescBuf_5:
        MOV     R7,#0x5
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock1893
// 3111 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond1894 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1895 Using cfiCommon0
          CFI (cfiCond1895) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1895) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond1895) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1895) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1895) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1895) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1895) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1895) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1895) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1895) CFA_SP SP+0
          CFI (cfiCond1895) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1896 Using cfiCommon1
          CFI (cfiPicker1896) NoFunction
          CFI (cfiPicker1896) Picker
        ADDC    A,#0x0
        MOV     R1,A
        MOV     ?V0 + 2,R0
        MOV     ?V0 + 3,R1
        ; Setup parameters for call to function osal_mem_alloc
        ; Setup parameters for call to function osal_mem_alloc
        MOV     A,?V0 + 4
        CLR     C
        RLC     A
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1894
          CFI EndBlock cfiCond1895
          CFI EndBlock cfiPicker1896

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond1897 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_684
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1898 Using cfiCommon0
          CFI (cfiCond1898) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1898) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1898) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1898) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1898) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1898) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1898) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1898) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1898) CFA_SP SP+0
          CFI (cfiCond1898) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1899 Using cfiCommon1
          CFI (cfiPicker1899) NoFunction
          CFI (cfiPicker1899) Picker
        MOV     DPL,A
        MOV     A,R3
        LCALL   ??Subroutine244_0 & 0xFFFF
          CFI EndBlock cfiCond1897
          CFI EndBlock cfiCond1898
          CFI EndBlock cfiPicker1899
??CrossCallReturnLabel_656:
        REQUIRE ??Subroutine260_0
        ; // Fall through to label ??Subroutine260_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine260_0:
          CFI Block cfiCond1900 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_681
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1901 Using cfiCommon0
          CFI (cfiCond1901) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1901) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1901) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1901) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1901) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1901) CFA_SP SP+0
          CFI (cfiCond1901) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1902 Using cfiCommon0
          CFI (cfiCond1902) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1902) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1902) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1902) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1902) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1902) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1902) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1902) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1902) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1902) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1902) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1902) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1902) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1902) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1902) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1902) CFA_SP SP+0
          CFI (cfiCond1902) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1903 Using cfiCommon0
          CFI (cfiCond1903) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1903) Conditional ??CrossCallReturnLabel_684
          CFI (cfiCond1903) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1903) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1903) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1903) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1903) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1903) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1903) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1903) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1903) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1903) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1903) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1903) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1903) CFA_SP SP+0
          CFI (cfiCond1903) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1904 Using cfiCommon0
          CFI (cfiCond1904) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1904) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1904) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1904) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1904) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1904) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1904) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1904) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1904) CFA_SP SP+0
          CFI (cfiCond1904) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1905 Using cfiCommon1
          CFI (cfiPicker1905) NoFunction
          CFI (cfiPicker1905) Picker
        MOVX    A,@DPTR
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond1900
          CFI EndBlock cfiCond1901
          CFI EndBlock cfiCond1902
          CFI EndBlock cfiCond1903
          CFI EndBlock cfiCond1904
          CFI EndBlock cfiPicker1905

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond1906 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1907 Using cfiCommon0
          CFI (cfiCond1907) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1907) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1907) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1907) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1907) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1907) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1907) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1907) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1907) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1907) CFA_SP SP+0
          CFI (cfiCond1907) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1908 Using cfiCommon1
          CFI (cfiPicker1908) NoFunction
          CFI (cfiPicker1908) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R4
        ADD     A,#0x0
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     A,R2
        RLC     A
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        RET
          CFI EndBlock cfiCond1906
          CFI EndBlock cfiCond1907
          CFI EndBlock cfiPicker1908

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1909 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1910 Using cfiCommon0
          CFI (cfiCond1910) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1910) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond1910) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1910) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1910) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1910) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1910) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1910) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1910) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1910) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1910) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1910) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1910) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1910) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1910) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1910) CFA_SP SP+0
          CFI (cfiCond1910) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1911 Using cfiCommon1
          CFI (cfiPicker1911) NoFunction
          CFI (cfiPicker1911) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R3,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R3
        MOV     DPH,A
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine263_0 & 0xFFFF
??CrossCallReturnLabel_693:
        INC     R2
        RET
          CFI EndBlock cfiCond1909
          CFI EndBlock cfiCond1910
          CFI EndBlock cfiPicker1911

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond1912 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_686
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1913 Using cfiCommon0
          CFI (cfiCond1913) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1913) Conditional ??CrossCallReturnLabel_687
          CFI (cfiCond1913) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1913) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1913) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1913) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1913) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1913) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1913) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1913) CFA_SP SP+0
          CFI (cfiCond1913) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1914 Using cfiCommon1
          CFI (cfiPicker1914) NoFunction
          CFI (cfiPicker1914) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond1912
          CFI EndBlock cfiCond1913
          CFI EndBlock cfiPicker1914
        REQUIRE ??Subroutine261_0
        ; // Fall through to label ??Subroutine261_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine261_0:
          CFI Block cfiCond1915 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_688
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1916 Using cfiCommon0
          CFI (cfiCond1916) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1916) Conditional ??CrossCallReturnLabel_686
          CFI (cfiCond1916) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1916) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1916) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1916) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1916) CFA_SP SP+0
          CFI (cfiCond1916) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1917 Using cfiCommon0
          CFI (cfiCond1917) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1917) Conditional ??CrossCallReturnLabel_687
          CFI (cfiCond1917) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1917) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1917) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1917) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1917) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1917) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1917) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1917) CFA_SP SP+0
          CFI (cfiCond1917) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1918 Using cfiCommon1
          CFI (cfiPicker1918) NoFunction
          CFI (cfiPicker1918) Picker
        INC     DPTR
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond1915
          CFI EndBlock cfiCond1916
          CFI EndBlock cfiCond1917
          CFI EndBlock cfiPicker1918
        REQUIRE ??Subroutine262_0
        ; // Fall through to label ??Subroutine262_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine262_0:
          CFI Block cfiCond1919 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_689
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1920 Using cfiCommon0
          CFI (cfiCond1920) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1920) Conditional ??CrossCallReturnLabel_688
          CFI (cfiCond1920) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1920) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1920) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1920) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1920) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1920) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1920) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1920) CFA_SP SP+0
          CFI (cfiCond1920) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1921 Using cfiCommon0
          CFI (cfiCond1921) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1921) Conditional ??CrossCallReturnLabel_686
          CFI (cfiCond1921) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1921) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1921) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1921) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1921) CFA_SP SP+0
          CFI (cfiCond1921) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1922 Using cfiCommon0
          CFI (cfiCond1922) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1922) Conditional ??CrossCallReturnLabel_687
          CFI (cfiCond1922) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1922) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1922) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1922) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1922) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1922) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1922) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1922) CFA_SP SP+0
          CFI (cfiCond1922) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1923 Using cfiCommon1
          CFI (cfiPicker1923) NoFunction
          CFI (cfiPicker1923) Picker
        LCALL   ??Subroutine263_0 & 0xFFFF
??CrossCallReturnLabel_694:
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond1919
          CFI EndBlock cfiCond1920
          CFI EndBlock cfiCond1921
          CFI EndBlock cfiCond1922
          CFI EndBlock cfiPicker1923

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond1924 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_57
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1925 Using cfiCommon0
          CFI (cfiCond1925) Function ZDO_ParseAddrRsp
          CFI (cfiCond1925) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_58
          CFI (cfiCond1925) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1925) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1925) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1925) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1925) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1925) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1925) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1925) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1925) CFA_SP SP+0
          CFI (cfiCond1925) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1926 Using cfiCommon0
          CFI (cfiCond1926) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1926) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_35
          CFI (cfiCond1926) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1926) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1926) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1926) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1926) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1926) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1926) CFA_SP SP+0
          CFI (cfiCond1926) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1927 Using cfiCommon0
          CFI (cfiCond1927) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1927) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_36
          CFI (cfiCond1927) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1927) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1927) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1927) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1927) CFA_SP SP+0
          CFI (cfiCond1927) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1928 Using cfiCommon1
          CFI (cfiPicker1928) NoFunction
          CFI (cfiPicker1928) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
          CFI EndBlock cfiCond1924
          CFI EndBlock cfiCond1925
          CFI EndBlock cfiCond1926
          CFI EndBlock cfiCond1927
          CFI EndBlock cfiPicker1928
        REQUIRE ??Subroutine263_0
        ; // Fall through to label ??Subroutine263_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine263_0:
          CFI Block cfiCond1929 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_692
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1930 Using cfiCommon0
          CFI (cfiCond1930) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1930) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_59
          CFI (cfiCond1930) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1930) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1930) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1930) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1930) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1930) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1930) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1930) CFA_SP SP+0
          CFI (cfiCond1930) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1931 Using cfiCommon0
          CFI (cfiCond1931) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1931) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_60
          CFI (cfiCond1931) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1931) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1931) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1931) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1931) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1931) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1931) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1931) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1931) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1931) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1931) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1931) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1931) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1931) CFA_SP SP+0
          CFI (cfiCond1931) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1932 Using cfiCommon0
          CFI (cfiCond1932) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1932) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_686
          CFI (cfiCond1932) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1932) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1932) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1932) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1932) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1932) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1932) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1932) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1932) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1932) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1932) CFA_SP SP+0
          CFI (cfiCond1932) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1933 Using cfiCommon0
          CFI (cfiCond1933) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1933) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_687
          CFI (cfiCond1933) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1933) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1933) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1933) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1933) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1933) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1933) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1933) CFA_SP SP+0
          CFI (cfiCond1933) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1934 Using cfiCommon0
          CFI (cfiCond1934) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1934) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_688
          CFI (cfiCond1934) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1934) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1934) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1934) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1934) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1934) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1934) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1934) CFA_SP SP+0
          CFI (cfiCond1934) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1935 Using cfiCommon0
          CFI (cfiCond1935) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1935) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_689
          CFI (cfiCond1935) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1935) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1935) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1935) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1935) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1935) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1935) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1935) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1935) CFA_SP SP+0
          CFI (cfiCond1935) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1936 Using cfiCommon0
          CFI (cfiCond1936) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1936) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_57
          CFI (cfiCond1936) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1936) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1936) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1936) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1936) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1936) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1936) CFA_SP SP+0
          CFI (cfiCond1936) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1937 Using cfiCommon0
          CFI (cfiCond1937) Function ZDO_ParseAddrRsp
          CFI (cfiCond1937) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_58
          CFI (cfiCond1937) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1937) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1937) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1937) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1937) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1937) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1937) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1937) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1937) CFA_SP SP+0
          CFI (cfiCond1937) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1938 Using cfiCommon0
          CFI (cfiCond1938) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1938) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_35
          CFI (cfiCond1938) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1938) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1938) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1938) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1938) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1938) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1938) CFA_SP SP+0
          CFI (cfiCond1938) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1939 Using cfiCommon0
          CFI (cfiCond1939) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1939) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_36
          CFI (cfiCond1939) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1939) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1939) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1939) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1939) CFA_SP SP+0
          CFI (cfiCond1939) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1940 Using cfiCommon1
          CFI (cfiPicker1940) NoFunction
          CFI (cfiPicker1940) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x2
        MOV     R6,A
        MOV     A,R7
        ADDC    A,#0x0
        MOV     R7,A
        RET
          CFI EndBlock cfiCond1929
          CFI EndBlock cfiCond1930
          CFI EndBlock cfiCond1931
          CFI EndBlock cfiCond1932
          CFI EndBlock cfiCond1933
          CFI EndBlock cfiCond1934
          CFI EndBlock cfiCond1935
          CFI EndBlock cfiCond1936
          CFI EndBlock cfiCond1937
          CFI EndBlock cfiCond1938
          CFI EndBlock cfiCond1939
          CFI EndBlock cfiPicker1940

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond1941 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1942 Using cfiCommon0
          CFI (cfiCond1942) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1942) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1942) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1942) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1942) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1942) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1942) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1942) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1942) CFA_SP SP+0
          CFI (cfiCond1942) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1943 Using cfiCommon0
          CFI (cfiCond1943) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1943) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond1943) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1943) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1943) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1943) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1943) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1943) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1943) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1943) CFA_SP SP+0
          CFI (cfiCond1943) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1944 Using cfiCommon0
          CFI (cfiCond1944) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1944) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1944) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1944) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1944) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1944) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1944) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1944) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1944) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1944) CFA_SP SP+0
          CFI (cfiCond1944) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker1945 Using cfiCommon1
          CFI (cfiPicker1945) NoFunction
          CFI (cfiPicker1945) Picker
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_297:
        MOV     DPL,?V0 + 2
        MOV     DPH,?V0 + 3
        LCALL   ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_465:
        RET
          CFI EndBlock cfiCond1941
          CFI EndBlock cfiCond1942
          CFI EndBlock cfiCond1943
          CFI EndBlock cfiCond1944
          CFI EndBlock cfiPicker1945
// 3112 
// 3113 /*********************************************************************
// 3114  * @fn          ZDO_ParseDeviceAnnce
// 3115  *
// 3116  * @brief       Parse a Device Announce message.
// 3117  *
// 3118  * @param       inMsg - Incoming message
// 3119  * @param       pAnnce - place to put the parsed information
// 3120  *
// 3121  * @return      none
// 3122  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3123 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1946 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3124 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3125   uint8 *msg;
// 3126 
// 3127   // Parse incoming message
// 3128   msg = inMsg->asdu;
        LCALL   ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL   ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ?Subroutine97 & 0xFFFF
// 3129   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_158:
        LCALL   ?Subroutine29 & 0xFFFF
// 3130   msg += 2;
// 3131   osal_cpyExtAddr( pAnnce->extAddr, msg );
??CrossCallReturnLabel_36:
        ADD     A,#0x2
        MOV     R2,A
        MOV     A,?V0 + 1
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??sAddrExtCpy?relay
// 3132   msg += Z_EXTADDR_LEN;
// 3133   pAnnce->capabilities = *msg;
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_139:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 3134 }
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock1946

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond1947 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_187
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1948 Using cfiCommon0
          CFI (cfiCond1948) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1948) Conditional ??CrossCallReturnLabel_188
          CFI (cfiCond1948) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1948) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1948) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1948) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1948) CFA_SP SP+0
          CFI (cfiCond1948) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1949 Using cfiCommon1
          CFI (cfiPicker1949) NoFunction
          CFI (cfiPicker1949) Picker
        LCALL   ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_267:
        LCALL   ??Subroutine244_0 & 0xFFFF
??CrossCallReturnLabel_657:
        RET
          CFI EndBlock cfiCond1947
          CFI EndBlock cfiCond1948
          CFI EndBlock cfiPicker1949

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond1950 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1951 Using cfiCommon0
          CFI (cfiCond1951) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1951) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond1951) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1951) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1951) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1951) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1951) CFA_SP SP+0
          CFI (cfiCond1951) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1952 Using cfiCommon1
          CFI (cfiPicker1952) NoFunction
          CFI (cfiPicker1952) Picker
        LCALL   ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_492:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        RET
          CFI EndBlock cfiCond1950
          CFI EndBlock cfiCond1951
          CFI EndBlock cfiPicker1952

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond1953 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_157
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1954 Using cfiCommon0
          CFI (cfiCond1954) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1954) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond1954) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1954) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1954) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1954) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1954) CFA_SP SP+0
          CFI (cfiCond1954) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1955 Using cfiCommon1
          CFI (cfiPicker1955) NoFunction
          CFI (cfiPicker1955) Picker
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        MOVX    A,@DPTR
        LCALL   ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_697:
        RET
          CFI EndBlock cfiCond1953
          CFI EndBlock cfiCond1954
          CFI EndBlock cfiPicker1955

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond1956 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_696
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1957 Using cfiCommon0
          CFI (cfiCond1957) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1957) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_157
          CFI (cfiCond1957) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1957) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1957) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1957) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1957) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1957) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1957) CFA_SP SP+0
          CFI (cfiCond1957) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1958 Using cfiCommon0
          CFI (cfiCond1958) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1958) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_158
          CFI (cfiCond1958) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1958) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1958) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1958) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1958) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1958) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1958) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1958) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1958) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1958) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1958) CFA_SP SP+0
          CFI (cfiCond1958) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1959 Using cfiCommon1
          CFI (cfiPicker1959) NoFunction
          CFI (cfiPicker1959) Picker
        MOV     R2,A
          CFI EndBlock cfiCond1956
          CFI EndBlock cfiCond1957
          CFI EndBlock cfiCond1958
          CFI EndBlock cfiPicker1959
        REQUIRE ??Subroutine264_0
        ; // Fall through to label ??Subroutine264_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine264_0:
          CFI Block cfiCond1960 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_695
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1961 Using cfiCommon0
          CFI (cfiCond1961) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1961) Conditional ??CrossCallReturnLabel_696
          CFI (cfiCond1961) R6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1961) VB load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1961) V0 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1961) V1 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1961) V2 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1961) V3 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1961) V4 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1961) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1961) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1961) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1961) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1961) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1961) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1961) CFA_SP SP+0
          CFI (cfiCond1961) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1962 Using cfiCommon0
          CFI (cfiCond1962) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1962) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_157
          CFI (cfiCond1962) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1962) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1962) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1962) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1962) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1962) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1962) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1962) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1962) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1962) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1962) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1962) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1962) CFA_SP SP+0
          CFI (cfiCond1962) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1963 Using cfiCommon0
          CFI (cfiCond1963) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1963) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_158
          CFI (cfiCond1963) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1963) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1963) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1963) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1963) CFA_SP SP+0
          CFI (cfiCond1963) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1964 Using cfiCommon1
          CFI (cfiPicker1964) NoFunction
          CFI (cfiPicker1964) Picker
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     A,R2
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond1960
          CFI EndBlock cfiCond1961
          CFI EndBlock cfiCond1962
          CFI EndBlock cfiCond1963
          CFI EndBlock cfiPicker1964

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond1965 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1966 Using cfiCommon0
          CFI (cfiCond1966) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1966) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond1966) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1966) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1966) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1966) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1966) CFA_SP SP+0
          CFI (cfiCond1966) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1967 Using cfiCommon1
          CFI (cfiPicker1967) NoFunction
          CFI (cfiPicker1967) Picker
        LCALL   ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_609:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1965
          CFI EndBlock cfiCond1966
          CFI EndBlock cfiPicker1967

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1968 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1969 Using cfiCommon0
          CFI (cfiCond1969) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1969) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond1969) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1969) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1969) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1969) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1969) CFA_SP SP+0
          CFI (cfiCond1969) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1970 Using cfiCommon1
          CFI (cfiPicker1970) NoFunction
          CFI (cfiPicker1970) Picker
        LCALL   ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_691:
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,?V0 + 0
        RET
          CFI EndBlock cfiCond1968
          CFI EndBlock cfiCond1969
          CFI EndBlock cfiPicker1970
// 3135 
// 3136 /*********************************************************************
// 3137  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3138  *
// 3139  * @brief       This function handles parsing of the incoming Management
// 3140  *              Network Update notify.
// 3141  *
// 3142  * @param       inMsg - incoming message (request)
// 3143  *
// 3144  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3145  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3146  *          by the calling function [osal_mem_free()].
// 3147  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3148 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1971 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3149 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 27, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 27, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x18
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
        ; Saved register size: 24
        ; Auto size: 0
// 3150   uint8 status;
// 3151   uint32 scannedChannels = 0;
        MOV     ?V0 + 4,#0x0
        MOV     ?V0 + 5,#0x0
        MOV     ?V0 + 6,#0x0
        MOV     ?V0 + 7,#0x0
// 3152   uint16 totalTransmissions = 0;
        MOV     ?V0 + 0,#0x0
        MOV     ?V0 + 1,#0x0
// 3153   uint16 transmissionFailures = 0;
        MOV     ?V0 + 2,#0x0
        MOV     ?V0 + 3,#0x0
// 3154   uint8 listCount = 0;
        MOV     ?V0 + 14,#0x0
// 3155   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine63 & 0xFFFF
// 3156   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3157 
// 3158   status = *msg++;
??CrossCallReturnLabel_613:
        MOV     ?V0 + 10,A
        INC     DPTR
        MOV     R6,DPL
        MOV     R7,DPH
// 3159   if ( status == ZSuccess )
        JNZ     ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3160   {
// 3161     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   ??osal_build_uint32?relay
        MOV     ?V0 + 4,R2
        MOV     ?V0 + 5,R3
        MOV     ?V0 + 6,R4
        MOV     ?V0 + 7,R5
// 3162     msg += 4;
        MOV     A,R6
        ADD     A,#0x4
        LCALL   ??Subroutine241_0 & 0xFFFF
// 3163     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_519:
        LCALL   ??Subroutine197_0 & 0xFFFF
// 3164     msg += 2;
??CrossCallReturnLabel_281:
        MOV     A,R6
        ADD     A,#0x2
        LCALL   ??Subroutine241_0 & 0xFFFF
// 3165     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_520:
        LCALL   ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_176:
        MOV     ?V0 + 2,A
        CLR     A
        ADDC    A,R1
        MOV     ?V0 + 3,A
// 3166     msg += 2;
        MOV     A,R6
        ADD     A,#0x2
        LCALL   ??Subroutine211_0 & 0xFFFF
// 3167     listCount = *msg++;
// 3168   }
??CrossCallReturnLabel_347:
        MOV     ?V0 + 14,A
        INC     DPTR
        INC     R6
        MOV     R7,DPH
// 3169 
// 3170   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV     ?V0 + 8,?V0 + 14
        MOV     A,?V0 + 8
        ADD     A,#0xa
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_mem_alloc?relay
        MOV     ?V0 + 8,R2
        MOV     ?V0 + 9,R3
// 3171 
// 3172   if ( pRsp )
        MOV     A,R2
        ORL     A,?V0 + 9
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_1
// 3173   {
// 3174     pRsp->status = status;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V0 + 10
        MOVX    @DPTR,A
// 3175     pRsp->scannedChannels = scannedChannels;
        INC     DPTR
        MOV     R0,#?V0 + 4
        LCALL   ?L_MOV_TO_X
// 3176     pRsp->totalTransmissions = totalTransmissions;
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 1
        LCALL   ?Subroutine23 & 0xFFFF
// 3177     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_26:
        MOV     A,?V0 + 2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V0 + 3
        LCALL   ?Subroutine23 & 0xFFFF
// 3178     pRsp->listCount = listCount;
??CrossCallReturnLabel_27:
        INC     DPTR
        INC     DPTR
        MOV     A,?V0 + 14
        MOVX    @DPTR,A
// 3179 
// 3180     // Allocate a buffer big enough to handle the list.
// 3181     if ( listCount > 0 )
        JZ      ??ZDO_ParseMgmtNwkUpdateNotify_1
// 3182     {
// 3183       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V0 + 0,R6
        MOV     ?V0 + 1,R7
        MOV     ?V0 + 2,#0x0
        MOV     R0,#?V0 + 0
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R4,?V0 + 14
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0xa
        MOV     R2,A
        MOV     A,R3
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   ??osal_memcpy?relay
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 24)
// 3184     }
// 3185   }
// 3186 
// 3187   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_1:
        MOV     R2,?V0 + 8
        MOV     R3,?V0 + 9
        LJMP    ?Subroutine6 & 0xFFFF
          CFI EndBlock cfiBlock1971
// 3188 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond1972 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_175
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1973 Using cfiCommon0
          CFI (cfiCond1973) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1973) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond1973) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1973) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1973) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1973) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1973) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1973) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1973) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1973) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1973) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1973) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1973) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1973) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1973) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1973) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1973) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1973) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1973) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1973) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1973) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1973) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1973) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1973) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1973) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1973) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1973) CFA_SP SP+0
          CFI (cfiCond1973) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1974 Using cfiCommon1
          CFI (cfiPicker1974) NoFunction
          CFI (cfiPicker1974) Picker
        LCALL   ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_284:
        RET
          CFI EndBlock cfiCond1972
          CFI EndBlock cfiCond1973
          CFI EndBlock cfiPicker1974

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond1975 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_282
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1976 Using cfiCommon0
          CFI (cfiCond1976) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1976) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_283
          CFI (cfiCond1976) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1976) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1976) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1976) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1976) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1976) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1976) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1976) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1976) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1976) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1976) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1976) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1976) CFA_SP SP+0
          CFI (cfiCond1976) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1977 Using cfiCommon0
          CFI (cfiCond1977) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1977) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_281
          CFI (cfiCond1977) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1977) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1977) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1977) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1977) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1977) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1977) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1977) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1977) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1977) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1977) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1977) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1977) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1977) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1977) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1977) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1977) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1977) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1977) CFA_SP SP+0
          CFI (cfiCond1977) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1978 Using cfiCommon0
          CFI (cfiCond1978) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1978) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_175
          CFI (cfiCond1978) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1978) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1978) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1978) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1978) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1978) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1978) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1978) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1978) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1978) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1978) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1978) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1978) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1978) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1978) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1978) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1978) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1978) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1978) CFA_SP SP+0
          CFI (cfiCond1978) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1979 Using cfiCommon0
          CFI (cfiCond1979) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1979) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_176
          CFI (cfiCond1979) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1979) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1979) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1979) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1979) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1979) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1979) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1979) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1979) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1979) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1979) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1979) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1979) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1979) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1979) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1979) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1979) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1979) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1979) CFA_SP SP+0
          CFI (cfiCond1979) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1980 Using cfiCommon1
          CFI (cfiPicker1980) NoFunction
          CFI (cfiPicker1980) Picker
        LCALL   ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_289:
        ADD     A,#0x0
        RET
          CFI EndBlock cfiCond1975
          CFI EndBlock cfiCond1976
          CFI EndBlock cfiCond1977
          CFI EndBlock cfiCond1978
          CFI EndBlock cfiCond1979
          CFI EndBlock cfiPicker1980

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond1981 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1982 Using cfiCommon0
          CFI (cfiCond1982) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1982) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond1982) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1982) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1982) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1982) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1982) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1982) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1982) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1982) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1982) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1982) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1982) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1982) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1982) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1982) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1982) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1982) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1982) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1982) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1982) CFA_SP SP+0
          CFI (cfiCond1982) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1983 Using cfiCommon0
          CFI (cfiCond1983) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1983) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond1983) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1983) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1983) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1983) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1983) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1983) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1983) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1983) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1983) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1983) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1983) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1983) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1983) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1983) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1983) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1983) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1983) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1983) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1983) CFA_SP SP+0
          CFI (cfiCond1983) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1984 Using cfiCommon1
          CFI (cfiPicker1984) NoFunction
          CFI (cfiPicker1984) Picker
        LCALL   ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_232:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1981
          CFI EndBlock cfiCond1982
          CFI EndBlock cfiCond1983
          CFI EndBlock cfiPicker1984

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond1985 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1986 Using cfiCommon0
          CFI (cfiCond1986) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1986) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_18
          CFI (cfiCond1986) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1986) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1986) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1986) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1986) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1986) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1986) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1986) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1986) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1986) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1986) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1986) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1986) CFA_SP SP+0
          CFI (cfiCond1986) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1987 Using cfiCommon0
          CFI (cfiCond1987) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1987) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_25
          CFI (cfiCond1987) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1987) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1987) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1987) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1987) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1987) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1987) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1987) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1987) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1987) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1987) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1987) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1987) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1987) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1987) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1987) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1987) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1987) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1987) CFA_SP SP+0
          CFI (cfiCond1987) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond1988 Using cfiCommon0
          CFI (cfiCond1988) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1988) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_26
          CFI (cfiCond1988) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1988) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1988) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1988) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1988) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1988) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1988) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1988) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1988) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1988) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1988) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1988) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1988) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1988) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1988) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1988) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1988) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1988) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1988) CFA_SP SP+0
          CFI (cfiCond1988) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond1989 Using cfiCommon0
          CFI (cfiCond1989) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1989) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_27
          CFI (cfiCond1989) R6 load(1, XDATA, add(CFA_XSP16, literal(-24)))
          CFI (cfiCond1989) VB load(1, XDATA, add(CFA_XSP16, literal(-23)))
          CFI (cfiCond1989) V0 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond1989) V1 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond1989) V2 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond1989) V3 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond1989) V4 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond1989) V5 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond1989) V6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1989) V7 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1989) V8 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1989) V9 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1989) V10 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1989) V11 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1989) V12 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1989) V13 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1989) V14 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1989) V15 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1989) CFA_SP SP+0
          CFI (cfiCond1989) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker1990 Using cfiCommon1
          CFI (cfiPicker1990) NoFunction
          CFI (cfiPicker1990) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1985
          CFI EndBlock cfiCond1986
          CFI EndBlock cfiCond1987
          CFI EndBlock cfiCond1988
          CFI EndBlock cfiCond1989
          CFI EndBlock cfiPicker1990
// 3189 
// 3190 /*********************************************************************
// 3191  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3192  *
// 3193  * @brief       This function handles parsing the incoming Management
// 3194  *              Network Update request and starts the request (if needed).
// 3195  *
// 3196  * @param       inMsg - incoming message (request)
// 3197  * @param       pReq - pointer to place to parse message to
// 3198  *
// 3199  * @return      none
// 3200  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 3201 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1991 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3202 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     ?V0 + 0,R4
        MOV     ?V0 + 1,R5
// 3203   uint8 *msg = inMsg->asdu;
        LCALL   ?Subroutine92 & 0xFFFF
// 3204 
// 3205   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_154:
        LCALL   ??osal_build_uint32?relay
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        LCALL   ?XSTORE_R2345
// 3206   msg += 4;
        LCALL   ?Subroutine122 & 0xFFFF
// 3207   pReq->scanDuration = *msg++;
??CrossCallReturnLabel_345:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine52 & 0xFFFF
// 3208 
// 3209   if ( pReq->scanDuration <= 0x05 )
??CrossCallReturnLabel_85:
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDO_ParseMgmtNwkUpdateReq_0
// 3210   {
// 3211     // Request is to scan over channelMask
// 3212     pReq->scanCount = *msg;
        LCALL   ??Subroutine252_0 & 0xFFFF
// 3213   }
??CrossCallReturnLabel_606:
        SJMP    ??ZDO_ParseMgmtNwkUpdateReq_1
// 3214   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JZ      ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3215   {
// 3216     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3217     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_608:
        INC     DPTR
        LCALL   ?Subroutine32 & 0xFFFF
// 3218 
// 3219     if ( pReq->scanDuration == 0xFF )
??CrossCallReturnLabel_45:
        MOV     DPL,?V0 + 0
        MOV     DPH,?V0 + 1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDO_ParseMgmtNwkUpdateReq_3
// 3220     {
// 3221       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL   ?Subroutine68 & 0xFFFF
// 3222     }
// 3223   }
??CrossCallReturnLabel_115:
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX    @DPTR,A
// 3224 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP    ??Subroutine196_0 & 0xFFFF
          CFI EndBlock cfiBlock1991

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond1992 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_153
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1993 Using cfiCommon0
          CFI (cfiCond1993) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1993) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond1993) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1993) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1993) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1993) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1993) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1993) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1993) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1993) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1993) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1993) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1993) CFA_SP SP+0
          CFI (cfiCond1993) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1994 Using cfiCommon1
          CFI (cfiPicker1994) NoFunction
          CFI (cfiPicker1994) Picker
        LCALL   ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_618:
        MOV     R7,A
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV     R1,#0x4
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        RET
          CFI EndBlock cfiCond1992
          CFI EndBlock cfiCond1993
          CFI EndBlock cfiPicker1994

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond1995 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1996 Using cfiCommon0
          CFI (cfiCond1996) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1996) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond1996) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1996) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1996) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1996) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1996) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1996) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1996) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1996) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1996) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1996) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1996) CFA_SP SP+0
          CFI (cfiCond1996) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1997 Using cfiCommon1
          CFI (cfiPicker1997) NoFunction
          CFI (cfiPicker1997) Picker
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_242:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond1995
          CFI EndBlock cfiCond1996
          CFI EndBlock cfiPicker1997

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond1998 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1999 Using cfiCommon0
          CFI (cfiCond1999) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1999) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond1999) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1999) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1999) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1999) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1999) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1999) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1999) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1999) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1999) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1999) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1999) CFA_SP SP+0
          CFI (cfiCond1999) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker2000 Using cfiCommon1
          CFI (cfiPicker2000) NoFunction
          CFI (cfiPicker2000) Picker
        LCALL   ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_595:
        MOV     R6,DPL
        MOV     R7,DPH
        RET
          CFI EndBlock cfiCond1998
          CFI EndBlock cfiCond1999
          CFI EndBlock cfiPicker2000

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_Init?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_StartDevice?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateNwkStatus?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_CompareClusterLists?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_AnyClusterMatches?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessNodeDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessPowerDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessSimpleDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessActiveEPReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ConvertOTAClusters?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMatchDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_UpdateAddrManager?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessServerDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_EndDeviceTimeoutCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLqiReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtNwkDiscReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtRtgReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtDirectJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtLeaveReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessMgmtPermitJoinReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??NLME_PermitJoiningTimeout?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessUserDescSet?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ProcessDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_BuildSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_MatchEndDeviceBind?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_RemoveMatchMemory?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_CopyMatchInfo?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDMatchSendState?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_EndDeviceBindMatchTimeoutCB?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEndDeviceBindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseBindUnbindReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseAddrRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseNodeDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParsePowerDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseEPListRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseServerDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtLqiRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmNwkDiscRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtRtgRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtBindRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseUserDescRsp?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseSimpleDescBuf?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseDeviceAnnce?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateNotify?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??ZDO_ParseMgmtNwkUpdateReq?relay:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        END
// 3225 
// 3226 /*********************************************************************
// 3227 *********************************************************************/
// 
// 11 766 bytes in segment BANKED_CODE
//    294 bytes in segment BANK_RELAYS
//     60 bytes in segment XDATA_Z
// 
// 12 060 bytes of CODE  memory
//     60 bytes of XDATA memory
//
//Errors: none
//Warnings: none
